
bi-parser.y,313
extern char yytext[28,853
extern int yyleng;29,875
struct def *defs;33,941
int ndefs;34,959
top:60,1343
defs:65,1380
def:71,1442
variations:76,1548
variation:82,1638
opt_string:93,2062
list:98,2130
items:105,2209
item:112,2309
makenode 120,2382
makevar 132,2557
makedef 149,2916
yyerror 164,3185

c-parse.y,3176
char *language_string 77,3179
extern int errno;80,3227
#define YYERROR1 86,3312
#define YYDEBUG 89,3420
static int stmt_count;213,7385
static int compstmt_count;214,7408
static char *if_stmt_file;218,7576
static int if_stmt_line;219,7603
static tree current_declspecs 222,7700
static tree prefix_attributes 223,7743
static tree declspec_stack;226,7860
static int undeclared_variable_notice;229,7937
#define YYPRINT(YYPRINT234,8048
program:239,8144
extdefs:258,8625
extdef:263,8716
datadef:278,9081
fndef:310,10209
identifier:367,12282
unop:372,12322
expr:388,12577
exprlist:392,12641
nonnull_exprlist:398,12712
unary_expr:405,12886
sizeof:466,14891
alignof:470,14934
cast_expr:474,14979
expr_no_commas:510,15914
primary:576,18638
string:744,23778
old_style_parm_decls:751,23847
lineno_datadecl:764,24243
datadecls:769,24308
datadecl:780,24644
lineno_decl:802,25528
decls:807,25585
setspecs:818,25900
setattrs:829,26224
decl:833,26316
typed_declspecs:867,27644
reserved_declspecs:874,27834
typed_declspecs_no_prefix_attr:887,28241
reserved_declspecs_no_prefix_attr:894,28491
declmods:911,29109
declmods_no_prefix_attr:922,29358
typed_typespecs:944,30090
reserved_typespecquals:951,30299
typespec:961,30609
typespecqual_reserved:975,30957
initdecls:980,31018
notype_initdecls:985,31067
maybeasm:990,31137
initdcl:999,31287
notype_initdcl:1015,31817
maybe_attribute:1032,32510
attributes:1039,32603
attribute:1046,32703
attribute_list:1051,32780
attrib:1058,32887
any_word:1074,33356
init:1083,33470
initlist_maybe_comma:1103,33976
initlist1:1110,34120
initelt:1117,34249
nested_function:1145,35009
notype_nested_function:1168,35683
declarator:1194,36464
after_type_declarator:1201,36596
parm_declarator:1230,37861
notype_declarator:1255,38881
structsp:1279,39837
maybecomma:1318,41127
maybecomma_warn:1323,41165
component_decl_list:1329,41273
component_decl_list2:1337,41461
component_decl:1355,42131
components:1385,43035
component_declarator:1391,43143
enumlist:1409,43929
enumerator:1421,44108
typename:1428,44254
absdcl:1435,44396
nonempty_type_quals:1441,44485
type_quals:1448,44647
absdcl1:1455,44766
stmts:1483,45843
lineno_stmt_or_labels:1491,45978
xstmts:1499,46137
errstmt:1504,46171
pushlevel:1507,46195
maybe_label_decls:1518,46464
label_decls:1525,46590
label_decl:1530,46647
compstmt_or_error:1544,47036
compstmt_start:1550,47094
compstmt:1552,47137
simple_if:1581,48223
if_prefix:1589,48410
do_stmt_start:1603,48851
save_filename:1616,49183
save_lineno:1620,49229
lineno_labeled_stmt:1624,49265
lineno_stmt_or_label:1634,49437
stmt_or_label:1639,49521
stmt:1647,49649
all_iter_stmt:1849,56862
all_iter_stmt_simple:1854,56937
label:1911,58568
maybe_type_qual:1993,61156
xexpr:2001,61317
asm_operands:2009,61500
nonnull_asm_operands:2014,61576
asm_operand:2020,61686
asm_clobbers:2025,61763
parmlist:2034,62060
parmlist_1:2044,62231
parmlist_2:2062,62782
parms:2080,63374
parm:2089,63552
parmlist_or_identifiers:2141,65591
parmlist_or_identifiers_1:2151,65792
identifiers:2162,66089
identifiers_or_typenames:2170,66310
extension:2177,66497

cexp.y,2273
# define STDC_HEADERS 39,1358
typedef unsigned char U_CHAR;U_CHAR61,1660
struct arglist arglist64,1760
#define NULL 74,1927
#define GENERIC_PTR 79,2037
#define GENERIC_PTR 81,2070
#define NULL_PTR 86,2129
#  define HOST_WIDE_INT 95,2373
#  define unsigned_HOST_WIDE_INT 96,2406
#   define HOST_WIDE_INT 99,2551
#   define HOST_WIDE_INT 102,2691
#   define HOST_WIDE_INT 104,2729
#define unsigned_HOST_WIDE_INT 111,2829
#define CHAR_BIT 115,2908
#define HOST_BITS_PER_WIDE_INT 119,2966
# define __attribute__(__attribute__123,3099
#  define PROTO(PROTO128,3215
#  define PROTO(PROTO130,3249
# define VA_START(VA_START136,3360
# define PRINTF_ALIST(PRINTF_ALIST137,3416
# define PRINTF_DCL(PRINTF_DCL138,3458
# define PRINTF_PROTO(PRINTF_PROTO139,3483
# define VA_START(VA_START142,3602
# define PRINTF_ALIST(PRINTF_ALIST143,3653
# define PRINTF_DCL(PRINTF_DCL144,3694
# define PRINTF_PROTO(PRINTF_PROTO145,3737
# define vfprintf(vfprintf146,3818
#define PRINTF_PROTO_1(PRINTF_PROTO_1156,4086
static void yyerror PROTO(161,4224
#define CHAR_TYPE_SIZE 189,4930
#define INT_TYPE_SIZE 193,4997
#define LONG_TYPE_SIZE 197,5064
#define WCHAR_TYPE_SIZE 201,5133
#define MAX_CHAR_TYPE_SIZE 205,5206
#define MAX_INT_TYPE_SIZE 209,5282
#define MAX_LONG_TYPE_SIZE 213,5357
#define MAX_WCHAR_TYPE_SIZE 217,5435
#define MAX_CHAR_TYPE_MASK 220,5487
#define MAX_WCHAR_TYPE_MASK 224,5651
#define overflow_sum_sign(overflow_sum_sign235,6300
#define SIGNED 254,7040
#define UNSIGNED 255,7060
start 288,7563
exp1	293,7667
exp	301,7842
exp	330,8628
keywords 472,12611
static char *lexptr;498,13355
parse_number 507,13625
struct token token600,15876
static struct token tokentab2[605,15926
yylex 622,16212
parse_escape 916,22920
yyerror 1014,24812
integer_overflow 1023,24932
left_shift 1030,25075
right_shift 1044,25457
parse_c_expression 1066,26169
extern int yydebug;1089,26682
int pedantic;1092,26710
int traditional;1093,26724
main 1100,26871
unsigned char is_idchar[1128,27384
unsigned char is_idstart[1130,27479
unsigned char is_space[1132,27569
initialize_random_junk 1138,27685
error 1170,28353
pedwarn 1183,28559
warning 1196,28769
check_assertion 1209,28978
lookup 1219,29170
xmalloc 1228,29323

acconfig.h,0

assert.h,253
#define assert(assert7,136
#define assert(assert12,195
#define __assert(__assert15,300
extern void __eprintf 26,533
#define assert(assert34,763
#define __assert(__assert37,869
#define assert(assert45,1138
#define __assert(__assert48,1243

auto-config.h,281
#define SYS_SIGLIST_DECLARED 19,721
#define HAVE_STRERROR 22,802
#define HAVE_LIMITS_H 25,881
#define HAVE_STDDEF_H 28,960
#define HAVE_STDLIB_H 31,1039
#define HAVE_STRING_H 34,1118
#define HAVE_STRINGS_H 37,1198
#define HAVE_TIME_H 40,1276
#define HAVE_UNISTD_H 43,1353

basic-block.h,1349
typedef bitmap regset;regset24,831
#define CLEAR_REG_SET(CLEAR_REG_SET27,956
#define COPY_REG_SET(COPY_REG_SET30,1057
#define AND_REG_SET(AND_REG_SET33,1168
#define AND_COMPL_REG_SET(AND_COMPL_REG_SET36,1310
#define IOR_REG_SET(IOR_REG_SET40,1464
#define IOR_AND_COMPL_REG_SET(IOR_AND_COMPL_REG_SET43,1618
#define CLEAR_REGNO_REG_SET(CLEAR_REGNO_REG_SET47,1761
#define SET_REGNO_REG_SET(SET_REGNO_REG_SET50,1878
#define REGNO_REG_SET_P(REGNO_REG_SET_P53,2002
#define REG_SET_TO_HARD_REG_SET(REG_SET_TO_HARD_REG_SET56,2134
#define EXECUTE_IF_SET_IN_REG_SET(EXECUTE_IF_SET_IN_REG_SET67,2548
#define EXECUTE_IF_AND_COMPL_IN_REG_SET(EXECUTE_IF_AND_COMPL_IN_REG_SET73,2882
#define EXECUTE_IF_AND_IN_REG_SET(EXECUTE_IF_AND_IN_REG_SET79,3217
#define OBSTACK_ALLOC_REG_SET(OBSTACK_ALLOC_REG_SET83,3401
#define ALLOCA_REG_SET(ALLOCA_REG_SET86,3516
#define FREE_REG_SET(FREE_REG_SET89,3627
#define INIT_ONCE_REG_SET(INIT_ONCE_REG_SET92,3736
#define MAX_REGNO_REG_SET(MAX_REGNO_REG_SET97,3992
extern int n_basic_blocks;101,4104
extern rtx *basic_block_head;105,4198
extern rtx *basic_block_end;109,4294
extern regset *basic_block_live_at_start;114,4444
extern regset regs_live_at_setjmp;118,4539
#define REG_BLOCK_UNKNOWN 127,4962
#define REG_BLOCK_GLOBAL 128,4991
#define REG_BASIC_BLOCK(REG_BASIC_BLOCK130,5020

bc-emit.h,199
struct bc_symbc_sym4,140
struct bc_segsymbc_segsym27,574
struct bc_segrelocbc_segreloc35,704
struct bc_segbc_seg48,914
struct bc_labelbc_label68,1310
struct bc_labelrefbc_labelref89,1779

bc-optab.h,1648
struct binary_operatorbinary_operator27,967
extern struct binary_operator optab_plus_expr[35,1095
extern struct binary_operator optab_minus_expr[36,1144
extern struct binary_operator optab_mult_expr[37,1194
extern struct binary_operator optab_trunc_div_expr[38,1243
extern struct binary_operator optab_trunc_mod_expr[39,1297
extern struct binary_operator optab_rdiv_expr[40,1351
extern struct binary_operator optab_bit_and_expr[41,1400
extern struct binary_operator optab_bit_ior_expr[42,1452
extern struct binary_operator optab_bit_xor_expr[43,1504
extern struct binary_operator optab_lshift_expr[44,1556
extern struct binary_operator optab_rshift_expr[45,1607
extern struct binary_operator optab_truth_and_expr[46,1658
extern struct binary_operator optab_truth_or_expr[47,1712
extern struct binary_operator optab_lt_expr[48,1765
extern struct binary_operator optab_le_expr[49,1812
extern struct binary_operator optab_ge_expr[50,1859
extern struct binary_operator optab_gt_expr[51,1906
extern struct binary_operator optab_eq_expr[52,1953
extern struct binary_operator optab_ne_expr[53,2000
struct unary_operatorunary_operator55,2048
extern struct unary_operator optab_negate_expr[62,2153
extern struct unary_operator optab_bit_not_expr[63,2203
extern struct unary_operator optab_truth_not_expr[64,2254
struct increment_operatorincrement_operator66,2308
extern struct increment_operator optab_predecrement_expr[72,2392
extern struct increment_operator optab_preincrement_expr[73,2452
extern struct increment_operator optab_postdecrement_expr[74,2512
extern struct increment_operator optab_postincrement_expr[75,2573

bc-typecd.h,428
#define TYPECODE_H22,819
enum typecodetypecode24,839
#define DEFTYPECODE(DEFTYPECODE26,855
  LAST_AND_UNUSED_TYPECODE30,954
#define TYPECODE_INTEGER_P(TYPECODE_INTEGER_P34,1030
#define TYPECODE_UNSIGNED_P(TYPECODE_UNSIGNED_P37,1148
#define TYPECODE_SIGNED_P(TYPECODE_SIGNED_P41,1290
#define TYPECODE_FLOAT_P(TYPECODE_FLOAT_P45,1435
#define TYPECODE_ARITH_P(TYPECODE_ARITH_P49,1590
#define NUM_TYPECODES 52,1691

bi-defs.h,139
struct nodenode22,792
struct variationvariation28,845
struct defdef38,992
extern struct def *defs;46,1097
extern int ndefs;47,1122

bi-parser.h,98
} YYSTYPE;YYSTYPE7,103
#define	DEFOP	8,114
#define	STRING	9,132
extern YYSTYPE yylval;12,153

bi-run.h,500
#define MAXLITERALS 21,797
struct arityvecarityvec23,820
struct argtypeargtype31,923
struct callinfocallinfo37,1036
struct bytecodebytecode46,1346
#define INTERP_BPC 56,1680
#define INTERP_BPI 57,1722
#define min(min62,1806
#define LM(LM70,1942
#define HM(HM71,1975
#define EXTEND(EXTEND79,2250
#define BI_PARAMS(BI_PARAMS109,3416
#define SHIFT_IN_BITS(SHIFT_IN_BITS128,4147
#define OR_IN_BITS(OR_IN_BITS136,4384
#define CALL(CALL151,4991
#define PROCRET(PROCRET159,5344

bitmap.h,888
#define BITMAP_ELEMENT_WORDS 24,894
#define BITMAP_ELEMENT_ALL_BITS 31,1145
typedef struct bitmap_element_defbitmap_element_def39,1508
} bitmap_element;bitmap_element45,1798
typedef struct bitmap_head_def bitmap_head_def48,1852
} bitmap_head, *bitmap;bitmap52,2056
enum bitmap_bits bitmap_bits55,2142
  BITMAP_AND,56,2161
  BITMAP_AND_COMPL,57,2202
  BITMAP_IOR	58,2250
extern bitmap_element *bitmap_free;62,2312
extern bitmap_element bitmap_zero;63,2382
#define BITMAP_OBSTACK_ALLOC(BITMAP_OBSTACK_ALLOC101,3695
#define BITMAP_ALLOCA(BITMAP_ALLOCA105,3854
#define BITMAP_FREE(BITMAP_FREE109,4015
#define BITMAP_INIT_ONCE(BITMAP_INIT_ONCE119,4230
#define EXECUTE_IF_SET_IN_BITMAP(EXECUTE_IF_SET_IN_BITMAP124,4396
#define EXECUTE_IF_AND_COMPL_IN_BITMAP(EXECUTE_IF_AND_COMPL_IN_BITMAP181,6142
#define EXECUTE_IF_AND_IN_BITMAP(EXECUTE_IF_AND_IN_BITMAP248,8348

bytecode.h,1396
extern int output_bytecode;22,807
extern int stack_depth;23,835
extern int max_stack_depth;24,859
#define bc_emit_bytecode_DI_const(bc_emit_bytecode_DI_const28,954
#define MACHINE_SEG_ALIGN 53,1783
#define INT_ALIGN 54,1811
#define PTR_ALIGN 55,1831
#define NAMES_HAVE_UNDERSCORES56,1851
#define BC_NOP 57,1882
#define BC_GLOBALIZE_LABEL(BC_GLOBALIZE_LABEL58,1903
#define BC_OUTPUT_COMMON(BC_OUTPUT_COMMON59,1947
#define BC_OUTPUT_BSS(BC_OUTPUT_BSS60,2004
#define BC_OUTPUT_LOCAL(BC_OUTPUT_LOCAL61,2061
#define BC_OUTPUT_ALIGN(BC_OUTPUT_ALIGN62,2118
#define BC_OUTPUT_LABEL(BC_OUTPUT_LABEL63,2162
#define BC_OUTPUT_SKIP(BC_OUTPUT_SKIP64,2206
#define BC_OUTPUT_LABELREF(BC_OUTPUT_LABELREF65,2250
#define BC_OUTPUT_FLOAT(BC_OUTPUT_FLOAT66,2294
#define BC_OUTPUT_DOUBLE(BC_OUTPUT_DOUBLE67,2338
#define BC_OUTPUT_BYTE(BC_OUTPUT_BYTE68,2382
#define BC_OUTPUT_FILE 69,2426
#define BC_OUTPUT_ASCII 70,2465
#define BC_OUTPUT_IDENT 71,2506
#define BCXSTR(BCXSTR72,2547
#define BC_WRITE_FILE(BC_WRITE_FILE73,2586
#define BC_WRITE_SEGSYM(BC_WRITE_SEGSYM74,2630
#define BC_WRITE_RELOC_ENTRY(BC_WRITE_RELOC_ENTRY75,2674
#define BC_START_BYTECODE_LINE(BC_START_BYTECODE_LINE76,2732
#define BC_WRITE_BYTECODE(BC_WRITE_BYTECODE77,2776
#define BC_WRITE_RTL(BC_WRITE_RTL78,2823
#define BC_EMIT_TRAMPOLINE(BC_EMIT_TRAMPOLINE79,2867
#define VALIDATE_STACK 80,2921

bytetypes.h,642
typedef __signed__ char QItype;QItype5,98
typedef unsigned char QUtype;QUtype6,130
typedef __signed__ short int HItype;HItype7,160
typedef unsigned short int HUtype;HUtype8,197
typedef __signed__ long int SItype;SItype9,232
typedef unsigned long int SUtype;SUtype10,268
typedef __signed__ long long int DItype;DItype11,302
typedef unsigned long long int DUtype;DUtype12,343
typedef float SFtype;SFtype13,382
typedef double DFtype;DFtype14,404
typedef long double XFtype;XFtype15,427
typedef char *Ptype;Ptype16,455
typedef int Ttype;Ttype17,476
typedef union stacktypestacktype20,497
} stacktype;stacktype35,727

c-gperf.h,263
struct resword resword4,247
#define TOTAL_KEYWORDS 6,307
#define MIN_WORD_LENGTH 7,333
#define MAX_WORD_LENGTH 8,359
#define MIN_HASH_VALUE 9,386
#define MAX_HASH_VALUE 10,412
hash 17,536
static struct resword wordlist[52,1616
is_reserved_word 169,5396

c-lex.h,785
enum ridrid23,812
  RID_UNUSED,25,823
  RID_INT,26,837
  RID_CHAR,27,848
  RID_FLOAT,28,860
  RID_DOUBLE,29,873
  RID_VOID,30,887
  RID_UNUSED1,31,899
  RID_UNSIGNED,33,915
  RID_SHORT,34,931
  RID_LONG,35,944
  RID_AUTO,36,956
  RID_STATIC,37,968
  RID_EXTERN,38,982
  RID_REGISTER,39,996
  RID_TYPEDEF,40,1012
  RID_SIGNED,41,1027
  RID_CONST,42,1041
  RID_VOLATILE,43,1054
  RID_INLINE,44,1070
  RID_NOALIAS,45,1084
  RID_ITERATOR,46,1099
  RID_COMPLEX,47,1115
  RID_IN,49,1131
  RID_OUT,50,1141
  RID_INOUT,51,1152
  RID_BYCOPY,52,1165
  RID_ONEWAY,53,1179
  RID_ID,54,1193
  RID_MAX56,1204
#define NORID 59,1218
#define RID_FIRST_MODIFIER 61,1244
extern tree ridpointers[66,1432
extern tree lastiddecl;72,1753
extern char *token_buffer;74,1778

c-pragma.h,285
#define HANDLE_PRAGMA_WEAK 24,923
enum pragma_statepragma_state27,972
  ps_start,29,992
  ps_done,30,1004
  ps_bad,31,1015
  ps_weak,32,1025
  ps_name,33,1036
  ps_equals,34,1047
  ps_value,35,1060
  ps_pack,36,1072
  ps_left,37,1083
  ps_align,38,1094
  ps_right39,1106

c-tree.h,4880
#define _C_TREE_H22,840
struct lang_identifierlang_identifier30,1139
#define IDENTIFIER_GLOBAL_VALUE(IDENTIFIER_GLOBAL_VALUE42,1514
#define IDENTIFIER_LOCAL_VALUE(IDENTIFIER_LOCAL_VALUE46,1691
#define IDENTIFIER_LABEL_VALUE(IDENTIFIER_LABEL_VALUE50,1883
#define IDENTIFIER_LIMBO_VALUE(IDENTIFIER_LIMBO_VALUE54,2086
#define IDENTIFIER_IMPLICIT_DECL(IDENTIFIER_IMPLICIT_DECL58,2300
#define IDENTIFIER_ERROR_LOCUS(IDENTIFIER_ERROR_LOCUS62,2540
extern int pedantic;71,2980
#define C_TYPE_FIELDS_READONLY(C_TYPE_FIELDS_READONLY74,3080
#define C_TYPE_FIELDS_VOLATILE(C_TYPE_FIELDS_VOLATILE77,3219
#define C_TYPE_BEING_DEFINED(C_TYPE_BEING_DEFINED81,3398
struct lang_typelang_type84,3525
#define C_DECLARED_LABEL_FLAG(C_DECLARED_LABEL_FLAG92,3696
#define C_TYPE_VARIABLE_SIZE(C_TYPE_VARIABLE_SIZE96,3889
#define C_DECL_VARIABLE_SIZE(C_DECL_VARIABLE_SIZE97,3948
#define C_EXP_ORIGINAL_CODE(C_EXP_ORIGINAL_CODE101,4107
#define C_MISSING_PROTOTYPE_WARNED(C_MISSING_PROTOTYPE_WARNED107,4368
#define C_SET_EXP_ORIGINAL_CODE(C_SET_EXP_ORIGINAL_CODE111,4476
#define C_TYPEDEF_EXPLICITLY_SIGNED(C_TYPEDEF_EXPLICITLY_SIGNED115,4637
#define C_DECL_ANTICIPATED(C_DECL_ANTICIPATED120,4901
#define TYPE_ACTUAL_ARG_TYPES(TYPE_ACTUAL_ARG_TYPES125,5133
#define DECL_C_BIT_FIELD(DECL_C_BIT_FIELD128,5269
#define C_PROMOTING_INTEGER_TYPE_P(C_PROMOTING_INTEGER_TYPE_P133,5508
#define ITERATOR_P(ITERATOR_P142,5950
#define ITERATOR_BOUND_P(ITERATOR_BOUND_P146,6093
extern tree char_array_type_node;196,8795
extern tree char_type_node;197,8829
extern tree const_ptr_type_node;198,8857
extern tree const_string_type_node;199,8890
extern tree default_function_type;200,8926
extern tree double_ftype_double;201,8961
extern tree double_ftype_double_double;202,8994
extern tree double_type_node;203,9034
extern tree float_type_node;204,9064
extern tree intDI_type_node;205,9093
extern tree intHI_type_node;206,9122
extern tree intQI_type_node;207,9151
extern tree intSI_type_node;208,9180
extern tree int_array_type_node;209,9209
extern tree int_ftype_cptr_cptr_sizet;210,9242
extern tree int_ftype_int;211,9281
extern tree int_ftype_ptr_ptr_int;212,9308
extern tree int_ftype_string_string;213,9343
extern tree integer_type_node;214,9380
extern tree long_double_type_node;215,9411
extern tree long_ftype_long;216,9446
extern tree long_integer_type_node;217,9475
extern tree long_long_integer_type_node;218,9511
extern tree long_long_unsigned_type_node;219,9552
extern tree long_unsigned_type_node;220,9594
extern tree complex_integer_type_node;221,9631
extern tree complex_float_type_node;222,9670
extern tree complex_double_type_node;223,9707
extern tree complex_long_double_type_node;224,9745
extern tree ptr_type_node;225,9788
extern tree ptrdiff_type_node;226,9815
extern tree short_integer_type_node;227,9846
extern tree short_unsigned_type_node;228,9883
extern tree signed_char_type_node;229,9921
extern tree signed_wchar_type_node;230,9956
extern tree string_ftype_ptr_ptr;231,9992
extern tree string_type_node;232,10026
extern tree unsigned_char_type_node;233,10056
extern tree unsigned_intDI_type_node;234,10093
extern tree unsigned_intHI_type_node;235,10131
extern tree unsigned_intQI_type_node;236,10169
extern tree unsigned_intSI_type_node;237,10207
extern tree unsigned_type_node;238,10245
extern tree unsigned_wchar_type_node;239,10277
extern tree void_ftype_ptr_int_int;240,10315
extern tree void_ftype_ptr_ptr_int;241,10351
extern tree void_type_node;242,10387
extern tree wchar_array_type_node;243,10415
extern tree wchar_type_node;244,10450
extern tree boolean_type_node;245,10479
extern tree boolean_true_node;246,10510
extern tree boolean_false_node;247,10541
extern int current_function_returns_value;378,18006
extern int current_function_returns_null;383,18166
extern int skip_evaluation;388,18344
extern int dollars_in_ident;392,18424
extern int flag_cond_mismatch;397,18561
extern int flag_no_asm;401,18650
extern int flag_hosted;405,18743
extern int flag_no_ident;409,18818
extern int warn_implicit;413,18901
extern int warn_write_strings;419,19126
extern int warn_pointer_arith;424,19258
extern int warn_strict_prototypes;428,19365
extern int warn_redundant_decls;433,19506
extern int warn_nested_externs;441,19834
extern int warn_cast_qual;446,19978
extern int warn_bad_function_cast;452,20214
extern int warn_traditional;456,20326
extern int warn_format;460,20419
extern int warn_char_subscripts;464,20495
extern int warn_conversion;468,20606
extern int warn_main;472,20670
extern int flag_traditional;476,20753
extern int flag_allow_single_precision;480,20880
extern int warn_parentheses;484,20982
extern int warn_missing_braces;488,21069
extern int warn_sign_compare;492,21163
extern int system_header_p;501,21408
extern int doing_objc_thang;505,21476

conditions.h,524
#define CC_STATUS_MDEP 48,2039
#define CC_STATUS_MDEP_INIT 52,2102
typedef struct {int flags; rtx value1, value2; CC_STATUS_MDEP mdep;} CC_STATUS;CC_STATUS55,2140
extern CC_STATUS cc_prev_status;59,2312
extern CC_STATUS cc_status;63,2453
#define CC_REVERSED 69,2645
#define CC_NOT_POSITIVE 76,2982
#define CC_NOT_NEGATIVE 84,3356
#define CC_NO_OVERFLOW 90,3642
#define CC_Z_IN_NOT_N 94,3779
#define CC_Z_IN_N 98,3897
#define CC_INVERTED 105,4229
#define CC_NOT_SIGNED 109,4379
#define CC_STATUS_INIT 114,4508

config.h,0

convert.h,0

cpphash.h,242
union hashval hashval3,122
struct hashnode hashnode12,220
typedef struct hashnode HASHNODE;HASHNODE24,713
#define HASHSIZE 33,1132
static HASHNODE *hashtab[34,1154
#define HASHSTEP(HASHSTEP35,1190
#define MAKE_POS(MAKE_POS36,1232

cpplib.h,3922
typedef unsigned char U_CHAR;U_CHAR30,1079
typedef struct cpp_reader cpp_reader;cpp_reader32,1110
typedef struct cpp_buffer cpp_buffer;cpp_buffer33,1148
typedef struct cpp_options cpp_options;cpp_options34,1186
typedef struct hashnode cpp_hashnode;cpp_hashnode35,1226
enum cpp_token cpp_token37,1265
  CPP_EOF 38,1282
  CPP_OTHER 39,1298
  CPP_COMMENT 40,1315
  CPP_HSPACE,41,1334
  CPP_VSPACE,42,1348
  CPP_NAME,43,1398
  CPP_NUMBER,44,1410
  CPP_CHAR,45,1424
  CPP_STRING,46,1436
  CPP_DIRECTIVE,47,1450
  CPP_LPAREN,48,1467
  CPP_RPAREN,49,1493
  CPP_LBRACE,50,1519
  CPP_RBRACE,51,1545
  CPP_COMMA,52,1571
  CPP_SEMICOLON,53,1597
  CPP_3DOTS,54,1623
  CPP_ANDAND,56,1657
  CPP_OROR,57,1682
  CPP_LSH,58,1707
  CPP_RSH,59,1732
  CPP_EQL,60,1757
  CPP_NEQ,61,1782
  CPP_LEQ,62,1807
  CPP_GEQ,63,1832
  CPP_PLPL,64,1857
  CPP_MINMIN,65,1882
  CPP_POP68,1976
#define PARAMS(PARAMS73,2021
#define PARAMS(PARAMS75,2047
typedef enum cpp_token (*parse_underflow_t)parse_underflow_t79,2097
typedef int (*parse_cleanup_t)parse_cleanup_t80,2165
struct parse_marker parse_marker85,2318
#define IMPORT_HASH_SIZE 106,3113
struct import_file import_file108,3142
#define CPP_LINE_BASE(CPP_LINE_BASE116,3306
struct cpp_buffer cpp_buffer118,3366
typedef struct assertion_hashnode ASSERTION_HASHNODE;ASSERTION_HASHNODE161,4786
#define ASSERTION_HASHSIZE 162,4840
#define CPP_STACK_MAX 166,4999
struct cpp_reader cpp_reader172,5230
#define CPP_FATAL_LIMIT 268,8106
#define CPP_FATAL_ERRORS(CPP_FATAL_ERRORS270,8179
#define CPP_BUF_PEEK(CPP_BUF_PEEK272,8251
#define CPP_BUF_GET(CPP_BUF_GET274,8342
#define CPP_FORWARD(CPP_FORWARD276,8434
#define CPP_OUT_BUFFER(CPP_OUT_BUFFER280,8538
#define CPP_WRITTEN(CPP_WRITTEN283,8656
#define CPP_PWRITTEN(CPP_PWRITTEN284,8724
#define CPP_RESERVE(CPP_RESERVE287,8848
#define CPP_PUTS_Q(CPP_PUTS_Q293,9075
#define CPP_PUTS(CPP_PUTS296,9248
#define CPP_PUTC_Q(CPP_PUTC_Q298,9406
#define CPP_PUTC(CPP_PUTC300,9539
#define CPP_NUL_TERMINATE_Q(CPP_NUL_TERMINATE_Q302,9666
#define CPP_NUL_TERMINATE(CPP_NUL_TERMINATE303,9723
#define CPP_ADJUST_WRITTEN(CPP_ADJUST_WRITTEN304,9801
#define CPP_SET_WRITTEN(CPP_SET_WRITTEN305,9869
#define CPP_OPTIONS(CPP_OPTIONS307,9950
#define CPP_BUFFER(CPP_BUFFER309,10010
#define CPP_PREV_BUFFER(CPP_PREV_BUFFER310,10054
#define CPP_NULL_BUFFER(CPP_NULL_BUFFER312,10137
struct cpp_options cpp_options315,10247
#define CPP_TRADITIONAL(CPP_TRADITIONAL508,15861
#define CPP_WARN_UNDEF(CPP_WARN_UNDEF509,15927
#define CPP_C89(CPP_C89510,15990
#define CPP_PEDANTIC(CPP_PEDANTIC511,16039
#define CPP_PRINT_DEPS(CPP_PRINT_DEPS512,16099
extern char *progname;516,16215
enum node_type node_type526,16696
 T_DEFINE 527,16713
 T_INCLUDE,528,16756
 T_INCLUDE_NEXT,529,16797
 T_IMPORT,530,16848
 T_IFDEF,531,16892
 T_IFNDEF,532,16929
 T_IF,533,16968
 T_ELSE,534,17000
 T_PRAGMA,535,17023
 T_ELIF,536,17050
 T_UNDEF,537,17073
 T_LINE,538,17098
 T_ERROR,539,17121
 T_WARNING,540,17146
 T_ENDIF,541,17175
 T_SCCS,542,17200
 T_IDENT,543,17243
 T_ASSERT,544,17288
 T_UNASSERT,545,17338
 T_SPECLINE,546,17392
 T_DATE,547,17437
 T_FILE,548,17463
 T_BASE_FILE,549,17489
 T_INCLUDE_LEVEL,550,17525
 T_VERSION,551,17569
 T_SIZE_TYPE,552,17601
 T_PTRDIFF_TYPE,553,17639
 T_WCHAR_TYPE,554,17683
 T_USER_LABEL_PREFIX_TYPE,555,17723
 T_REGISTER_PREFIX_TYPE,556,17780
 T_TIME,557,17835
 T_CONST,558,17861
 T_MACRO,559,17912
 T_DISABLED,560,17955
 T_SPEC_DEFINED,561,18014
 T_PCSTRING,562,18087
 T_UNUSED	563,18147
typedef struct macrodef MACRODEF;MACRODEF567,18247
struct macrodefmacrodef568,18281
typedef struct definition DEFINITION;DEFINITION596,19443
struct definition definition597,19481
extern unsigned char is_idchar[626,20599
struct if_stack if_stack631,20746
typedef struct if_stack IF_STACK_FRAME;IF_STACK_FRAME641,21202

dbxstclass.h,276
#define C_GSYM	5,169
#define C_LSYM	6,190
#define C_PSYM	7,211
#define C_RSYM	8,232
#define C_RPSYM	9,253
#define C_STSYM	10,275
#define C_BCOMM	12,298
#define C_ECOML	13,320
#define C_ECOMM	14,342
#define C_DECL	15,364
#define C_ENTRY	16,385
#define C_FUN	17,407

defaults.h,480
#define ASM_FORMAT_PRIVATE_NAME(ASM_FORMAT_PRIVATE_NAME29,1187
#define ASM_STABD_OP 43,1636
#define ASM_OUTPUT_ADDR_VEC_ELT(ASM_OUTPUT_ADDR_VEC_ELT50,1847
#define ASM_OUTPUT_ASCII(ASM_OUTPUT_ASCII60,2136
#define ASM_IDENTIFY_LANGUAGE(ASM_IDENTIFY_LANGUAGE104,3908
#define ASM_OUTPUT_DEF(ASM_OUTPUT_DEF111,4092
#define ASM_OUTPUT_LABELREF(ASM_OUTPUT_LABELREF124,4457
#define SUPPORTS_WEAK 131,4688
#define SUPPORTS_WEAK 133,4718
#define DWARF2_UNWIND_INFO 140,4967

demangle.h,1011
#define DEMANGLE_H21,832
#define PARAMS(PARAMS25,889
#define DMGL_NO_OPTS	32,1046
#define DMGL_PARAMS	33,1095
#define DMGL_ANSI	34,1152
#define DMGL_JAVA	35,1214
#define DMGL_AUTO	37,1282
#define DMGL_GNU	38,1309
#define DMGL_LUCID	39,1335
#define DMGL_ARM	40,1364
#define DMGL_STYLE_MASK 42,1470
extern enum demangling_stylesdemangling_styles52,1905
  unknown_demangling 54,1937
  auto_demangling 55,1963
  auto_demangling = DMGL_AUTO,55,1963
  gnu_demangling 56,1994
  gnu_demangling = DMGL_GNU,56,1994
  lucid_demangling 57,2023
  lucid_demangling = DMGL_LUCID,57,2023
  arm_demangling 58,2056
  arm_demangling = DMGL_ARM58,2056
#define AUTO_DEMANGLING_STYLE_STRING	63,2175
#define GNU_DEMANGLING_STYLE_STRING	64,2219
#define LUCID_DEMANGLING_STYLE_STRING	65,2261
#define ARM_DEMANGLING_STYLE_STRING	66,2307
#define CURRENT_DEMANGLING_STYLE 70,2410
#define AUTO_DEMANGLING 71,2468
#define GNU_DEMANGLING 72,2539
#define LUCID_DEMANGLING 73,2608
#define ARM_DEMANGLING 74,2681

dwarf.h,16658
enum dwarf_tag dwarf_tag34,1295
    TAG_padding	35,1312
    TAG_padding			= 0x0000,35,1312
    TAG_array_type	36,1340
    TAG_array_type		= 0x0001,36,1340
    TAG_class_type	37,1370
    TAG_class_type		= 0x0002,37,1370
    TAG_entry_point	38,1400
    TAG_entry_point		= 0x0003,38,1400
    TAG_enumeration_type	39,1431
    TAG_enumeration_type	= 0x0004,39,1431
    TAG_formal_parameter	40,1466
    TAG_formal_parameter	= 0x0005,40,1466
    TAG_global_subroutine	41,1501
    TAG_global_subroutine	= 0x0006,41,1501
    TAG_global_variable	42,1537
    TAG_global_variable		= 0x0007,42,1537
    TAG_label	45,1634
    TAG_label			= 0x000a,45,1634
    TAG_lexical_block	46,1660
    TAG_lexical_block		= 0x000b,46,1660
    TAG_local_variable	47,1693
    TAG_local_variable		= 0x000c,47,1693
    TAG_member	48,1727
    TAG_member			= 0x000d,48,1727
    TAG_pointer_type	50,1783
    TAG_pointer_type		= 0x000f,50,1783
    TAG_reference_type	51,1815
    TAG_reference_type		= 0x0010,51,1815
    TAG_compile_unit	52,1849
    TAG_compile_unit		= 0x0011,52,1849
    TAG_string_type	53,1881
    TAG_string_type		= 0x0012,53,1881
    TAG_structure_type	54,1912
    TAG_structure_type		= 0x0013,54,1912
    TAG_subroutine	55,1946
    TAG_subroutine		= 0x0014,55,1946
    TAG_subroutine_type	56,1976
    TAG_subroutine_type		= 0x0015,56,1976
    TAG_typedef	57,2011
    TAG_typedef			= 0x0016,57,2011
    TAG_union_type	58,2039
    TAG_union_type		= 0x0017,58,2039
    TAG_unspecified_parameters	59,2069
    TAG_unspecified_parameters	= 0x0018,59,2069
    TAG_variant	60,2110
    TAG_variant			= 0x0019,60,2110
    TAG_common_block	61,2138
    TAG_common_block		= 0x001a,61,2138
    TAG_common_inclusion	62,2170
    TAG_common_inclusion	= 0x001b,62,2170
    TAG_inheritance	63,2205
    TAG_inheritance		= 0x001c,63,2205
    TAG_inlined_subroutine	64,2236
    TAG_inlined_subroutine	= 0x001d,64,2236
    TAG_module	65,2273
    TAG_module			= 0x001e,65,2273
    TAG_ptr_to_member_type	66,2300
    TAG_ptr_to_member_type	= 0x001f,66,2300
    TAG_set_type	67,2337
    TAG_set_type		= 0x0020,67,2337
    TAG_subrange_type	68,2365
    TAG_subrange_type		= 0x0021,68,2365
    TAG_with_stmt	69,2398
    TAG_with_stmt		= 0x0022,69,2398
    TAG_format_label	73,2454
    TAG_format_label		= 0x8000,73,2454
    TAG_namelist	74,2523
    TAG_namelist		= 0x8001,74,2523
    TAG_function_template	75,2573
    TAG_function_template	= 0x8002,75,2573
    TAG_class_template	76,2624
    TAG_class_template		= 0x8003 76,2624
#define TAG_lo_user	79,2677
#define TAG_hi_user	80,2746
#define TAG_source_file 81,2813
enum dwarf_form dwarf_form85,2919
    FORM_ADDR	86,2937
    FORM_ADDR	= 0x1,86,2937
    FORM_REF	87,2958
    FORM_REF	= 0x2,87,2958
    FORM_BLOCK2	88,2978
    FORM_BLOCK2	= 0x3,88,2978
    FORM_BLOCK4	89,3001
    FORM_BLOCK4	= 0x4,89,3001
    FORM_DATA2	90,3024
    FORM_DATA2	= 0x5,90,3024
    FORM_DATA4	91,3046
    FORM_DATA4	= 0x6,91,3046
    FORM_DATA8	92,3068
    FORM_DATA8	= 0x7,92,3068
    FORM_STRING	93,3090
    FORM_STRING	= 0x893,3090
enum dwarf_attribute dwarf_attribute98,3151
    AT_sibling	99,3174
    AT_sibling			= (0x0010|99,3174
    AT_sibling			= (0x0010|FORM_REF)99,3174
    AT_location	100,3212
    AT_location			= (0x0020|100,3212
    AT_location			= (0x0020|FORM_BLOCK2)100,3212
    AT_name	101,3254
    AT_name			= (0x0030|101,3254
    AT_name			= (0x0030|FORM_STRING)101,3254
    AT_fund_type	102,3292
    AT_fund_type		= (0x0050|102,3292
    AT_fund_type		= (0x0050|FORM_DATA2)102,3292
    AT_mod_fund_type	103,3333
    AT_mod_fund_type		= (0x0060|103,3333
    AT_mod_fund_type		= (0x0060|FORM_BLOCK2)103,3333
    AT_user_def_type	104,3379
    AT_user_def_type		= (0x0070|104,3379
    AT_user_def_type		= (0x0070|FORM_REF)104,3379
    AT_mod_u_d_type	105,3422
    AT_mod_u_d_type		= (0x0080|105,3422
    AT_mod_u_d_type		= (0x0080|FORM_BLOCK2)105,3422
    AT_ordering	106,3467
    AT_ordering			= (0x0090|106,3467
    AT_ordering			= (0x0090|FORM_DATA2)106,3467
    AT_subscr_data	107,3508
    AT_subscr_data		= (0x00a0|107,3508
    AT_subscr_data		= (0x00a0|FORM_BLOCK2)107,3508
    AT_byte_size	108,3552
    AT_byte_size		= (0x00b0|108,3552
    AT_byte_size		= (0x00b0|FORM_DATA4)108,3552
    AT_bit_offset	109,3593
    AT_bit_offset		= (0x00c0|109,3593
    AT_bit_offset		= (0x00c0|FORM_DATA2)109,3593
    AT_bit_size	110,3635
    AT_bit_size			= (0x00d0|110,3635
    AT_bit_size			= (0x00d0|FORM_DATA4)110,3635
    AT_element_list	112,3717
    AT_element_list		= (0x00f0|112,3717
    AT_element_list		= (0x00f0|FORM_BLOCK4)112,3717
    AT_stmt_list	113,3762
    AT_stmt_list		= (0x0100|113,3762
    AT_stmt_list		= (0x0100|FORM_DATA4)113,3762
    AT_low_pc	114,3803
    AT_low_pc			= (0x0110|114,3803
    AT_low_pc			= (0x0110|FORM_ADDR)114,3803
    AT_high_pc	115,3841
    AT_high_pc			= (0x0120|115,3841
    AT_high_pc			= (0x0120|FORM_ADDR)115,3841
    AT_language	116,3880
    AT_language			= (0x0130|116,3880
    AT_language			= (0x0130|FORM_DATA4)116,3880
    AT_member	117,3921
    AT_member			= (0x0140|117,3921
    AT_member			= (0x0140|FORM_REF)117,3921
    AT_discr	118,3958
    AT_discr			= (0x0150|118,3958
    AT_discr			= (0x0150|FORM_REF)118,3958
    AT_discr_value	119,3994
    AT_discr_value		= (0x0160|119,3994
    AT_discr_value		= (0x0160|FORM_BLOCK2)119,3994
    AT_string_length	122,4120
    AT_string_length		= (0x0190|122,4120
    AT_string_length		= (0x0190|FORM_BLOCK2)122,4120
    AT_common_reference	123,4166
    AT_common_reference		= (0x01a0|123,4166
    AT_common_reference		= (0x01a0|FORM_REF)123,4166
    AT_comp_dir	124,4212
    AT_comp_dir			= (0x01b0|124,4212
    AT_comp_dir			= (0x01b0|FORM_STRING)124,4212
        AT_const_value_string	125,4254
        AT_const_value_string	= (0x01c0|125,4254
        AT_const_value_string	= (0x01c0|FORM_STRING)125,4254
        AT_const_value_data2	126,4308
        AT_const_value_data2	= (0x01c0|126,4308
        AT_const_value_data2	= (0x01c0|FORM_DATA2)126,4308
        AT_const_value_data4	127,4360
        AT_const_value_data4	= (0x01c0|127,4360
        AT_const_value_data4	= (0x01c0|FORM_DATA4)127,4360
        AT_const_value_data8	128,4412
        AT_const_value_data8	= (0x01c0|128,4412
        AT_const_value_data8	= (0x01c0|FORM_DATA8)128,4412
        AT_const_value_block2	129,4464
        AT_const_value_block2	= (0x01c0|129,4464
        AT_const_value_block2	= (0x01c0|FORM_BLOCK2)129,4464
        AT_const_value_block4	130,4518
        AT_const_value_block4	= (0x01c0|130,4518
        AT_const_value_block4	= (0x01c0|FORM_BLOCK4)130,4518
    AT_containing_type	131,4572
    AT_containing_type		= (0x01d0|131,4572
    AT_containing_type		= (0x01d0|FORM_REF)131,4572
        AT_default_value_addr	132,4617
        AT_default_value_addr	= (0x01e0|132,4617
        AT_default_value_addr	= (0x01e0|FORM_ADDR)132,4617
        AT_default_value_data2	133,4669
        AT_default_value_data2	= (0x01e0|133,4669
        AT_default_value_data2	= (0x01e0|FORM_DATA2)133,4669
        AT_default_value_data4	134,4723
        AT_default_value_data4	= (0x01e0|134,4723
        AT_default_value_data4	= (0x01e0|FORM_DATA4)134,4723
        AT_default_value_data8	135,4777
        AT_default_value_data8	= (0x01e0|135,4777
        AT_default_value_data8	= (0x01e0|FORM_DATA8)135,4777
        AT_default_value_string	136,4831
        AT_default_value_string	= (0x01e0|136,4831
        AT_default_value_string	= (0x01e0|FORM_STRING)136,4831
    AT_friends	137,4887
    AT_friends			= (0x01f0|137,4887
    AT_friends			= (0x01f0|FORM_BLOCK2)137,4887
    AT_inline	138,4928
    AT_inline			= (0x0200|138,4928
    AT_inline			= (0x0200|FORM_STRING)138,4928
    AT_is_optional	139,4968
    AT_is_optional		= (0x0210|139,4968
    AT_is_optional		= (0x0210|FORM_STRING)139,4968
        AT_lower_bound_ref	140,5012
        AT_lower_bound_ref	= (0x0220|140,5012
        AT_lower_bound_ref	= (0x0220|FORM_REF)140,5012
        AT_lower_bound_data2	141,5060
        AT_lower_bound_data2	= (0x0220|141,5060
        AT_lower_bound_data2	= (0x0220|FORM_DATA2)141,5060
        AT_lower_bound_data4	142,5112
        AT_lower_bound_data4	= (0x0220|142,5112
        AT_lower_bound_data4	= (0x0220|FORM_DATA4)142,5112
        AT_lower_bound_data8	143,5164
        AT_lower_bound_data8	= (0x0220|143,5164
        AT_lower_bound_data8	= (0x0220|FORM_DATA8)143,5164
    AT_private	144,5216
    AT_private			= (0x0240|144,5216
    AT_private			= (0x0240|FORM_STRING)144,5216
    AT_producer	145,5257
    AT_producer			= (0x0250|145,5257
    AT_producer			= (0x0250|FORM_STRING)145,5257
    AT_program	146,5299
    AT_program			= (0x0230|146,5299
    AT_program			= (0x0230|FORM_STRING)146,5299
    AT_protected	147,5340
    AT_protected		= (0x0260|147,5340
    AT_protected		= (0x0260|FORM_STRING)147,5340
    AT_prototyped	148,5382
    AT_prototyped		= (0x0270|148,5382
    AT_prototyped		= (0x0270|FORM_STRING)148,5382
    AT_public	149,5425
    AT_public			= (0x0280|149,5425
    AT_public			= (0x0280|FORM_STRING)149,5425
    AT_pure_virtual	150,5465
    AT_pure_virtual		= (0x0290|150,5465
    AT_pure_virtual		= (0x0290|FORM_STRING)150,5465
    AT_return_addr	151,5510
    AT_return_addr		= (0x02a0|151,5510
    AT_return_addr		= (0x02a0|FORM_BLOCK2)151,5510
    AT_abstract_origin	152,5554
    AT_abstract_origin		= (0x02b0|152,5554
    AT_abstract_origin		= (0x02b0|FORM_REF)152,5554
    AT_start_scope	153,5599
    AT_start_scope		= (0x02c0|153,5599
    AT_start_scope		= (0x02c0|FORM_DATA4)153,5599
    AT_stride_size	154,5642
    AT_stride_size		= (0x02e0|154,5642
    AT_stride_size		= (0x02e0|FORM_DATA4)154,5642
        AT_upper_bound_ref	155,5685
        AT_upper_bound_ref	= (0x02f0|155,5685
        AT_upper_bound_ref	= (0x02f0|FORM_REF)155,5685
        AT_upper_bound_data2	156,5733
        AT_upper_bound_data2	= (0x02f0|156,5733
        AT_upper_bound_data2	= (0x02f0|FORM_DATA2)156,5733
        AT_upper_bound_data4	157,5785
        AT_upper_bound_data4	= (0x02f0|157,5785
        AT_upper_bound_data4	= (0x02f0|FORM_DATA4)157,5785
        AT_upper_bound_data8	158,5837
        AT_upper_bound_data8	= (0x02f0|158,5837
        AT_upper_bound_data8	= (0x02f0|FORM_DATA8)158,5837
    AT_virtual	159,5889
    AT_virtual			= (0x0300|159,5889
    AT_virtual			= (0x0300|FORM_STRING)159,5889
    AT_sf_names	163,5959
    AT_sf_names			= (0x8000|163,5959
    AT_sf_names			= (0x8000|FORM_DATA4)163,5959
    AT_src_info	164,6000
    AT_src_info			= (0x8010|164,6000
    AT_src_info			= (0x8010|FORM_DATA4)164,6000
    AT_mac_info	165,6041
    AT_mac_info			= (0x8020|165,6041
    AT_mac_info			= (0x8020|FORM_DATA4)165,6041
    AT_src_coords	166,6082
    AT_src_coords		= (0x8030|166,6082
    AT_src_coords		= (0x8030|FORM_DATA4)166,6082
    AT_body_begin	167,6124
    AT_body_begin		= (0x8040|167,6124
    AT_body_begin		= (0x8040|FORM_ADDR)167,6124
    AT_body_end	168,6165
    AT_body_end			= (0x8050|168,6165
    AT_body_end			= (0x8050|FORM_ADDR)168,6165
#define AT_lo_user	171,6208
#define AT_hi_user	172,6275
enum dwarf_location_atom dwarf_location_atom176,6380
    OP_REG	177,6407
    OP_REG	= 0x01,177,6407
    OP_BASEREG	178,6426
    OP_BASEREG	= 0x02,178,6426
    OP_ADDR	179,6449
    OP_ADDR	= 0x03,179,6449
    OP_CONST	180,6469
    OP_CONST	= 0x04,180,6469
    OP_DEREF2	181,6490
    OP_DEREF2	= 0x05,181,6490
    OP_DEREF4	182,6512
    OP_DEREF4	= 0x06,182,6512
    OP_ADD	183,6534
    OP_ADD	= 0x07,183,6534
    OP_MULT	187,6582
    OP_MULT	= 0x80187,6582
#define OP_LO_USER	190,6605
#define OP_HI_USER	191,6671
enum dwarf_fundamental_type dwarf_fundamental_type195,6778
    FT_char	196,6808
    FT_char		= 0x0001,196,6808
    FT_signed_char	197,6831
    FT_signed_char	= 0x0002,197,6831
    FT_unsigned_char	198,6860
    FT_unsigned_char	= 0x0003,198,6860
    FT_short	199,6891
    FT_short		= 0x0004,199,6891
    FT_signed_short	200,6915
    FT_signed_short	= 0x0005,200,6915
    FT_unsigned_short	201,6945
    FT_unsigned_short	= 0x0006,201,6945
    FT_integer	202,6977
    FT_integer		= 0x0007,202,6977
    FT_signed_integer	203,7003
    FT_signed_integer	= 0x0008,203,7003
    FT_unsigned_integer	204,7035
    FT_unsigned_integer	= 0x0009,204,7035
    FT_long	205,7069
    FT_long		= 0x000a,205,7069
    FT_signed_long	206,7092
    FT_signed_long	= 0x000b,206,7092
    FT_unsigned_long	207,7121
    FT_unsigned_long	= 0x000c,207,7121
    FT_pointer	208,7152
    FT_pointer		= 0x000d,208,7152
    FT_float	209,7207
    FT_float		= 0x000e,209,7207
    FT_dbl_prec_float	210,7231
    FT_dbl_prec_float	= 0x000f,210,7231
    FT_ext_prec_float	211,7263
    FT_ext_prec_float	= 0x0010,211,7263
    FT_complex	212,7328
    FT_complex		= 0x0011,212,7328
    FT_dbl_prec_complex	213,7387
    FT_dbl_prec_complex	= 0x0012,213,7387
    FT_void	215,7482
    FT_void		= 0x0014,215,7482
    FT_boolean	216,7505
    FT_boolean		= 0x0015,216,7505
    FT_ext_prec_complex	217,7564
    FT_ext_prec_complex	= 0x0016,217,7564
    FT_label	218,7631
    FT_label		= 0x0017,218,7631
    FT_long_long	224,7823
    FT_long_long	= 0x8008,224,7823
    FT_signed_long_long	225,7850
    FT_signed_long_long	= 0x8108,225,7850
    FT_unsigned_long_long 226,7884
    FT_unsigned_long_long = 0x8208,226,7884
    FT_int8	228,7921
    FT_int8		= 0x9001,228,7921
    FT_signed_int8	229,7944
    FT_signed_int8	= 0x9101,229,7944
    FT_unsigned_int8	230,7973
    FT_unsigned_int8	= 0x9201,230,7973
    FT_int16	231,8004
    FT_int16		= 0x9302,231,8004
    FT_signed_int16	232,8028
    FT_signed_int16	= 0x9402,232,8028
    FT_unsigned_int16	233,8058
    FT_unsigned_int16	= 0x9502,233,8058
    FT_int32	234,8090
    FT_int32		= 0x9604,234,8090
    FT_signed_int32	235,8114
    FT_signed_int32	= 0x9704,235,8114
    FT_unsigned_int32	236,8144
    FT_unsigned_int32	= 0x9804,236,8144
    FT_int64	237,8176
    FT_int64		= 0x9908,237,8176
    FT_signed_int64	238,8200
    FT_signed_int64	= 0x9a08,238,8200
    FT_unsigned_int64	239,8230
    FT_unsigned_int64	= 0x9b08,239,8230
    FT_real32	241,8263
    FT_real32		= 0xa004,241,8263
    FT_real64	242,8288
    FT_real64		= 0xa108,242,8288
    FT_real96	243,8313
    FT_real96		= 0xa20c,243,8313
    FT_real128	244,8338
    FT_real128		= 0xa310244,8338
#define FT_lo_user	247,8367
#define FT_hi_user	248,8435
enum dwarf_type_modifier dwarf_type_modifier252,8541
    MOD_pointer_to	253,8568
    MOD_pointer_to	= 0x01,253,8568
    MOD_reference_to	254,8595
    MOD_reference_to	= 0x02,254,8595
    MOD_const	255,8624
    MOD_const		= 0x03,255,8624
    MOD_volatile	256,8647
    MOD_volatile	= 0x04256,8647
#define MOD_lo_user	259,8675
#define MOD_hi_user	260,8742
enum dwarf_array_dim_ordering dwarf_array_dim_ordering264,8848
    ORD_row_major	265,8880
    ORD_col_major	266,8903
enum dwarf_subscr_data_formats dwarf_subscr_data_formats271,8977
    FMT_FT_C_C	272,9010
    FMT_FT_C_C	= 0x0,272,9010
    FMT_FT_C_X	273,9032
    FMT_FT_C_X	= 0x1,273,9032
    FMT_FT_X_C	274,9054
    FMT_FT_X_C	= 0x2,274,9054
    FMT_FT_X_X	275,9076
    FMT_FT_X_X	= 0x3,275,9076
    FMT_UT_C_C	276,9098
    FMT_UT_C_C	= 0x4,276,9098
    FMT_UT_C_X	277,9120
    FMT_UT_C_X	= 0x5,277,9120
    FMT_UT_X_C	278,9142
    FMT_UT_X_C	= 0x6,278,9142
    FMT_UT_X_X	279,9164
    FMT_UT_X_X	= 0x7,279,9164
    FMT_ET	280,9186
    FMT_ET	= 0x8280,9186
#define FMT_CODE(FMT_CODE285,9251
enum dwarf_source_language dwarf_source_language292,9455
    LANG_C89	293,9484
    LANG_C89		= 0x00000001,293,9484
    LANG_C	294,9512
    LANG_C		= 0x00000002,294,9512
    LANG_ADA83	295,9538
    LANG_ADA83		= 0x00000003,295,9538
    LANG_C_PLUS_PLUS	296,9568
    LANG_C_PLUS_PLUS	= 0x00000004,296,9568
    LANG_COBOL74	297,9603
    LANG_COBOL74	= 0x00000005,297,9603
    LANG_COBOL85	298,9634
    LANG_COBOL85	= 0x00000006,298,9634
    LANG_FORTRAN77	299,9665
    LANG_FORTRAN77	= 0x00000007,299,9665
    LANG_FORTRAN90	300,9698
    LANG_FORTRAN90	= 0x00000008,300,9698
    LANG_PASCAL83	301,9731
    LANG_PASCAL83	= 0x00000009,301,9731
    LANG_MODULA2	302,9763
    LANG_MODULA2	= 0x0000000a302,9763
#define LANG_lo_user	305,9797
#define LANG_hi_user	306,9871
enum dwarf_macinfo_record_type dwarf_macinfo_record_type310,9997
    MACINFO_start	311,10030
    MACINFO_resume	312,10055
    MACINFO_define	313,10081
    MACINFO_undef	314,10107

dwarf2.h,25556
enum dwarf_tagdwarf_tag34,1521
    DW_TAG_padding 36,1540
    DW_TAG_padding = 0x00,36,1540
    DW_TAG_array_type 37,1567
    DW_TAG_array_type = 0x01,37,1567
    DW_TAG_class_type 38,1597
    DW_TAG_class_type = 0x02,38,1597
    DW_TAG_entry_point 39,1627
    DW_TAG_entry_point = 0x03,39,1627
    DW_TAG_enumeration_type 40,1658
    DW_TAG_enumeration_type = 0x04,40,1658
    DW_TAG_formal_parameter 41,1694
    DW_TAG_formal_parameter = 0x05,41,1694
    DW_TAG_imported_declaration 42,1730
    DW_TAG_imported_declaration = 0x08,42,1730
    DW_TAG_label 43,1770
    DW_TAG_label = 0x0a,43,1770
    DW_TAG_lexical_block 44,1795
    DW_TAG_lexical_block = 0x0b,44,1795
    DW_TAG_member 45,1828
    DW_TAG_member = 0x0d,45,1828
    DW_TAG_pointer_type 46,1854
    DW_TAG_pointer_type = 0x0f,46,1854
    DW_TAG_reference_type 47,1886
    DW_TAG_reference_type = 0x10,47,1886
    DW_TAG_compile_unit 48,1920
    DW_TAG_compile_unit = 0x11,48,1920
    DW_TAG_string_type 49,1952
    DW_TAG_string_type = 0x12,49,1952
    DW_TAG_structure_type 50,1983
    DW_TAG_structure_type = 0x13,50,1983
    DW_TAG_subroutine_type 51,2017
    DW_TAG_subroutine_type = 0x15,51,2017
    DW_TAG_typedef 52,2052
    DW_TAG_typedef = 0x16,52,2052
    DW_TAG_union_type 53,2079
    DW_TAG_union_type = 0x17,53,2079
    DW_TAG_unspecified_parameters 54,2109
    DW_TAG_unspecified_parameters = 0x18,54,2109
    DW_TAG_variant 55,2151
    DW_TAG_variant = 0x19,55,2151
    DW_TAG_common_block 56,2178
    DW_TAG_common_block = 0x1a,56,2178
    DW_TAG_common_inclusion 57,2210
    DW_TAG_common_inclusion = 0x1b,57,2210
    DW_TAG_inheritance 58,2246
    DW_TAG_inheritance = 0x1c,58,2246
    DW_TAG_inlined_subroutine 59,2277
    DW_TAG_inlined_subroutine = 0x1d,59,2277
    DW_TAG_module 60,2315
    DW_TAG_module = 0x1e,60,2315
    DW_TAG_ptr_to_member_type 61,2341
    DW_TAG_ptr_to_member_type = 0x1f,61,2341
    DW_TAG_set_type 62,2379
    DW_TAG_set_type = 0x20,62,2379
    DW_TAG_subrange_type 63,2407
    DW_TAG_subrange_type = 0x21,63,2407
    DW_TAG_with_stmt 64,2440
    DW_TAG_with_stmt = 0x22,64,2440
    DW_TAG_access_declaration 65,2469
    DW_TAG_access_declaration = 0x23,65,2469
    DW_TAG_base_type 66,2507
    DW_TAG_base_type = 0x24,66,2507
    DW_TAG_catch_block 67,2536
    DW_TAG_catch_block = 0x25,67,2536
    DW_TAG_const_type 68,2567
    DW_TAG_const_type = 0x26,68,2567
    DW_TAG_constant 69,2597
    DW_TAG_constant = 0x27,69,2597
    DW_TAG_enumerator 70,2625
    DW_TAG_enumerator = 0x28,70,2625
    DW_TAG_file_type 71,2655
    DW_TAG_file_type = 0x29,71,2655
    DW_TAG_friend 72,2684
    DW_TAG_friend = 0x2a,72,2684
    DW_TAG_namelist 73,2710
    DW_TAG_namelist = 0x2b,73,2710
    DW_TAG_namelist_item 74,2738
    DW_TAG_namelist_item = 0x2c,74,2738
    DW_TAG_packed_type 75,2771
    DW_TAG_packed_type = 0x2d,75,2771
    DW_TAG_subprogram 76,2802
    DW_TAG_subprogram = 0x2e,76,2802
    DW_TAG_template_type_param 77,2832
    DW_TAG_template_type_param = 0x2f,77,2832
    DW_TAG_template_value_param 78,2871
    DW_TAG_template_value_param = 0x30,78,2871
    DW_TAG_thrown_type 79,2911
    DW_TAG_thrown_type = 0x31,79,2911
    DW_TAG_try_block 80,2942
    DW_TAG_try_block = 0x32,80,2942
    DW_TAG_variant_part 81,2971
    DW_TAG_variant_part = 0x33,81,2971
    DW_TAG_variable 82,3003
    DW_TAG_variable = 0x34,82,3003
    DW_TAG_volatile_type 83,3031
    DW_TAG_volatile_type = 0x35,83,3031
    DW_TAG_MIPS_loop 85,3094
    DW_TAG_MIPS_loop = 0x4081,85,3094
    DW_TAG_format_label 87,3150
    DW_TAG_format_label = 0x4101,87,3150
    DW_TAG_function_template 88,3220
    DW_TAG_function_template = 0x4102,88,3220
    DW_TAG_class_template 89,3273
    DW_TAG_class_template = 0x4103	89,3273
#define DW_TAG_lo_user	92,3328
#define DW_TAG_hi_user	93,3358
#define DW_children_no 96,3444
#define	DW_children_yes 97,3471
enum dwarf_formdwarf_form100,3528
    DW_FORM_addr 102,3548
    DW_FORM_addr = 0x01,102,3548
    DW_FORM_block2 103,3573
    DW_FORM_block2 = 0x03,103,3573
    DW_FORM_block4 104,3600
    DW_FORM_block4 = 0x04,104,3600
    DW_FORM_data2 105,3627
    DW_FORM_data2 = 0x05,105,3627
    DW_FORM_data4 106,3653
    DW_FORM_data4 = 0x06,106,3653
    DW_FORM_data8 107,3679
    DW_FORM_data8 = 0x07,107,3679
    DW_FORM_string 108,3705
    DW_FORM_string = 0x08,108,3705
    DW_FORM_block 109,3732
    DW_FORM_block = 0x09,109,3732
    DW_FORM_block1 110,3758
    DW_FORM_block1 = 0x0a,110,3758
    DW_FORM_data1 111,3785
    DW_FORM_data1 = 0x0b,111,3785
    DW_FORM_flag 112,3811
    DW_FORM_flag = 0x0c,112,3811
    DW_FORM_sdata 113,3836
    DW_FORM_sdata = 0x0d,113,3836
    DW_FORM_strp 114,3862
    DW_FORM_strp = 0x0e,114,3862
    DW_FORM_udata 115,3887
    DW_FORM_udata = 0x0f,115,3887
    DW_FORM_ref_addr 116,3913
    DW_FORM_ref_addr = 0x10,116,3913
    DW_FORM_ref1 117,3942
    DW_FORM_ref1 = 0x11,117,3942
    DW_FORM_ref2 118,3967
    DW_FORM_ref2 = 0x12,118,3967
    DW_FORM_ref4 119,3992
    DW_FORM_ref4 = 0x13,119,3992
    DW_FORM_ref8 120,4017
    DW_FORM_ref8 = 0x14,120,4017
    DW_FORM_ref_udata 121,4042
    DW_FORM_ref_udata = 0x15,121,4042
    DW_FORM_indirect 122,4072
    DW_FORM_indirect = 0x16122,4072
enum dwarf_attributedwarf_attribute127,4141
    DW_AT_sibling 129,4166
    DW_AT_sibling = 0x01,129,4166
    DW_AT_location 130,4192
    DW_AT_location = 0x02,130,4192
    DW_AT_name 131,4219
    DW_AT_name = 0x03,131,4219
    DW_AT_ordering 132,4242
    DW_AT_ordering = 0x09,132,4242
    DW_AT_subscr_data 133,4269
    DW_AT_subscr_data = 0x0a,133,4269
    DW_AT_byte_size 134,4299
    DW_AT_byte_size = 0x0b,134,4299
    DW_AT_bit_offset 135,4327
    DW_AT_bit_offset = 0x0c,135,4327
    DW_AT_bit_size 136,4356
    DW_AT_bit_size = 0x0d,136,4356
    DW_AT_element_list 137,4383
    DW_AT_element_list = 0x0f,137,4383
    DW_AT_stmt_list 138,4414
    DW_AT_stmt_list = 0x10,138,4414
    DW_AT_low_pc 139,4442
    DW_AT_low_pc = 0x11,139,4442
    DW_AT_high_pc 140,4467
    DW_AT_high_pc = 0x12,140,4467
    DW_AT_language 141,4493
    DW_AT_language = 0x13,141,4493
    DW_AT_member 142,4520
    DW_AT_member = 0x14,142,4520
    DW_AT_discr 143,4545
    DW_AT_discr = 0x15,143,4545
    DW_AT_discr_value 144,4569
    DW_AT_discr_value = 0x16,144,4569
    DW_AT_visibility 145,4599
    DW_AT_visibility = 0x17,145,4599
    DW_AT_import 146,4628
    DW_AT_import = 0x18,146,4628
    DW_AT_string_length 147,4653
    DW_AT_string_length = 0x19,147,4653
    DW_AT_common_reference 148,4685
    DW_AT_common_reference = 0x1a,148,4685
    DW_AT_comp_dir 149,4720
    DW_AT_comp_dir = 0x1b,149,4720
    DW_AT_const_value 150,4747
    DW_AT_const_value = 0x1c,150,4747
    DW_AT_containing_type 151,4777
    DW_AT_containing_type = 0x1d,151,4777
    DW_AT_default_value 152,4811
    DW_AT_default_value = 0x1e,152,4811
    DW_AT_inline 153,4843
    DW_AT_inline = 0x20,153,4843
    DW_AT_is_optional 154,4868
    DW_AT_is_optional = 0x21,154,4868
    DW_AT_lower_bound 155,4898
    DW_AT_lower_bound = 0x22,155,4898
    DW_AT_producer 156,4928
    DW_AT_producer = 0x25,156,4928
    DW_AT_prototyped 157,4955
    DW_AT_prototyped = 0x27,157,4955
    DW_AT_return_addr 158,4984
    DW_AT_return_addr = 0x2a,158,4984
    DW_AT_start_scope 159,5014
    DW_AT_start_scope = 0x2c,159,5014
    DW_AT_stride_size 160,5044
    DW_AT_stride_size = 0x2e,160,5044
    DW_AT_upper_bound 161,5074
    DW_AT_upper_bound = 0x2f,161,5074
    DW_AT_abstract_origin 162,5104
    DW_AT_abstract_origin = 0x31,162,5104
    DW_AT_accessibility 163,5138
    DW_AT_accessibility = 0x32,163,5138
    DW_AT_address_class 164,5170
    DW_AT_address_class = 0x33,164,5170
    DW_AT_artificial 165,5202
    DW_AT_artificial = 0x34,165,5202
    DW_AT_base_types 166,5231
    DW_AT_base_types = 0x35,166,5231
    DW_AT_calling_convention 167,5260
    DW_AT_calling_convention = 0x36,167,5260
    DW_AT_count 168,5297
    DW_AT_count = 0x37,168,5297
    DW_AT_data_member_location 169,5321
    DW_AT_data_member_location = 0x38,169,5321
    DW_AT_decl_column 170,5360
    DW_AT_decl_column = 0x39,170,5360
    DW_AT_decl_file 171,5390
    DW_AT_decl_file = 0x3a,171,5390
    DW_AT_decl_line 172,5418
    DW_AT_decl_line = 0x3b,172,5418
    DW_AT_declaration 173,5446
    DW_AT_declaration = 0x3c,173,5446
    DW_AT_discr_list 174,5476
    DW_AT_discr_list = 0x3d,174,5476
    DW_AT_encoding 175,5505
    DW_AT_encoding = 0x3e,175,5505
    DW_AT_external 176,5532
    DW_AT_external = 0x3f,176,5532
    DW_AT_frame_base 177,5559
    DW_AT_frame_base = 0x40,177,5559
    DW_AT_friend 178,5588
    DW_AT_friend = 0x41,178,5588
    DW_AT_identifier_case 179,5613
    DW_AT_identifier_case = 0x42,179,5613
    DW_AT_macro_info 180,5647
    DW_AT_macro_info = 0x43,180,5647
    DW_AT_namelist_items 181,5676
    DW_AT_namelist_items = 0x44,181,5676
    DW_AT_priority 182,5709
    DW_AT_priority = 0x45,182,5709
    DW_AT_segment 183,5736
    DW_AT_segment = 0x46,183,5736
    DW_AT_specification 184,5762
    DW_AT_specification = 0x47,184,5762
    DW_AT_static_link 185,5794
    DW_AT_static_link = 0x48,185,5794
    DW_AT_type 186,5824
    DW_AT_type = 0x49,186,5824
    DW_AT_use_location 187,5847
    DW_AT_use_location = 0x4a,187,5847
    DW_AT_variable_parameter 188,5878
    DW_AT_variable_parameter = 0x4b,188,5878
    DW_AT_virtuality 189,5915
    DW_AT_virtuality = 0x4c,189,5915
    DW_AT_vtable_elem_location 190,5944
    DW_AT_vtable_elem_location = 0x4d,190,5944
    DW_AT_MIPS_fde 192,6013
    DW_AT_MIPS_fde = 0x2001,192,6013
    DW_AT_MIPS_loop_begin 193,6042
    DW_AT_MIPS_loop_begin = 0x2002,193,6042
    DW_AT_MIPS_tail_loop_begin 194,6078
    DW_AT_MIPS_tail_loop_begin = 0x2003,194,6078
    DW_AT_MIPS_epilog_begin 195,6119
    DW_AT_MIPS_epilog_begin = 0x2004,195,6119
    DW_AT_MIPS_loop_unroll_factor 196,6157
    DW_AT_MIPS_loop_unroll_factor = 0x2005,196,6157
    DW_AT_MIPS_software_pipeline_depth 197,6201
    DW_AT_MIPS_software_pipeline_depth = 0x2006,197,6201
    DW_AT_MIPS_linkage_name 198,6250
    DW_AT_MIPS_linkage_name = 0x2007,198,6250
    DW_AT_MIPS_stride 199,6288
    DW_AT_MIPS_stride = 0x2008,199,6288
    DW_AT_MIPS_abstract_name 200,6320
    DW_AT_MIPS_abstract_name = 0x2009,200,6320
    DW_AT_MIPS_clone_origin 201,6359
    DW_AT_MIPS_clone_origin = 0x200a,201,6359
    DW_AT_MIPS_has_inlines 202,6397
    DW_AT_MIPS_has_inlines = 0x200b,202,6397
    DW_AT_sf_names 204,6461
    DW_AT_sf_names = 0x2101,204,6461
    DW_AT_src_info 205,6490
    DW_AT_src_info = 0x2102,205,6490
    DW_AT_mac_info 206,6519
    DW_AT_mac_info = 0x2103,206,6519
    DW_AT_src_coords 207,6548
    DW_AT_src_coords = 0x2104,207,6548
    DW_AT_body_begin 208,6579
    DW_AT_body_begin = 0x2105,208,6579
    DW_AT_body_end 209,6610
    DW_AT_body_end = 0x2106209,6610
#define DW_AT_lo_user	212,6644
#define DW_AT_hi_user	213,6714
enum dwarf_location_atomdwarf_location_atom217,6822
    DW_OP_addr 219,6851
    DW_OP_addr = 0x03,219,6851
    DW_OP_deref 220,6874
    DW_OP_deref = 0x06,220,6874
    DW_OP_const1u 221,6898
    DW_OP_const1u = 0x08,221,6898
    DW_OP_const1s 222,6924
    DW_OP_const1s = 0x09,222,6924
    DW_OP_const2u 223,6950
    DW_OP_const2u = 0x0a,223,6950
    DW_OP_const2s 224,6976
    DW_OP_const2s = 0x0b,224,6976
    DW_OP_const4u 225,7002
    DW_OP_const4u = 0x0c,225,7002
    DW_OP_const4s 226,7028
    DW_OP_const4s = 0x0d,226,7028
    DW_OP_const8u 227,7054
    DW_OP_const8u = 0x0e,227,7054
    DW_OP_const8s 228,7080
    DW_OP_const8s = 0x0f,228,7080
    DW_OP_constu 229,7106
    DW_OP_constu = 0x10,229,7106
    DW_OP_consts 230,7131
    DW_OP_consts = 0x11,230,7131
    DW_OP_dup 231,7156
    DW_OP_dup = 0x12,231,7156
    DW_OP_drop 232,7178
    DW_OP_drop = 0x13,232,7178
    DW_OP_over 233,7201
    DW_OP_over = 0x14,233,7201
    DW_OP_pick 234,7224
    DW_OP_pick = 0x15,234,7224
    DW_OP_swap 235,7247
    DW_OP_swap = 0x16,235,7247
    DW_OP_rot 236,7270
    DW_OP_rot = 0x17,236,7270
    DW_OP_xderef 237,7292
    DW_OP_xderef = 0x18,237,7292
    DW_OP_abs 238,7317
    DW_OP_abs = 0x19,238,7317
    DW_OP_and 239,7339
    DW_OP_and = 0x1a,239,7339
    DW_OP_div 240,7361
    DW_OP_div = 0x1b,240,7361
    DW_OP_minus 241,7383
    DW_OP_minus = 0x1c,241,7383
    DW_OP_mod 242,7407
    DW_OP_mod = 0x1d,242,7407
    DW_OP_mul 243,7429
    DW_OP_mul = 0x1e,243,7429
    DW_OP_neg 244,7451
    DW_OP_neg = 0x1f,244,7451
    DW_OP_not 245,7473
    DW_OP_not = 0x20,245,7473
    DW_OP_or 246,7495
    DW_OP_or = 0x21,246,7495
    DW_OP_plus 247,7516
    DW_OP_plus = 0x22,247,7516
    DW_OP_plus_uconst 248,7539
    DW_OP_plus_uconst = 0x23,248,7539
    DW_OP_shl 249,7569
    DW_OP_shl = 0x24,249,7569
    DW_OP_shr 250,7591
    DW_OP_shr = 0x25,250,7591
    DW_OP_shra 251,7613
    DW_OP_shra = 0x26,251,7613
    DW_OP_xor 252,7636
    DW_OP_xor = 0x27,252,7636
    DW_OP_bra 253,7658
    DW_OP_bra = 0x28,253,7658
    DW_OP_eq 254,7680
    DW_OP_eq = 0x29,254,7680
    DW_OP_ge 255,7701
    DW_OP_ge = 0x2a,255,7701
    DW_OP_gt 256,7722
    DW_OP_gt = 0x2b,256,7722
    DW_OP_le 257,7743
    DW_OP_le = 0x2c,257,7743
    DW_OP_lt 258,7764
    DW_OP_lt = 0x2d,258,7764
    DW_OP_ne 259,7785
    DW_OP_ne = 0x2e,259,7785
    DW_OP_skip 260,7806
    DW_OP_skip = 0x2f,260,7806
    DW_OP_lit0 261,7829
    DW_OP_lit0 = 0x30,261,7829
    DW_OP_lit1 262,7852
    DW_OP_lit1 = 0x31,262,7852
    DW_OP_lit2 263,7875
    DW_OP_lit2 = 0x32,263,7875
    DW_OP_lit3 264,7898
    DW_OP_lit3 = 0x33,264,7898
    DW_OP_lit4 265,7921
    DW_OP_lit4 = 0x34,265,7921
    DW_OP_lit5 266,7944
    DW_OP_lit5 = 0x35,266,7944
    DW_OP_lit6 267,7967
    DW_OP_lit6 = 0x36,267,7967
    DW_OP_lit7 268,7990
    DW_OP_lit7 = 0x37,268,7990
    DW_OP_lit8 269,8013
    DW_OP_lit8 = 0x38,269,8013
    DW_OP_lit9 270,8036
    DW_OP_lit9 = 0x39,270,8036
    DW_OP_lit10 271,8059
    DW_OP_lit10 = 0x3a,271,8059
    DW_OP_lit11 272,8083
    DW_OP_lit11 = 0x3b,272,8083
    DW_OP_lit12 273,8107
    DW_OP_lit12 = 0x3c,273,8107
    DW_OP_lit13 274,8131
    DW_OP_lit13 = 0x3d,274,8131
    DW_OP_lit14 275,8155
    DW_OP_lit14 = 0x3e,275,8155
    DW_OP_lit15 276,8179
    DW_OP_lit15 = 0x3f,276,8179
    DW_OP_lit16 277,8203
    DW_OP_lit16 = 0x40,277,8203
    DW_OP_lit17 278,8227
    DW_OP_lit17 = 0x41,278,8227
    DW_OP_lit18 279,8251
    DW_OP_lit18 = 0x42,279,8251
    DW_OP_lit19 280,8275
    DW_OP_lit19 = 0x43,280,8275
    DW_OP_lit20 281,8299
    DW_OP_lit20 = 0x44,281,8299
    DW_OP_lit21 282,8323
    DW_OP_lit21 = 0x45,282,8323
    DW_OP_lit22 283,8347
    DW_OP_lit22 = 0x46,283,8347
    DW_OP_lit23 284,8371
    DW_OP_lit23 = 0x47,284,8371
    DW_OP_lit24 285,8395
    DW_OP_lit24 = 0x48,285,8395
    DW_OP_lit25 286,8419
    DW_OP_lit25 = 0x49,286,8419
    DW_OP_lit26 287,8443
    DW_OP_lit26 = 0x4a,287,8443
    DW_OP_lit27 288,8467
    DW_OP_lit27 = 0x4b,288,8467
    DW_OP_lit28 289,8491
    DW_OP_lit28 = 0x4c,289,8491
    DW_OP_lit29 290,8515
    DW_OP_lit29 = 0x4d,290,8515
    DW_OP_lit30 291,8539
    DW_OP_lit30 = 0x4e,291,8539
    DW_OP_lit31 292,8563
    DW_OP_lit31 = 0x4f,292,8563
    DW_OP_reg0 293,8587
    DW_OP_reg0 = 0x50,293,8587
    DW_OP_reg1 294,8610
    DW_OP_reg1 = 0x51,294,8610
    DW_OP_reg2 295,8633
    DW_OP_reg2 = 0x52,295,8633
    DW_OP_reg3 296,8656
    DW_OP_reg3 = 0x53,296,8656
    DW_OP_reg4 297,8679
    DW_OP_reg4 = 0x54,297,8679
    DW_OP_reg5 298,8702
    DW_OP_reg5 = 0x55,298,8702
    DW_OP_reg6 299,8725
    DW_OP_reg6 = 0x56,299,8725
    DW_OP_reg7 300,8748
    DW_OP_reg7 = 0x57,300,8748
    DW_OP_reg8 301,8771
    DW_OP_reg8 = 0x58,301,8771
    DW_OP_reg9 302,8794
    DW_OP_reg9 = 0x59,302,8794
    DW_OP_reg10 303,8817
    DW_OP_reg10 = 0x5a,303,8817
    DW_OP_reg11 304,8841
    DW_OP_reg11 = 0x5b,304,8841
    DW_OP_reg12 305,8865
    DW_OP_reg12 = 0x5c,305,8865
    DW_OP_reg13 306,8889
    DW_OP_reg13 = 0x5d,306,8889
    DW_OP_reg14 307,8913
    DW_OP_reg14 = 0x5e,307,8913
    DW_OP_reg15 308,8937
    DW_OP_reg15 = 0x5f,308,8937
    DW_OP_reg16 309,8961
    DW_OP_reg16 = 0x60,309,8961
    DW_OP_reg17 310,8985
    DW_OP_reg17 = 0x61,310,8985
    DW_OP_reg18 311,9009
    DW_OP_reg18 = 0x62,311,9009
    DW_OP_reg19 312,9033
    DW_OP_reg19 = 0x63,312,9033
    DW_OP_reg20 313,9057
    DW_OP_reg20 = 0x64,313,9057
    DW_OP_reg21 314,9081
    DW_OP_reg21 = 0x65,314,9081
    DW_OP_reg22 315,9105
    DW_OP_reg22 = 0x66,315,9105
    DW_OP_reg23 316,9129
    DW_OP_reg23 = 0x67,316,9129
    DW_OP_reg24 317,9153
    DW_OP_reg24 = 0x68,317,9153
    DW_OP_reg25 318,9177
    DW_OP_reg25 = 0x69,318,9177
    DW_OP_reg26 319,9201
    DW_OP_reg26 = 0x6a,319,9201
    DW_OP_reg27 320,9225
    DW_OP_reg27 = 0x6b,320,9225
    DW_OP_reg28 321,9249
    DW_OP_reg28 = 0x6c,321,9249
    DW_OP_reg29 322,9273
    DW_OP_reg29 = 0x6d,322,9273
    DW_OP_reg30 323,9297
    DW_OP_reg30 = 0x6e,323,9297
    DW_OP_reg31 324,9321
    DW_OP_reg31 = 0x6f,324,9321
    DW_OP_breg0 325,9345
    DW_OP_breg0 = 0x70,325,9345
    DW_OP_breg1 326,9369
    DW_OP_breg1 = 0x71,326,9369
    DW_OP_breg2 327,9393
    DW_OP_breg2 = 0x72,327,9393
    DW_OP_breg3 328,9417
    DW_OP_breg3 = 0x73,328,9417
    DW_OP_breg4 329,9441
    DW_OP_breg4 = 0x74,329,9441
    DW_OP_breg5 330,9465
    DW_OP_breg5 = 0x75,330,9465
    DW_OP_breg6 331,9489
    DW_OP_breg6 = 0x76,331,9489
    DW_OP_breg7 332,9513
    DW_OP_breg7 = 0x77,332,9513
    DW_OP_breg8 333,9537
    DW_OP_breg8 = 0x78,333,9537
    DW_OP_breg9 334,9561
    DW_OP_breg9 = 0x79,334,9561
    DW_OP_breg10 335,9585
    DW_OP_breg10 = 0x7a,335,9585
    DW_OP_breg11 336,9610
    DW_OP_breg11 = 0x7b,336,9610
    DW_OP_breg12 337,9635
    DW_OP_breg12 = 0x7c,337,9635
    DW_OP_breg13 338,9660
    DW_OP_breg13 = 0x7d,338,9660
    DW_OP_breg14 339,9685
    DW_OP_breg14 = 0x7e,339,9685
    DW_OP_breg15 340,9710
    DW_OP_breg15 = 0x7f,340,9710
    DW_OP_breg16 341,9735
    DW_OP_breg16 = 0x80,341,9735
    DW_OP_breg17 342,9760
    DW_OP_breg17 = 0x81,342,9760
    DW_OP_breg18 343,9785
    DW_OP_breg18 = 0x82,343,9785
    DW_OP_breg19 344,9810
    DW_OP_breg19 = 0x83,344,9810
    DW_OP_breg20 345,9835
    DW_OP_breg20 = 0x84,345,9835
    DW_OP_breg21 346,9860
    DW_OP_breg21 = 0x85,346,9860
    DW_OP_breg22 347,9885
    DW_OP_breg22 = 0x86,347,9885
    DW_OP_breg23 348,9910
    DW_OP_breg23 = 0x87,348,9910
    DW_OP_breg24 349,9935
    DW_OP_breg24 = 0x88,349,9935
    DW_OP_breg25 350,9960
    DW_OP_breg25 = 0x89,350,9960
    DW_OP_breg26 351,9985
    DW_OP_breg26 = 0x8a,351,9985
    DW_OP_breg27 352,10010
    DW_OP_breg27 = 0x8b,352,10010
    DW_OP_breg28 353,10035
    DW_OP_breg28 = 0x8c,353,10035
    DW_OP_breg29 354,10060
    DW_OP_breg29 = 0x8d,354,10060
    DW_OP_breg30 355,10085
    DW_OP_breg30 = 0x8e,355,10085
    DW_OP_breg31 356,10110
    DW_OP_breg31 = 0x8f,356,10110
    DW_OP_regx 357,10135
    DW_OP_regx = 0x90,357,10135
    DW_OP_fbreg 358,10158
    DW_OP_fbreg = 0x91,358,10158
    DW_OP_bregx 359,10182
    DW_OP_bregx = 0x92,359,10182
    DW_OP_piece 360,10206
    DW_OP_piece = 0x93,360,10206
    DW_OP_deref_size 361,10230
    DW_OP_deref_size = 0x94,361,10230
    DW_OP_xderef_size 362,10259
    DW_OP_xderef_size = 0x95,362,10259
    DW_OP_nop 363,10289
    DW_OP_nop = 0x96363,10289
#define DW_OP_lo_user	366,10316
#define DW_OP_hi_user	367,10384
enum dwarf_typedwarf_type371,10475
    DW_ATE_void 373,10495
    DW_ATE_void = 0x0,373,10495
    DW_ATE_address 374,10518
    DW_ATE_address = 0x1,374,10518
    DW_ATE_boolean 375,10544
    DW_ATE_boolean = 0x2,375,10544
    DW_ATE_complex_float 376,10570
    DW_ATE_complex_float = 0x3,376,10570
    DW_ATE_float 377,10602
    DW_ATE_float = 0x4,377,10602
    DW_ATE_signed 378,10626
    DW_ATE_signed = 0x5,378,10626
    DW_ATE_signed_char 379,10651
    DW_ATE_signed_char = 0x6,379,10651
    DW_ATE_unsigned 380,10681
    DW_ATE_unsigned = 0x7,380,10681
    DW_ATE_unsigned_char 381,10708
    DW_ATE_unsigned_char = 0x8381,10708
#define	DW_ATE_lo_user 384,10745
#define	DW_ATE_hi_user 385,10773
enum dwarf_array_dim_orderingdwarf_array_dim_ordering388,10841
    DW_ORD_row_major 390,10875
    DW_ORD_col_major 391,10901
enum dwarf_access_attributedwarf_access_attribute395,10955
    DW_ACCESS_public 397,10987
    DW_ACCESS_protected 398,11013
    DW_ACCESS_private 399,11042
enum dwarf_visibility_attributedwarf_visibility_attribute403,11091
    DW_VIS_local 405,11127
    DW_VIS_exported 406,11149
    DW_VIS_qualified 407,11174
enum dwarf_virtuality_attributedwarf_virtuality_attribute411,11222
    DW_VIRTUALITY_none 413,11258
    DW_VIRTUALITY_virtual 414,11286
    DW_VIRTUALITY_pure_virtual 415,11317
enum dwarf_id_casedwarf_id_case419,11381
    DW_ID_case_sensitive 421,11404
    DW_ID_up_case 422,11434
    DW_ID_down_case 423,11457
    DW_ID_case_insensitive 424,11482
enum dwarf_calling_conventiondwarf_calling_convention428,11544
    DW_CC_normal 430,11578
    DW_CC_normal = 0x1,430,11578
    DW_CC_program 431,11602
    DW_CC_program = 0x2,431,11602
    DW_CC_nocall 432,11627
    DW_CC_nocall = 0x3432,11627
#define DW_CC_lo_user 435,11656
#define DW_CC_hi_user 436,11683
enum dwarf_inline_attributedwarf_inline_attribute439,11734
    DW_INL_not_inlined 441,11766
    DW_INL_inlined 442,11794
    DW_INL_declared_not_inlined 443,11818
    DW_INL_declared_inlined 444,11855
enum dwarf_descrim_listdwarf_descrim_list448,11918
    DW_DSC_label 450,11946
    DW_DSC_range 451,11968
enum dwarf_line_number_opsdwarf_line_number_ops455,12021
    DW_LNS_extended_op 457,12052
    DW_LNS_copy 458,12080
    DW_LNS_advance_pc 459,12101
    DW_LNS_advance_line 460,12128
    DW_LNS_set_file 461,12157
    DW_LNS_set_column 462,12182
    DW_LNS_negate_stmt 463,12209
    DW_LNS_set_basic_block 464,12237
    DW_LNS_const_add_pc 465,12269
    DW_LNS_fixed_advance_pc 466,12298
enum dwarf_line_number_x_opsdwarf_line_number_x_ops470,12371
    DW_LNE_end_sequence 472,12404
    DW_LNE_set_address 473,12433
    DW_LNE_define_file 474,12461
enum dwarf_call_frame_infodwarf_call_frame_info478,12523
    DW_CFA_advance_loc 480,12554
    DW_CFA_advance_loc = 0x40,480,12554
    DW_CFA_offset 481,12585
    DW_CFA_offset = 0x80,481,12585
    DW_CFA_restore 482,12611
    DW_CFA_restore = 0xc0,482,12611
    DW_CFA_nop 483,12638
    DW_CFA_nop = 0x00,483,12638
    DW_CFA_set_loc 484,12661
    DW_CFA_set_loc = 0x01,484,12661
    DW_CFA_advance_loc1 485,12688
    DW_CFA_advance_loc1 = 0x02,485,12688
    DW_CFA_advance_loc2 486,12720
    DW_CFA_advance_loc2 = 0x03,486,12720
    DW_CFA_advance_loc4 487,12752
    DW_CFA_advance_loc4 = 0x04,487,12752
    DW_CFA_offset_extended 488,12784
    DW_CFA_offset_extended = 0x05,488,12784
    DW_CFA_restore_extended 489,12819
    DW_CFA_restore_extended = 0x06,489,12819
    DW_CFA_undefined 490,12855
    DW_CFA_undefined = 0x07,490,12855
    DW_CFA_same_value 491,12884
    DW_CFA_same_value = 0x08,491,12884
    DW_CFA_register 492,12914
    DW_CFA_register = 0x09,492,12914
    DW_CFA_remember_state 493,12942
    DW_CFA_remember_state = 0x0a,493,12942
    DW_CFA_restore_state 494,12976
    DW_CFA_restore_state = 0x0b,494,12976
    DW_CFA_def_cfa 495,13009
    DW_CFA_def_cfa = 0x0c,495,13009
    DW_CFA_def_cfa_register 496,13036
    DW_CFA_def_cfa_register = 0x0d,496,13036
    DW_CFA_def_cfa_offset 497,13072
    DW_CFA_def_cfa_offset = 0x0e,497,13072
    DW_CFA_MIPS_advance_loc8 499,13134
    DW_CFA_MIPS_advance_loc8 = 0x1d,499,13134
    DW_CFA_GNU_window_save 502,13197
    DW_CFA_GNU_window_save = 0x2d,502,13197
    DW_CFA_GNU_args_size 503,13232
    DW_CFA_GNU_args_size = 0x2e503,13232
#define DW_CIE_ID	506,13270
#define DW_CIE_VERSION	507,13301
#define DW_CFA_extended 509,13329
#define DW_CFA_low_user 510,13357
#define DW_CFA_high_user 511,13388
#define DW_CHILDREN_no	513,13420
#define DW_CHILDREN_yes	514,13454
#define DW_ADDR_none	516,13490
enum dwarf_source_languagedwarf_source_language520,13556
    DW_LANG_C89 522,13587
    DW_LANG_C89 = 0x0001,522,13587
    DW_LANG_C 523,13613
    DW_LANG_C = 0x0002,523,13613
    DW_LANG_Ada83 524,13637
    DW_LANG_Ada83 = 0x0003,524,13637
    DW_LANG_C_plus_plus 525,13665
    DW_LANG_C_plus_plus = 0x0004,525,13665
    DW_LANG_Cobol74 526,13699
    DW_LANG_Cobol74 = 0x0005,526,13699
    DW_LANG_Cobol85 527,13729
    DW_LANG_Cobol85 = 0x0006,527,13729
    DW_LANG_Fortran77 528,13759
    DW_LANG_Fortran77 = 0x0007,528,13759
    DW_LANG_Fortran90 529,13791
    DW_LANG_Fortran90 = 0x0008,529,13791
    DW_LANG_Pascal83 530,13823
    DW_LANG_Pascal83 = 0x0009,530,13823
    DW_LANG_Modula2 531,13854
    DW_LANG_Modula2 = 0x000a,531,13854
    DW_LANG_Mips_Assembler 532,13884
    DW_LANG_Mips_Assembler = 0x8001532,13884
#define DW_LANG_lo_user 536,13927
#define DW_LANG_hi_user 537,13999
enum dwarf_macinfo_record_typedwarf_macinfo_record_type541,14119
    DW_MACINFO_define 543,14154
    DW_MACINFO_undef 544,14181
    DW_MACINFO_start_file 545,14207
    DW_MACINFO_end_file 546,14238
    DW_MACINFO_vendor_ext 547,14267

except.h,574
#define rtx 24,863
struct label_node label_node31,979
struct eh_entry eh_entry50,1491
struct eh_node eh_node60,1721
struct eh_stack eh_stack68,1900
struct eh_queue eh_queue76,2095
extern rtx catch_clauses;138,4440
extern struct label_node *caught_return_label_stack;228,7110
extern struct label_node *false_label_stack;232,7215
extern rtx exception_handler_labels;237,7394
extern rtx eh_saved_pc_rtx;241,7472
extern int exceptions_via_longjmp;260,8002
extern int asynchronous_exceptions;264,8092
extern int protect_cleanup_actions_with_terminate;269,8226

expr.h,8747
#define BRANCH_COST 23,877
#define QUEUED_VAR(QUEUED_VAR31,1109
#define QUEUED_INSN(QUEUED_INSN34,1275
#define QUEUED_COPY(QUEUED_COPY37,1433
#define QUEUED_BODY(QUEUED_BODY40,1570
#define QUEUED_NEXT(QUEUED_NEXT42,1638
enum expand_modifier expand_modifier50,2025
enum expand_modifier {EXPAND_NORMAL,50,2025
enum expand_modifier {EXPAND_NORMAL, EXPAND_SUM,50,2025
		      EXPAND_CONST_ADDRESS,51,2074
		      EXPAND_CONST_ADDRESS, EXPAND_INITIALIZER,51,2074
		      EXPAND_MEMORY_USE_WO,52,2124
		      EXPAND_MEMORY_USE_WO, EXPAND_MEMORY_USE_RW,52,2124
		      EXPAND_MEMORY_USE_BAD,53,2176
		      EXPAND_MEMORY_USE_BAD, EXPAND_MEMORY_USE_DONT}53,2176
enum memory_use_mode memory_use_mode66,2848
enum memory_use_mode {MEMORY_USE_BAD 66,2848
enum memory_use_mode {MEMORY_USE_BAD = 0, MEMORY_USE_RO 66,2848
		      MEMORY_USE_WO 67,2909
		      MEMORY_USE_WO = 2, MEMORY_USE_RW 67,2909
		      MEMORY_USE_TW 68,2955
		      MEMORY_USE_TW = 6, MEMORY_USE_DONT 68,2955
extern rtx forced_labels;71,3056
extern rtx save_expr_regs;75,3218
extern int current_function_calls_alloca;77,3246
extern int current_function_outgoing_args_size;78,3288
extern rtx current_function_arg_offset_rtx;82,3461
extern int current_function_uses_const_pool;85,3577
extern int current_function_uses_pic_offset_table;88,3697
extern rtx current_function_internal_arg_pointer;91,3827
extern int inhibit_defer_pop;97,4116
extern int function_call_count;101,4213
extern rtx nonlocal_goto_handler_slot;106,4377
extern rtx nonlocal_goto_stack_level;112,4567
extern tree nonlocal_labels;119,4832
#define NO_DEFER_POP 122,4869
#define OK_DEFER_POP 123,4915
extern int pending_stack_adjust;127,5103
extern int target_temp_slot_level;133,5366
struct args_sizeargs_size139,5577
#define ADD_PARM_SIZE(ADD_PARM_SIZE148,5703
#define SUB_PARM_SIZE(SUB_PARM_SIZE157,5975
#define ARGS_SIZE_RTX(ARGS_SIZE_RTX167,6358
#define ARGS_SIZE_TREE(ARGS_SIZE_TREE174,6650
enum direction direction182,6945
enum direction {none,182,6945
enum direction {none, upward,182,6945
enum direction {none, upward, downward}182,6945
#define FUNCTION_ARG_PADDING(FUNCTION_ARG_PADDING185,7045
#define FUNCTION_ARG_BOUNDARY(FUNCTION_ARG_BOUNDARY200,7597
#define MUST_PASS_IN_STACK(MUST_PASS_IN_STACK219,8372
#define RETURN_IN_MEMORY(RETURN_IN_MEMORY234,8957
#define STACK_CHECK_BUILTIN 240,9128
#define STACK_CHECK_PROBE_INTERVAL 245,9242
#define STACK_CHECK_PROBE_LOAD 250,9373
#define STACK_CHECK_PROTECT 255,9518
#define STACK_CHECK_MAX_FRAME_SIZE 261,9715
#define STACK_CHECK_FIXED_FRAME_SIZE 267,9910
#define STACK_CHECK_MAX_VAR_SIZE 274,10194
typedef struct optaboptab296,11024
} * optab;optab303,11161
#define GEN_FCN(GEN_FCN313,11555
#define GEN_FCN(GEN_FCN315,11617
extern rtx (*const insn_gen_function[318,11682
extern optab add_optab;320,11727
extern optab sub_optab;321,11751
extern optab smul_optab;322,11775
extern optab smul_highpart_optab;323,11841
extern optab umul_highpart_optab;324,11915
extern optab smul_widen_optab;325,11949
extern optab umul_widen_optab;327,12055
extern optab sdiv_optab;328,12086
extern optab sdivmod_optab;329,12131
extern optab udiv_optab;330,12200
extern optab udivmod_optab;331,12225
extern optab smod_optab;332,12253
extern optab umod_optab;333,12301
extern optab flodiv_optab;334,12326
extern optab ftrunc_optab;335,12386
extern optab and_optab;336,12457
extern optab ior_optab;337,12500
extern optab xor_optab;338,12542
extern optab ashl_optab;339,12585
extern optab ashr_optab;340,12638
extern optab lshr_optab;341,12692
extern optab rotl_optab;342,12743
extern optab rotr_optab;343,12786
extern optab smin_optab;344,12830
extern optab smax_optab;345,12901
extern optab umin_optab;346,12972
extern optab umax_optab;347,13026
extern optab mov_optab;349,13081
extern optab movstrict_optab;350,13131
extern optab cmp_optab;352,13209
extern optab tst_optab;353,13269
extern optab neg_optab;356,13364
extern optab abs_optab;357,13404
extern optab one_cmpl_optab;358,13445
extern optab ffs_optab;359,13492
extern optab sqrt_optab;360,13542
extern optab sin_optab;361,13585
extern optab cos_optab;362,13621
extern optab strlen_optab;363,13659
extern enum insn_code extendtab[366,13776
extern enum insn_code fixtab[369,13923
extern enum insn_code fixtrunctab[370,13994
extern enum insn_code floattab[371,14070
extern optab code_to_optab[374,14194
enum optab_methodsoptab_methods382,14603
  OPTAB_DIRECT,384,14624
  OPTAB_LIB,385,14640
  OPTAB_WIDEN,386,14653
  OPTAB_LIB_WIDEN,387,14668
  OPTAB_MUST_WIDEN388,14687
extern rtx extendsfdf2_libfunc;394,14811
extern rtx extendsfxf2_libfunc;395,14843
extern rtx extendsftf2_libfunc;396,14875
extern rtx extenddfxf2_libfunc;397,14907
extern rtx extenddftf2_libfunc;398,14939
extern rtx truncdfsf2_libfunc;400,14972
extern rtx truncxfsf2_libfunc;401,15003
extern rtx trunctfsf2_libfunc;402,15034
extern rtx truncxfdf2_libfunc;403,15065
extern rtx trunctfdf2_libfunc;404,15096
extern rtx memcpy_libfunc;406,15128
extern rtx bcopy_libfunc;407,15155
extern rtx memcmp_libfunc;408,15181
extern rtx bcmp_libfunc;409,15208
extern rtx memset_libfunc;410,15233
extern rtx bzero_libfunc;411,15260
extern rtx throw_libfunc;413,15287
extern rtx sjthrow_libfunc;414,15313
extern rtx sjpopnthrow_libfunc;415,15341
extern rtx terminate_libfunc;416,15373
extern rtx setjmp_libfunc;417,15403
extern rtx longjmp_libfunc;418,15430
extern rtx get_dynamic_handler_chain_libfunc;419,15458
extern rtx eqhf2_libfunc;421,15505
extern rtx nehf2_libfunc;422,15531
extern rtx gthf2_libfunc;423,15557
extern rtx gehf2_libfunc;424,15583
extern rtx lthf2_libfunc;425,15609
extern rtx lehf2_libfunc;426,15635
extern rtx eqsf2_libfunc;428,15662
extern rtx nesf2_libfunc;429,15688
extern rtx gtsf2_libfunc;430,15714
extern rtx gesf2_libfunc;431,15740
extern rtx ltsf2_libfunc;432,15766
extern rtx lesf2_libfunc;433,15792
extern rtx eqdf2_libfunc;435,15819
extern rtx nedf2_libfunc;436,15845
extern rtx gtdf2_libfunc;437,15871
extern rtx gedf2_libfunc;438,15897
extern rtx ltdf2_libfunc;439,15923
extern rtx ledf2_libfunc;440,15949
extern rtx eqxf2_libfunc;442,15976
extern rtx nexf2_libfunc;443,16002
extern rtx gtxf2_libfunc;444,16028
extern rtx gexf2_libfunc;445,16054
extern rtx ltxf2_libfunc;446,16080
extern rtx lexf2_libfunc;447,16106
extern rtx eqtf2_libfunc;449,16133
extern rtx netf2_libfunc;450,16159
extern rtx gttf2_libfunc;451,16185
extern rtx getf2_libfunc;452,16211
extern rtx lttf2_libfunc;453,16237
extern rtx letf2_libfunc;454,16263
extern rtx floatsisf_libfunc;456,16290
extern rtx floatdisf_libfunc;457,16320
extern rtx floattisf_libfunc;458,16350
extern rtx floatsidf_libfunc;460,16381
extern rtx floatdidf_libfunc;461,16411
extern rtx floattidf_libfunc;462,16441
extern rtx floatsixf_libfunc;464,16472
extern rtx floatdixf_libfunc;465,16502
extern rtx floattixf_libfunc;466,16532
extern rtx floatsitf_libfunc;468,16563
extern rtx floatditf_libfunc;469,16593
extern rtx floattitf_libfunc;470,16623
extern rtx fixsfsi_libfunc;472,16654
extern rtx fixsfdi_libfunc;473,16682
extern rtx fixsfti_libfunc;474,16710
extern rtx fixdfsi_libfunc;476,16739
extern rtx fixdfdi_libfunc;477,16767
extern rtx fixdfti_libfunc;478,16795
extern rtx fixxfsi_libfunc;480,16824
extern rtx fixxfdi_libfunc;481,16852
extern rtx fixxfti_libfunc;482,16880
extern rtx fixtfsi_libfunc;484,16909
extern rtx fixtfdi_libfunc;485,16937
extern rtx fixtfti_libfunc;486,16965
extern rtx fixunssfsi_libfunc;488,16994
extern rtx fixunssfdi_libfunc;489,17025
extern rtx fixunssfti_libfunc;490,17056
extern rtx fixunsdfsi_libfunc;492,17088
extern rtx fixunsdfdi_libfunc;493,17119
extern rtx fixunsdfti_libfunc;494,17150
extern rtx fixunsxfsi_libfunc;496,17182
extern rtx fixunsxfdi_libfunc;497,17213
extern rtx fixunsxfti_libfunc;498,17244
extern rtx fixunstfsi_libfunc;500,17276
extern rtx fixunstfdi_libfunc;501,17307
extern rtx fixunstfti_libfunc;502,17338
extern rtx chkr_check_addr_libfunc;505,17401
extern rtx chkr_set_right_libfunc;506,17437
extern rtx chkr_copy_bitmap_libfunc;507,17472
extern rtx chkr_check_exec_libfunc;508,17509
extern rtx chkr_check_str_libfunc;509,17545
typedef rtx (*rtxfun)rtxfun511,17582
extern rtxfun bcc_gen_fctn[516,17743
extern enum insn_code setcc_gen_code[522,17934
extern enum insn_code movcc_gen_code[528,18113
extern enum insn_code movstr_optab[532,18251
extern enum insn_code clrstr_optab[535,18381
enum save_level save_level895,32805
enum save_level {SAVE_BLOCK,895,32805
enum save_level {SAVE_BLOCK, SAVE_FUNCTION,895,32805
enum save_level {SAVE_BLOCK, SAVE_FUNCTION, SAVE_NONLOCAL}895,32805

flags.h,3529
extern char *main_input_filename;22,872
enum debug_info_typedebug_info_type24,907
  NO_DEBUG,26,930
  DBX_DEBUG,27,974
  SDB_DEBUG,28,1041
  DWARF_DEBUG,29,1108
  DWARF2_DEBUG,30,1177
  XCOFF_DEBUG	31,1251
extern enum debug_info_type write_symbols;35,1382
enum debug_info_leveldebug_info_level37,1426
  DINFO_LEVEL_NONE,39,1450
  DINFO_LEVEL_TERSE,40,1502
  DINFO_LEVEL_NORMAL,41,1577
  DINFO_LEVEL_VERBOSE	42,1655
extern enum debug_info_level debug_info_level;46,1784
extern int use_gnu_debug_info_extensions;50,1929
extern int optimize;54,2019
extern int obey_regdecls;59,2147
extern int quiet_flag;64,2288
extern int inhibit_warnings;68,2355
extern int extra_warnings;72,2461
extern int warn_unused;76,2543
extern int warn_inline;80,2628
extern int warn_uninitialized;84,2727
extern int warn_shadow;88,2831
extern int warn_switch;92,2935
extern int warn_return_type;97,3112
extern int warn_cast_align;103,3317
extern int warn_template_debugging;108,3444
extern int warn_id_clash;113,3606
extern unsigned id_clash_len;114,3632
extern int warn_larger_than;120,3884
extern unsigned larger_than_size;121,3913
extern int warn_aggregate_return;126,4071
extern int profile_flag;130,4158
extern int profile_block_flag;134,4265
extern int profile_arc_flag;138,4367
extern int flag_test_coverage;142,4473
extern int flag_branch_probabilities;146,4584
extern int pedantic;151,4709
extern int in_system_header;156,4839
extern int flag_print_asm_name;161,4979
extern int flag_signed_char;167,5117
extern int flag_short_enums;171,5219
extern int flag_caller_saves;177,5435
extern int flag_pcc_struct_return;181,5544
extern int flag_force_mem;186,5722
extern int flag_force_addr;191,5898
extern int flag_defer_pop;196,6065
extern int flag_float_store;201,6198
extern int flag_strength_reduce;205,6282
extern int flag_unroll_loops;212,6559
extern int flag_unroll_all_loops;217,6699
extern int flag_cse_follow_jumps;222,6827
extern int flag_cse_skip_blocks;227,6945
extern int flag_expensive_optimizations;231,7086
extern int flag_writable_strings;236,7235
extern int flag_no_function_cse;242,7451
extern int flag_omit_frame_pointer;247,7601
extern int flag_no_peephole;251,7707
extern int flag_volatile;255,7805
extern int flag_volatile_global;259,7903
extern int flag_fast_math;266,8193
extern int flag_inline_functions;271,8310
extern int flag_keep_inline_functions;277,8496
extern int flag_no_inline;285,8851
extern int flag_syntax_only;289,8949
extern int flag_gen_aux_info;293,9047
extern int flag_shared_data;297,9135
extern int flag_schedule_insns;304,9339
extern int flag_schedule_insns_after_reload;305,9371
extern int flag_delayed_branch;309,9487
extern int flag_pretend_float;315,9748
extern int flag_pedantic_errors;320,9912
extern int flag_pic;325,10042
extern int flag_exceptions;330,10163
extern int flag_no_common;335,10285
extern int flag_inhibit_size_directive;341,10512
extern int flag_function_sections;346,10711
extern int flag_verbose_asm;355,11185
extern int flag_debug_asm;364,11635
extern int flag_gnu_linker;368,11787
extern int flag_pack_struct;371,11868
extern int flag_stack_check;375,12005
extern int frame_pointer_needed;383,12289
extern int can_reach_end;388,12424
extern int current_function_has_nonlocal_label;393,12544
extern int current_function_has_nonlocal_goto;398,12678
extern int flag_check_memory_usage;402,12805
extern int flag_prefix_function_name;407,12932
extern int current_function_is_thunk;410,13070

frame.h,169
typedef struct frame_stateframe_state4,90
} frame_state;frame_state14,330
#define REG_UNSAVED 17,379
#define REG_SAVED_OFFSET 18,401
#define REG_SAVED_REG 19,428

function.h,443
#define tree 23,848
#define rtx 26,891
struct var_refs_queuevar_refs_queue29,917
struct sequence_stacksequence_stack42,1263
extern struct sequence_stack *sequence_stack;50,1433
struct simple_obstack_stacksimple_obstack_stack54,1514
struct functionfunction63,1741
extern tree inline_function_decl;207,5338
extern rtx return_label;212,5550
extern rtx stack_slot_list;216,5688
extern struct function *outer_function_chain;223,5936

gansidecl.h,452
#define	ANSIDECL_H26,984
#define PROTO(PROTO31,1115
#define PROTO(PROTO33,1146
#define PVPROTO(PVPROTO39,1215
#define VPROTO(VPROTO40,1243
#define VA_START(VA_START41,1280
#define PVPROTO(PVPROTO43,1339
#define VPROTO(VPROTO44,1365
#define VA_START(VA_START45,1415
#define NULL 52,1558
#define GENERIC_PTR 57,1668
#define GENERIC_PTR 59,1701
#define NULL_PTR 64,1760
#define	PTR 69,1820
#define	PTR 73,1847
#define const75,1880

gbl-ctors.h,253
#define HAVE_ATEXIT	35,1427
#define ON_EXIT(ON_EXIT45,1645
#define ON_EXIT(ON_EXIT49,1781
typedef void (*func_ptr)func_ptr55,1896
extern func_ptr __CTOR_LIST__[60,2072
extern func_ptr __DTOR_LIST__[61,2105
#define DO_GLOBAL_CTORS_BODY	84,3060

gcov-io.h,114
#define GCOV_IO_H23,870
__store_long 33,1131
__fetch_long 68,1866
__write_long 100,2622
__read_long 123,3177

getopt.h,264
#define _GETOPT_H 23,960
extern char *optarg;35,1268
extern int optind;49,1775
extern int opterr;54,1901
extern int optopt;58,1980
struct optionoption81,3034
#define	no_argument	97,3383
#define required_argument	98,3406
#define optional_argument	99,3434

glimits.h,740
#define _LIMITS_H___5,95
#define _MACH_MACHLIMITS_H_6,116
#define CHAR_BIT 10,196
#define MB_LEN_MAX 14,283
#define SCHAR_MIN 19,389
#define SCHAR_MAX 21,431
#define UCHAR_MAX 25,538
#define CHAR_MIN 30,655
#define CHAR_MAX 32,690
#define CHAR_MIN 35,733
#define CHAR_MAX 37,773
#define SHRT_MIN 42,883
#define SHRT_MAX 44,925
#define USHRT_MAX 48,1038
#define __INT_MAX__ 52,1142
#define INT_MIN 55,1195
#define INT_MAX 57,1239
#define UINT_MAX 61,1350
#define __LONG_MAX__ 67,1568
#define __LONG_MAX__ 69,1616
#define LONG_MIN 73,1706
#define LONG_MAX 75,1753
#define ULONG_MAX 79,1872
#define __LONG_LONG_MAX__ 84,2088
#define LONG_LONG_MIN 87,2164
#define LONG_LONG_MAX 89,2226
#define ULONG_LONG_MAX 93,2365

gstab.h,144
#define __GNU_STAB__5,65
#define __define_stab(__define_stab7,87
enum __stab_debug_code__stab_debug_code9,141
LAST_UNUSED_STAB_CODE12,186

gsyms.h,1360
#define __GNU_SYMS__4,92
enum sdb_storage_classsdb_storage_class6,114
  C_EFCN 8,139
  C_NULL 9,154
  C_AUTO 10,168
  C_EXT 11,182
  C_STAT 12,195
  C_REG 13,209
  C_EXTDEF 14,222
  C_LABEL 15,238
  C_ULABEL 16,253
  C_MOS 17,269
  C_ARG 18,282
  C_STRTAG 19,295
  C_MOU 20,312
  C_UNTAG 21,326
  C_TPDEF 22,342
  C_USTATIC 23,358
  C_ENTAG 24,376
  C_MOE 25,392
  C_REGPARM 26,406
  C_FIELD 27,424
  C_BLOCK 29,441
  C_FCN 30,458
  C_EOS 31,473
  C_FILE 32,488
  C_LINE 33,504
  C_ALIAS 34,520
  C_HIDDEN 35,537
enum sdb_typesdb_type38,558
  T_NULL 40,574
  T_ARG 41,588
  T_VOID 42,601
  T_CHAR 43,615
  T_SHORT 44,629
  T_INT 45,644
  T_LONG 46,657
  T_FLOAT 47,671
  T_DOUBLE 48,686
  T_STRUCT 49,702
  T_UNION 50,718
  T_ENUM 51,733
  T_MOE 52,748
  T_UCHAR 53,762
  T_USHORT 54,778
  T_UINT 55,795
  T_ULONG 56,810
  , T_LNGDBL 58,857
enum sdb_type_classsdb_type_class62,886
  DT_NON 64,908
  DT_PTR 65,922
  DT_FCN 66,936
  DT_ARY 67,950
enum sdb_maskssdb_masks70,967
  N_BTMASK 73,1016
  N_BTMASK = 0x1f,73,1016
  N_TMASK 74,1035
  N_TMASK = 0x60,74,1035
  N_TMASK1 75,1053
  N_TMASK1 = 0x300,75,1053
  N_TMASK2 76,1073
  N_TMASK2 = 0x360,76,1073
  N_BTSHFT 77,1093
  N_BTMASK 79,1115
  N_TMASK 80,1133
  N_TMASK1 81,1150
  N_TMASK2 82,1169
  N_BTSHFT 83,1188
  N_TSHIFT 85,1211

gsyslimits.h,34
#define _GCC_NEXT_LIMITS_H	6,214

halfpic.h,604
int flag_half_pic;39,1483
extern int  half_pic_number_ptrs;42,1603
extern int  half_pic_number_refs;43,1672
#define HALF_PIC_P(HALF_PIC_P56,2471
#define HALF_PIC_NUMBER_PTRS	57,2509
#define HALF_PIC_NUMBER_REFS	58,2561
#define HALF_PIC_ENCODE(HALF_PIC_ENCODE60,2614
#define HALF_PIC_DECLARE(HALF_PIC_DECLARE61,2667
#define HALF_PIC_EXTERNAL(HALF_PIC_EXTERNAL62,2722
#define HALF_PIC_INIT(HALF_PIC_INIT63,2779
#define HALF_PIC_FINISH(HALF_PIC_FINISH64,2821
#define HALF_PIC_ADDRESS_P(HALF_PIC_ADDRESS_P65,2878
#define HALF_PIC_PTR(HALF_PIC_PTR66,2940
#define	HALF_PIC_PREFIX	70,3039

hard-reg-set.h,4238
typedef unsigned HOST_WIDE_INT HARD_REG_ELT_TYPE;HARD_REG_ELT_TYPE39,1712
#define HARD_REG_SET 43,1816
#define HARD_REG_SET_LONGS 47,1863
typedef HARD_REG_ELT_TYPE HARD_REG_SET[HARD_REG_SET50,1977
#define HARD_CONST(HARD_CONST57,2148
#define SET_HARD_REG_BIT(SET_HARD_REG_BIT88,3280
#define CLEAR_HARD_REG_BIT(CLEAR_HARD_REG_BIT90,3354
#define TEST_HARD_REG_BIT(TEST_HARD_REG_BIT92,3433
#define CLEAR_HARD_REG_SET(CLEAR_HARD_REG_SET95,3510
#define SET_HARD_REG_SET(SET_HARD_REG_SET96,3565
#define COPY_HARD_REG_SET(COPY_HARD_REG_SET98,3621
#define COMPL_HARD_REG_SET(COMPL_HARD_REG_SET99,3673
#define IOR_HARD_REG_SET(IOR_HARD_REG_SET101,3728
#define IOR_COMPL_HARD_REG_SET(IOR_COMPL_HARD_REG_SET102,3780
#define AND_HARD_REG_SET(AND_HARD_REG_SET103,3840
#define AND_COMPL_HARD_REG_SET(AND_COMPL_HARD_REG_SET104,3892
#define GO_IF_HARD_REG_SUBSET(GO_IF_HARD_REG_SUBSET106,3953
#define GO_IF_HARD_REG_EQUAL(GO_IF_HARD_REG_EQUAL108,4036
#define UHOST_BITS_PER_WIDE_INT 112,4105
#define SET_HARD_REG_BIT(SET_HARD_REG_BIT114,4174
#define CLEAR_HARD_REG_BIT(CLEAR_HARD_REG_BIT118,4316
#define TEST_HARD_REG_BIT(TEST_HARD_REG_BIT122,4463
#define CLEAR_HARD_REG_SET(CLEAR_HARD_REG_SET127,4661
#define SET_HARD_REG_SET(SET_HARD_REG_SET132,4812
#define COPY_HARD_REG_SET(COPY_HARD_REG_SET137,4963
#define COMPL_HARD_REG_SET(COMPL_HARD_REG_SET142,5157
#define AND_HARD_REG_SET(AND_HARD_REG_SET147,5355
#define AND_COMPL_HARD_REG_SET(AND_COMPL_HARD_REG_SET152,5550
#define IOR_HARD_REG_SET(IOR_HARD_REG_SET157,5754
#define IOR_COMPL_HARD_REG_SET(IOR_COMPL_HARD_REG_SET162,5948
#define GO_IF_HARD_REG_SUBSET(GO_IF_HARD_REG_SUBSET167,6152
#define GO_IF_HARD_REG_EQUAL(GO_IF_HARD_REG_EQUAL173,6380
#define CLEAR_HARD_REG_SET(CLEAR_HARD_REG_SET181,6653
#define SET_HARD_REG_SET(SET_HARD_REG_SET187,6833
#define COPY_HARD_REG_SET(COPY_HARD_REG_SET193,7014
#define COMPL_HARD_REG_SET(COMPL_HARD_REG_SET199,7246
#define AND_HARD_REG_SET(AND_HARD_REG_SET205,7483
#define AND_COMPL_HARD_REG_SET(AND_COMPL_HARD_REG_SET211,7717
#define IOR_HARD_REG_SET(IOR_HARD_REG_SET217,7961
#define IOR_COMPL_HARD_REG_SET(IOR_COMPL_HARD_REG_SET223,8193
#define GO_IF_HARD_REG_SUBSET(GO_IF_HARD_REG_SUBSET229,8437
#define GO_IF_HARD_REG_EQUAL(GO_IF_HARD_REG_EQUAL236,8710
#define CLEAR_HARD_REG_SET(CLEAR_HARD_REG_SET245,9021
#define SET_HARD_REG_SET(SET_HARD_REG_SET252,9230
#define COPY_HARD_REG_SET(COPY_HARD_REG_SET259,9441
#define COMPL_HARD_REG_SET(COMPL_HARD_REG_SET266,9711
#define AND_HARD_REG_SET(AND_HARD_REG_SET273,9987
#define AND_COMPL_HARD_REG_SET(AND_COMPL_HARD_REG_SET280,10260
#define IOR_HARD_REG_SET(IOR_HARD_REG_SET287,10544
#define IOR_COMPL_HARD_REG_SET(IOR_COMPL_HARD_REG_SET294,10814
#define GO_IF_HARD_REG_SUBSET(GO_IF_HARD_REG_SUBSET301,11098
#define GO_IF_HARD_REG_EQUAL(GO_IF_HARD_REG_EQUAL309,11416
#define CLEAR_HARD_REG_SET(CLEAR_HARD_REG_SET319,11767
#define SET_HARD_REG_SET(SET_HARD_REG_SET325,11969
#define COPY_HARD_REG_SET(COPY_HARD_REG_SET331,12170
#define COMPL_HARD_REG_SET(COMPL_HARD_REG_SET337,12406
#define AND_HARD_REG_SET(AND_HARD_REG_SET343,12645
#define AND_COMPL_HARD_REG_SET(AND_COMPL_HARD_REG_SET349,12881
#define IOR_HARD_REG_SET(IOR_HARD_REG_SET355,13125
#define IOR_COMPL_HARD_REG_SET(IOR_COMPL_HARD_REG_SET361,13361
#define GO_IF_HARD_REG_SUBSET(GO_IF_HARD_REG_SUBSET367,13605
#define GO_IF_HARD_REG_EQUAL(GO_IF_HARD_REG_EQUAL374,13905
extern char fixed_regs[393,14512
extern HARD_REG_SET fixed_reg_set;397,14601
extern char call_used_regs[404,14862
extern HARD_REG_SET call_used_reg_set;408,14955
extern HARD_REG_SET losing_caller_save_reg_set;411,15049
extern char call_fixed_regs[419,15418
extern HARD_REG_SET call_fixed_reg_set;423,15512
extern char global_regs[430,15755
extern int reg_alloc_order[435,15958
extern HARD_REG_SET reg_class_contents[440,16094
extern int reg_class_size[444,16193
extern enum reg_class reg_class_superclasses[448,16306
extern enum reg_class reg_class_subclasses[452,16458
extern enum reg_class reg_class_subunion[457,16620
extern enum reg_class reg_class_superunion[462,16784
extern int n_non_fixed_regs;466,16898
extern char *reg_names[470,16984

hconfig.h,0

input.h,264
extern char *input_filename;23,938
extern char *main_input_filename;26,998
extern int lineno;29,1076
extern FILE *finput;32,1139
struct file_stackfile_stack34,1161
extern struct file_stack *input_file_stack;44,1389
extern int input_file_stack_tick;47,1489

integrate.h,167
struct inline_remapinline_remap33,1352
#define CONST_AGE_PARM 78,3535
extern rtx *global_const_equiv_map;129,5447
extern int global_const_equiv_map_size;130,5483

limitx.h,29
#define _GCC_LIMITS_H_7,303

limity.h,0

longlong.h,4915
#define SI_TYPE_SIZE 20,881
#define __BITS4 23,913
#define __ll_B 24,948
#define __ll_lowpart(__ll_lowpart25,990
#define __ll_highpart(__ll_highpart26,1039
#define __CLOBBER_CC83,3548
#define __AND_CLOBBER_CC84,3569
#define __CLOBBER_CC 86,3620
#define __AND_CLOBBER_CC 87,3648
#define add_ssaaaa(add_ssaaaa91,3750
#define sub_ddmmss(sub_ddmmss100,4047
#define umul_ppmm(umul_ppmm109,4343
#define udiv_qrnnd(udiv_qrnnd121,4713
#define count_leading_zeros(count_leading_zeros128,4949
#define add_ssaaaa(add_ssaaaa135,5134
#define sub_ddmmss(sub_ddmmss144,5438
#define umul_ppmm(umul_ppmm154,5769
#define __umulsidi3 161,5945
#define add_ssaaaa(add_ssaaaa166,6047
#define sub_ddmmss(sub_ddmmss175,6348
#define umul_ppmm(umul_ppmm184,6647
#define UMUL_TIME 204,7192
#define UDIV_TIME 205,7213
#define umul_ppmm(umul_ppmm209,7283
#define smul_ppmm(smul_ppmm218,7586
#define __umulsidi3(__umulsidi3227,7885
#define add_ssaaaa(add_ssaaaa237,8134
#define sub_ddmmss(sub_ddmmss246,8426
#define umul_ppmm(umul_ppmm255,8716
#define udiv_qrnnd(udiv_qrnnd261,8918
#define count_leading_zeros(count_leading_zeros268,9152
#define add_ssaaaa(add_ssaaaa276,9338
#define sub_ddmmss(sub_ddmmss285,9638
#define umul_ppmm(umul_ppmm295,9962
#define UMUL_TIME 309,10362
#define UMUL_TIME 311,10388
#define UDIV_TIME 313,10416
#define count_leading_zeros(count_leading_zeros314,10437
#define add_ssaaaa(add_ssaaaa338,11271
#define sub_ddmmss(sub_ddmmss347,11562
#define umul_ppmm(umul_ppmm356,11851
#define udiv_qrnnd(udiv_qrnnd362,12045
#define count_leading_zeros(count_leading_zeros369,12275
#define UMUL_TIME 376,12495
#define UDIV_TIME 377,12516
#define add_ssaaaa(add_ssaaaa384,12671
#define sub_ddmmss(sub_ddmmss401,13187
#define umul_ppmm(umul_ppmm422,13756
#define __umulsidi3(__umulsidi3431,14061
#define add_ssaaaa(add_ssaaaa441,14309
#define sub_ddmmss(sub_ddmmss453,14677
#define add_ssaaaa(add_ssaaaa468,15090
#define sub_ddmmss(sub_ddmmss477,15386
#define umul_ppmm(umul_ppmm493,15964
#define UMUL_TIME 499,16167
#define udiv_qrnnd(udiv_qrnnd500,16188
#define UDIV_TIME 507,16427
#define sdiv_qrnnd(sdiv_qrnnd508,16448
#define umul_ppmm(umul_ppmm519,16802
#define UMUL_TIME 551,17455
#define UDIV_TIME 552,17477
#define count_leading_zeros(count_leading_zeros562,17818
#define add_ssaaaa(add_ssaaaa570,18026
#define sub_ddmmss(sub_ddmmss579,18336
#define count_leading_zeros(count_leading_zeros588,18644
#define umul_ppmm(umul_ppmm597,18903
#define udiv_qrnnd(udiv_qrnnd609,19264
#define UMUL_TIME 620,19632
#define UDIV_TIME 621,19652
#define UMUL_TIME 623,19679
#define UDIV_TIME 624,19700
#define umul_ppmm(umul_ppmm629,19795
#define UMUL_TIME 635,19990
#define UDIV_TIME 636,20011
#define umul_ppmm(umul_ppmm640,20082
#define __umulsidi3(__umulsidi3649,20384
#define udiv_qrnnd(udiv_qrnnd656,20580
#define add_ssaaaa(add_ssaaaa669,21023
#define sub_ddmmss(sub_ddmmss694,22026
#define count_leading_zeros(count_leading_zeros733,23597
#define umul_ppmm(umul_ppmm738,23765
#define UMUL_TIME 747,24036
#define smul_ppmm(smul_ppmm748,24057
#define SMUL_TIME 757,24325
#define UDIV_TIME 758,24346
#define umul_ppmm(umul_ppmm760,24374
#define UMUL_TIME 771,24743
#define smul_ppmm(smul_ppmm772,24763
#define SMUL_TIME 778,24939
#define sdiv_qrnnd(sdiv_qrnnd779,24959
#define UDIV_TIME 783,25149
#define add_ssaaaa(add_ssaaaa788,25244
#define sub_ddmmss(sub_ddmmss797,25536
#define umul_ppmm(umul_ppmm807,25903
#define add_ssaaaa(add_ssaaaa820,26280
#define sub_ddmmss(sub_ddmmss829,26566
#define umul_ppmm(umul_ppmm838,26850
#define UMUL_TIME 870,27430
#define UDIV_TIME 871,27451
#define count_leading_zeros(count_leading_zeros872,27473
#define add_ssaaaa(add_ssaaaa889,27900
#define sub_ddmmss(sub_ddmmss899,28227
#define umul_ppmm(umul_ppmm910,28579
#define udiv_qrnnd(udiv_qrnnd916,28785
#define umul_ppmm(umul_ppmm927,29230
#define udiv_qrnnd(udiv_qrnnd933,29436
#define UDIV_TIME 979,30506
#define count_leading_zeros(count_leading_zeros980,30527
#define umul_ppmm(umul_ppmm987,30809
#define UMUL_TIME 1033,31955
#define udiv_qrnnd(udiv_qrnnd1036,32132
#define UDIV_TIME 1066,32957
#define add_ssaaaa(add_ssaaaa1072,33130
#define sub_ddmmss(sub_ddmmss1081,33422
#define umul_ppmm(umul_ppmm1090,33712
#define sdiv_qrnnd(sdiv_qrnnd1106,34214
#define add_ssaaaa(add_ssaaaa1123,34667
#define sub_ddmmss(sub_ddmmss1133,34903
#define umul_ppmm(umul_ppmm1143,35138
#define __umulsidi3(__umulsidi31169,36010
#define __udiv_qrnnd_c(__udiv_qrnnd_c1176,36205
#define udiv_qrnnd(udiv_qrnnd1216,37461
#define UDIV_NEEDS_NORMALIZATION 1226,37738
#define udiv_qrnnd 1227,37773
extern const UQItype __clz_tab[1231,37850
#define count_leading_zeros(count_leading_zeros1232,37884
#define UDIV_NEEDS_NORMALIZATION 1255,38540

loop.h,998
#define INSN_LUID(INSN_LUID24,953
enum g_types g_types38,1541
enum g_types { DEST_ADDR,38,1541
enum g_types { DEST_ADDR, DEST_REG 38,1541
struct inductioninduction43,1702
struct iv_class iv_class120,5581
enum iv_mode iv_mode143,6752
enum iv_mode { UNKNOWN_INDUCT,143,6752
enum iv_mode { UNKNOWN_INDUCT, BASIC_INDUCT,143,6752
enum iv_mode { UNKNOWN_INDUCT, BASIC_INDUCT, NOT_BASIC_INDUCT,143,6752
		 GENERAL_INDUCT 144,6815
extern int *uid_luid;148,6904
extern int max_uid_for_loop;149,6926
extern int *uid_loop_num;150,6955
extern int *loop_outer_loop;151,6981
extern rtx *loop_number_exit_labels;152,7010
extern int *loop_number_exit_count;153,7047
extern unsigned HOST_WIDE_INT loop_n_iterations;154,7083
extern int max_reg_before_loop;155,7132
extern FILE *loop_dump_stream;157,7165
extern enum iv_mode *reg_iv_type;159,7197
extern struct induction **reg_iv_info;160,7231
extern struct iv_class **reg_biv_class;161,7270
extern struct iv_class *loop_iv_list;162,7310

machmode.h,2624
#define HAVE_MACHINE_MODES22,873
#define MIN(MIN36,1255
#define MAX(MAX37,1296
#define HOST_BITS_PER_WIDE_INT 44,1483
#define HOST_WIDE_INT 45,1533
#define HOST_BITS_PER_WIDE_INT 47,1566
#define HOST_WIDE_INT 48,1615
#define HOST_PTR_PRINTF 56,1750
#define HOST_WIDE_INT_PRINT_DEC 66,2049
#define HOST_WIDE_INT_PRINT_DEC 69,2141
#define HOST_WIDE_INT_PRINT_DEC 71,2185
#define HOST_WIDE_INT_PRINT_UNSIGNED 78,2331
#define HOST_WIDE_INT_PRINT_UNSIGNED 81,2428
#define HOST_WIDE_INT_PRINT_UNSIGNED 83,2477
#define HOST_WIDE_INT_PRINT_HEX 90,2623
#define HOST_WIDE_INT_PRINT_HEX 93,2717
#define HOST_WIDE_INT_PRINT_HEX 95,2763
#define HOST_WIDE_INT_PRINT_DOUBLE_HEX 103,2946
#define HOST_WIDE_INT_PRINT_DOUBLE_HEX 106,3052
#define HOST_WIDE_INT_PRINT_DOUBLE_HEX 108,3111
#define HOST_WIDE_INT_PRINT_DOUBLE_HEX 113,3234
#define HOST_WIDE_INT_PRINT_DOUBLE_HEX 116,3339
#define HOST_WIDE_INT_PRINT_DOUBLE_HEX 118,3397
#define DEF_MACHMODE(DEF_MACHMODE126,3541
enum machine_mode machine_mode128,3605
  EXTRA_CC_MODES,132,3672
MAX_MACHINE_MODE 134,3697
#define NUM_MACHINE_MODES 139,3765
extern char *mode_name[144,3869
#define GET_MODE_NAME(GET_MODE_NAME145,3895
enum mode_class mode_class147,3951
enum mode_class { MODE_RANDOM,147,3951
enum mode_class { MODE_RANDOM, MODE_INT,147,3951
enum mode_class { MODE_RANDOM, MODE_INT, MODE_FLOAT,147,3951
enum mode_class { MODE_RANDOM, MODE_INT, MODE_FLOAT, MODE_PARTIAL_INT,147,3951
enum mode_class { MODE_RANDOM, MODE_INT, MODE_FLOAT, MODE_PARTIAL_INT, MODE_CC,147,3951
		  MODE_COMPLEX_INT,148,4031
		  MODE_COMPLEX_INT, MODE_COMPLEX_FLOAT,148,4031
		  MODE_COMPLEX_INT, MODE_COMPLEX_FLOAT, MAX_MODE_CLASS}148,4031
extern enum mode_class mode_class[153,4194
#define GET_MODE_CLASS(GET_MODE_CLASS154,4231
#define INTEGRAL_MODE_P(INTEGRAL_MODE_P157,4333
#define FLOAT_MODE_P(FLOAT_MODE_P163,4556
extern int mode_size[169,4736
#define GET_MODE_SIZE(GET_MODE_SIZE170,4760
extern int mode_unit_size[174,4892
#define GET_MODE_UNIT_SIZE(GET_MODE_UNIT_SIZE175,4921
#define GET_MODE_NUNITS(GET_MODE_NUNITS179,5033
#define GET_MODE_BITSIZE(GET_MODE_BITSIZE185,5228
#define GET_MODE_MASK(GET_MODE_MASK190,5391
extern enum machine_mode mode_wider_mode[196,5636
#define GET_MODE_WIDER_MODE(GET_MODE_WIDER_MODE197,5680
#define GET_MODE_ALIGNMENT(GET_MODE_ALIGNMENT211,6241
extern enum machine_mode class_narrowest_mode[217,6434
#define GET_CLASS_NARROWEST_MODE(GET_CLASS_NARROWEST_MODE218,6483
extern enum machine_mode byte_mode;223,6710
extern enum machine_mode word_mode;224,6746
extern enum machine_mode ptr_mode;225,6782

obstack.h,3400
#define _OBSTACK_H 110,4972
#define __PTR_TO_INT(__PTR_TO_INT121,5241
#define __INT_TO_PTR(__INT_TO_PTR125,5313
#define __need_ptrdiff_t138,5865
#define PTR_INT_TYPE 146,5968
#define PTR_INT_TYPE 148,6005
#define _obstack_memcpy(_obstack_memcpy153,6106
#define _obstack_memcpy(_obstack_memcpy156,6190
#define _obstack_memcpy(_obstack_memcpy158,6260
struct _obstack_chunk	_obstack_chunk162,6338
struct obstack	obstack169,6566
extern int obstack_exit_failure;274,10886
#define obstack_base(obstack_base280,11127
#define obstack_chunk_size(obstack_chunk_size284,11216
#define obstack_next_free(obstack_next_free288,11330
#define obstack_alignment_mask(obstack_alignment_mask292,11456
#define obstack_init(obstack_init298,11643
#define obstack_begin(obstack_begin302,11785
#define obstack_specify_allocation(obstack_specify_allocation306,11939
#define obstack_specify_allocation_with_arg(obstack_specify_allocation_with_arg310,12130
#define obstack_chunkfun(obstack_chunkfun315,12368
#define obstack_freefun(obstack_freefun318,12491
#define obstack_init(obstack_init323,12618
#define obstack_begin(obstack_begin327,12750
#define obstack_specify_allocation(obstack_specify_allocation331,12894
#define obstack_specify_allocation_with_arg(obstack_specify_allocation_with_arg335,13075
#define obstack_chunkfun(obstack_chunkfun339,13279
#define obstack_freefun(obstack_freefun342,13390
#define obstack_1grow_fast(obstack_1grow_fast347,13487
#define obstack_blank_fast(obstack_blank_fast349,13554
#define obstack_memory_used(obstack_memory_used351,13611
#define __extension__358,13940
#define obstack_object_size(obstack_object_size366,14172
#define obstack_room(obstack_room371,14341
#define obstack_make_room(obstack_make_room376,14504
#define obstack_empty_p(obstack_empty_p384,14762
#define obstack_grow(obstack_grow389,14950
#define obstack_grow0(obstack_grow0399,15309
#define obstack_1grow(obstack_1grow410,15711
#define obstack_ptr_grow(obstack_ptr_grow422,16138
#define obstack_int_grow(obstack_int_grow430,16436
#define obstack_ptr_grow_fast(obstack_ptr_grow_fast438,16724
#define obstack_int_grow_fast(obstack_int_grow_fast439,16809
#define obstack_blank(obstack_blank441,16891
#define obstack_alloc(obstack_alloc450,17181
#define obstack_copy(obstack_copy456,17359
#define obstack_copy0(obstack_copy0462,17548
#define obstack_finish(obstack_finish470,17837
#define obstack_free(obstack_free486,18447
#define obstack_object_size(obstack_object_size496,18796
#define obstack_room(obstack_room499,18878
#define obstack_empty_p(obstack_empty_p502,18954
#define obstack_make_room(obstack_make_room511,19315
#define obstack_grow(obstack_grow516,19496
#define obstack_grow0(obstack_grow0523,19780
#define obstack_1grow(obstack_1grow531,20107
#define obstack_ptr_grow(obstack_ptr_grow536,20277
#define obstack_int_grow(obstack_int_grow541,20525
#define obstack_ptr_grow_fast(obstack_ptr_grow_fast546,20758
#define obstack_int_grow_fast(obstack_int_grow_fast547,20844
#define obstack_blank(obstack_blank549,20926
#define obstack_alloc(obstack_alloc555,21141
#define obstack_copy(obstack_copy558,21236
#define obstack_copy0(obstack_copy0561,21343
#define obstack_finish(obstack_finish564,21452
#define obstack_free(obstack_free579,22041
#define obstack_free(obstack_free586,22379

options.h,0

output.h,1385
extern int which_alternative;309,12365
extern rtx final_sequence;318,12668
extern int current_function_pops_args;325,12888
extern int current_function_returns_struct;330,13037
extern int current_function_returns_pcc_struct;335,13195
extern int current_function_needs_context;339,13322
extern int current_function_calls_setjmp;343,13426
extern int current_function_calls_longjmp;347,13530
extern int current_function_calls_alloca;352,13672
extern int current_function_has_nonlocal_label;357,13808
extern int current_function_contains_functions;361,13927
extern int current_function_returns_pointer;365,14038
extern int current_function_args_size;371,14249
extern int current_function_pretend_args_size;376,14447
extern int current_function_outgoing_args_size;382,14706
extern int current_function_varargs;387,14862
extern int current_function_stdarg;392,15007
extern CUMULATIVE_ARGS current_function_args_info;397,15134
extern char *current_function_name;401,15231
extern rtx current_function_return_rtx;408,15463
extern rtx current_function_epilogue_delay_list;413,15623
extern int flag_pic;419,15776
extern int current_function_uses_pic_offset_table;422,15872
extern int current_function_uses_const_pool;425,15995
extern int sdb_begin_function_line;431,16250
extern FILE *asm_out_file;437,16363
#define DECL_READONLY_SECTION(DECL_READONLY_SECTION443,16506

pcp.h,161
typedef struct stringdef STRINGDEF;STRINGDEF24,872
struct stringdefstringdef25,908
typedef struct keydef KEYDEF;KEYDEF36,1270
struct keydefkeydef37,1300

real.h,4156
#define REAL_H_INCLUDED22,856
#define UNKNOWN_FLOAT_FORMAT 25,944
#define IEEE_FLOAT_FORMAT 26,975
#define VAX_FLOAT_FORMAT 27,1003
#define IBM_FLOAT_FORMAT 28,1030
#define	TARGET_FLOAT_FORMAT	33,1163
#define	HOST_FLOAT_FORMAT	37,1243
#define REAL_INFINITY41,1340
#define FLOAT_WORDS_BIG_ENDIAN 50,1631
#define HOST_FLOAT_WORDS_BIG_ENDIAN 56,1813
#define HOST_FLOAT_WORDS_BIG_ENDIAN 58,1857
#define LONG_DOUBLE_TYPE_SIZE 67,2180
#define REAL_ARITHMETIC71,2312
#define REAL_IS_NOT_DOUBLE80,2605
#define REAL_ARITHMETIC81,2632
} realvaluetype;realvaluetype84,2748
#define REAL_VALUE_TYPE 85,2765
#define REAL_IS_NOT_DOUBLE91,2871
#define REAL_ARITHMETIC92,2898
} realvaluetype;realvaluetype95,3014
#define REAL_VALUE_TYPE 96,3031
#define REAL_IS_NOT_DOUBLE103,3258
} realvaluetype;realvaluetype106,3376
#define REAL_VALUE_TYPE 107,3393
#define REAL_VALUE_TYPE 111,3547
#define REAL_ARITHMETIC(REAL_ARITHMETIC126,4090
#define REAL_VALUES_EQUAL(REAL_VALUES_EQUAL159,5661
#define REAL_VALUES_LESS(REAL_VALUES_LESS161,5743
#define REAL_VALUE_LDEXP(REAL_VALUE_LDEXP162,5803
#define REAL_VALUE_RNDZINT(REAL_VALUE_RNDZINT165,5890
#define REAL_VALUE_UNSIGNED_RNDZINT(REAL_VALUE_UNSIGNED_RNDZINT166,5934
#define REAL_VALUE_TRUNCATE(REAL_VALUE_TRUNCATE168,6035
#define REAL_VALUE_FIX(REAL_VALUE_FIX172,6210
#define REAL_VALUE_UNSIGNED_FIX(REAL_VALUE_UNSIGNED_FIX175,6331
#define REAL_VALUE_ATOF 177,6380
#define REAL_VALUE_NEGATE 178,6415
#define REAL_VALUE_MINUS_ZERO(REAL_VALUE_MINUS_ZERO180,6455
#define REAL_VALUE_TO_INT 183,6551
#define REAL_VALUE_FROM_INT(REAL_VALUE_FROM_INT186,6664
#define REAL_VALUE_FROM_UNSIGNED_INT(REAL_VALUE_FROM_UNSIGNED_INT189,6784
#define REAL_VALUE_TO_TARGET_LONG_DOUBLE(REAL_VALUE_TO_TARGET_LONG_DOUBLE194,6968
#define REAL_VALUE_TO_TARGET_LONG_DOUBLE(REAL_VALUE_TO_TARGET_LONG_DOUBLE196,7052
#define REAL_VALUE_TO_TARGET_DOUBLE(REAL_VALUE_TO_TARGET_DOUBLE198,7137
#define REAL_VALUE_TO_TARGET_SINGLE(REAL_VALUE_TO_TARGET_SINGLE201,7257
#define REAL_VALUE_FROM_TARGET_DOUBLE(REAL_VALUE_FROM_TARGET_DOUBLE205,7455
#define REAL_VALUE_FROM_TARGET_SINGLE(REAL_VALUE_FROM_TARGET_SINGLE208,7599
#define REAL_VALUE_TO_DECIMAL(REAL_VALUE_TO_DECIMAL211,7709
#define	REAL_IS_NOT_DOUBLE230,8504
  } realvaluetype;realvaluetype234,8633
#define REAL_VALUE_TYPE 235,8652
#define REAL_VALUE_TYPE 246,9002
#define REAL_IS_NOT_DOUBLE248,9039
#define REAL_VALUE_TO_TARGET_SINGLE(REAL_VALUE_TO_TARGET_SINGLE257,9352
#define REAL_VALUE_TO_TARGET_DOUBLE(REAL_VALUE_TO_TARGET_DOUBLE267,9715
#define REAL_VALUE_TO_TARGET_LONG_DOUBLE(REAL_VALUE_TO_TARGET_LONG_DOUBLE285,10334
#define REAL_VALUES_EQUAL(REAL_VALUES_EQUAL290,10505
#define REAL_VALUES_LESS(REAL_VALUES_LESS295,10639
#define REAL_VALUE_RNDZINT(REAL_VALUE_RNDZINT300,10781
#define REAL_VALUE_UNSIGNED_RNDZINT(REAL_VALUE_UNSIGNED_RNDZINT305,10951
#define REAL_VALUE_FIX(REAL_VALUE_FIX310,11125
#define REAL_VALUE_UNSIGNED_FIX(REAL_VALUE_UNSIGNED_FIX316,11286
#define REAL_VALUE_LDEXP(REAL_VALUE_LDEXP321,11408
#define REAL_VALUE_ATOF(REAL_VALUE_ATOF330,11659
#define REAL_VALUE_ATOF(REAL_VALUE_ATOF333,11786
#define REAL_VALUE_NEGATE(REAL_VALUE_NEGATE347,12198
#define REAL_VALUE_TRUNCATE(REAL_VALUE_TRUNCATE358,12636
#define REAL_VALUE_ISINF(REAL_VALUE_ISINF365,12860
#define REAL_VALUE_ISNAN(REAL_VALUE_ISNAN370,12999
#define REAL_VALUE_NEGATIVE(REAL_VALUE_NEGATIVE375,13144
#define REAL_VALUE_MINUS_ZERO(REAL_VALUE_MINUS_ZERO384,13458
extern REAL_VALUE_TYPE dconst0;389,13584
extern REAL_VALUE_TYPE dconst1;390,13616
extern REAL_VALUE_TYPE dconst2;391,13648
extern REAL_VALUE_TYPE dconstm1;392,13680
union real_extract real_extract397,13807
#define CONST_DOUBLE_LOW(CONST_DOUBLE_LOW410,14293
#define CONST_DOUBLE_HIGH(CONST_DOUBLE_HIGH411,14334
#define CONST_DOUBLE_CHAIN(CONST_DOUBLE_CHAIN414,14448
#define CONST_DOUBLE_MEM(CONST_DOUBLE_MEM418,14653
#define REAL_VALUE_FROM_CONST_DOUBLE(REAL_VALUE_FROM_CONST_DOUBLE426,14907
#define CONST_DOUBLE_FROM_REAL_VALUE(CONST_DOUBLE_FROM_REAL_VALUE433,15147
#define REAL_VALUE_TO_DECIMAL(REAL_VALUE_TO_DECIMAL442,15521

recog.h,720
extern int volatile_ok;64,2906
extern rtx recog_operand[69,3044
extern rtx *recog_operand_loc[72,3136
extern rtx *recog_dup_loc[76,3312
extern char recog_dup_num[80,3458
#define OUT_FCN(OUT_FCN84,3533
extern char *const insn_template[91,3751
extern char *(*const insn_outfun[93,3788
extern const int insn_n_operands[95,3829
extern const int insn_n_dups[97,3866
extern const int insn_n_alternatives[101,3972
extern char *const insn_operand_constraint[107,4226
extern const char insn_operand_address_p[111,4380
extern const enum machine_mode insn_operand_mode[114,4452
extern const char insn_operand_strict_low[116,4525
extern int (*const insn_operand_predicate[118,4591
extern char * insn_name[120,4661

regs.h,1571
#define REG_BYTES(REG_BYTES23,850
#define REG_SIZE(REG_SIZE29,1117
#define SMALL_REGISTER_CLASSES 33,1245
extern int max_regno;38,1351
extern int max_scratch;42,1446
typedef struct reg_info_def reg_info_def45,1525
} reg_info;reg_info61,2254
extern reg_info *reg_n_info;63,2267
#define REG_N_REFS(REG_N_REFS68,2419
#define REG_N_SETS(REG_N_SETS74,2614
#define REG_N_DEATHS(REG_N_DEATHS82,2994
#define REG_CHANGES_SIZE(REG_CHANGES_SIZE88,3259
#define PSEUDO_REGNO_SIZE(PSEUDO_REGNO_SIZE92,3394
#define PSEUDO_REGNO_BYTES(PSEUDO_REGNO_BYTES98,3577
#define PSEUDO_REGNO_MODE(PSEUDO_REGNO_MODE103,3696
#define REG_N_CALLS_CROSSED(REG_N_CALLS_CROSSED107,3833
#define REG_LIVE_LENGTH(REG_LIVE_LENGTH124,4639
extern short *reg_renumber;133,4972
extern char regs_ever_live[138,5081
extern char *reg_names[142,5189
extern enum machine_mode reg_raw_mode[149,5477
#define REGNO_FIRST_UID(REGNO_FIRST_UID156,5789
#define REGNO_LAST_UID(REGNO_LAST_UID164,6154
#define REGNO_LAST_NOTE_UID(REGNO_LAST_NOTE_UID168,6281
extern int reg_rtx_no;173,6499
extern char *regno_pointer_flag;179,6755
#define REGNO_POINTER_FLAG(REGNO_POINTER_FLAG180,6788
extern int regno_pointer_flag_length;181,6848
extern rtx regs_may_share;185,7002
extern rtx *regno_reg_rtx;190,7135
extern int caller_save_needed;195,7281
#define CALLER_SAVE_PROFITABLE(CALLER_SAVE_PROFITABLE202,7515
#define CLASS_LIKELY_SPILLED_P(CLASS_LIKELY_SPILLED_P208,7719
extern rtx *scratch_list;214,7891
extern int *scratch_block;216,7971
extern int scratch_list_length;218,8076

reload.h,2097
#define SECONDARY_INPUT_RELOAD_CLASS(SECONDARY_INPUT_RELOAD_CLASS26,951
#define SECONDARY_OUTPUT_RELOAD_CLASS(SECONDARY_OUTPUT_RELOAD_CLASS28,1048
#define HAVE_SECONDARY_RELOADS34,1310
#define MAX_RELOADS 40,1463
extern enum reg_class reload_address_base_reg_class;42,1538
extern enum reg_class reload_address_index_reg_class;43,1591
extern rtx reload_in[44,1645
extern rtx reload_out[45,1680
extern rtx reload_in_reg[46,1716
extern enum reg_class reload_reg_class[47,1755
extern enum machine_mode reload_inmode[48,1808
extern enum machine_mode reload_outmode[49,1861
extern char reload_optional[50,1915
extern int reload_inc[51,1957
extern int reload_opnum[52,1993
extern int reload_secondary_p[53,2031
extern int reload_secondary_in_reload[54,2075
extern int reload_secondary_out_reload[55,2127
extern enum insn_code reload_secondary_in_icode[57,2201
extern enum insn_code reload_secondary_out_icode[58,2263
extern int n_reloads;60,2333
extern rtx reload_reg_rtx[62,2356
enum reload_typereload_type88,3608
  RELOAD_FOR_INPUT,90,3627
  RELOAD_FOR_INPUT, RELOAD_FOR_OUTPUT,90,3627
  RELOAD_FOR_INPUT, RELOAD_FOR_OUTPUT, RELOAD_FOR_INSN,90,3627
  RELOAD_FOR_INPUT_ADDRESS,91,3684
  RELOAD_FOR_INPUT_ADDRESS, RELOAD_FOR_INPADDR_ADDRESS,91,3684
  RELOAD_FOR_OUTPUT_ADDRESS,92,3740
  RELOAD_FOR_OUTPUT_ADDRESS, RELOAD_FOR_OUTADDR_ADDRESS,92,3740
  RELOAD_FOR_OPERAND_ADDRESS,93,3797
  RELOAD_FOR_OPERAND_ADDRESS, RELOAD_FOR_OPADDR_ADDR,93,3797
  RELOAD_OTHER,94,3851
  RELOAD_OTHER, RELOAD_FOR_OTHER_ADDRESS94,3851
extern enum reload_type reload_when_needed[97,3896
extern rtx *reg_equiv_constant;99,3954
extern rtx *reg_equiv_memory_loc;100,3986
extern rtx *reg_equiv_address;101,4020
extern rtx *reg_equiv_mem;102,4051
extern int n_earlyclobbers;106,4160
extern rtx reload_earlyclobbers[107,4188
extern int reload_n_operands;110,4278
extern int reload_first_uid;114,4403
extern char indirect_symref_ok;120,4654
extern char double_reg_address_ok;123,4763
extern enum insn_code reload_in_optab[129,5001
extern enum insn_code reload_out_optab[130,5042

rtl.h,10246
#define RTX_CODE	35,1114
enum rtx_code rtx_code36,1145
#define DEF_RTL_EXPR(DEF_RTL_EXPR38,1163
  LAST_AND_UNUSED_RTX_CODE}42,1303
#define NUM_RTX_CODE 46,1443
extern int rtx_length[49,1545
#define GET_RTX_LENGTH(GET_RTX_LENGTH50,1570
extern char *rtx_name[52,1628
#define GET_RTX_NAME(GET_RTX_NAME53,1653
extern char *rtx_format[55,1707
#define GET_RTX_FORMAT(GET_RTX_FORMAT56,1734
extern char rtx_class[58,1792
#define GET_RTX_CLASS(GET_RTX_CLASS59,1817
typedef union rtunion_defrtunion_def63,1921
} rtunion;rtunion71,2079
typedef struct rtx_defrtx_def75,2123
} *rtx;rtx151,5475
#define NULL_RTX 155,5508
#define GET_CODE(GET_CODE160,5617
#define PUT_CODE(PUT_CODE161,5672
#define GET_CODE(GET_CODE163,5739
#define PUT_CODE(PUT_CODE164,5776
#define GET_MODE(GET_MODE167,5835
#define PUT_MODE(PUT_MODE168,5872
#define RTX_INTEGRATED_P(RTX_INTEGRATED_P170,5924
#define RTX_UNCHANGING_P(RTX_UNCHANGING_P171,5974
#define RTX_FRAME_RELATED_P(RTX_FRAME_RELATED_P172,6024
typedef struct rtvec_def{rtvec_def178,6239
} *rtvec;rtvec181,6326
#define NULL_RTVEC 183,6337
#define GET_NUM_ELEM(GET_NUM_ELEM185,6367
#define PUT_NUM_ELEM(PUT_NUM_ELEM186,6416
#define RTVEC_ELT(RTVEC_ELT188,6478
#define REG_P(REG_P192,6558
#define CONSTANT_P(CONSTANT_P196,6653
#define XEXP(XEXP203,6930
#define XINT(XINT204,6971
#define XWINT(XWINT205,7014
#define XSTR(XSTR206,7059
#define XVEC(XVEC207,7102
#define XVECLEN(XVECLEN208,7145
#define XVECEXP(XVECEXP209,7201
#define INSN_UID(INSN_UID215,7414
#define PREV_INSN(PREV_INSN218,7502
#define NEXT_INSN(NEXT_INSN219,7547
#define PATTERN(PATTERN222,7621
#define INSN_CODE(INSN_CODE226,7787
#define LOG_LINKS(LOG_LINKS233,8144
#define INSN_DELETED_P(INSN_DELETED_P236,8226
#define CONST_CALL_P(CONST_CALL_P239,8322
#define INSN_ANNULLED_BRANCH_P(INSN_ANNULLED_BRANCH_P243,8493
#define INSN_FROM_TARGET_P(INSN_FROM_TARGET_P249,8850
#define REG_NOTES(REG_NOTES312,12940
enum reg_note reg_note315,13040
enum reg_note { REG_DEAD 315,13040
enum reg_note { REG_DEAD = 1, REG_INC 315,13040
enum reg_note { REG_DEAD = 1, REG_INC = 2, REG_EQUIV 315,13040
enum reg_note { REG_DEAD = 1, REG_INC = 2, REG_EQUIV = 3, REG_WAS_0 315,13040
		REG_EQUAL 316,13113
		REG_EQUAL = 5, REG_RETVAL 316,13113
		REG_EQUAL = 5, REG_RETVAL = 6, REG_LIBCALL 316,13113
		REG_NONNEG 317,13163
		REG_NONNEG = 8, REG_NO_CONFLICT 317,13163
		REG_NONNEG = 8, REG_NO_CONFLICT = 9, REG_UNUSED 317,13163
		REG_CC_SETTER 318,13219
		REG_CC_SETTER = 11, REG_CC_USER 318,13219
		REG_CC_SETTER = 11, REG_CC_USER = 12, REG_LABEL 318,13219
		REG_DEP_ANTI 319,13275
		REG_DEP_ANTI = 14, REG_DEP_OUTPUT 319,13275
		REG_DEP_ANTI = 14, REG_DEP_OUTPUT = 15, REG_BR_PROB 319,13275
		REG_EXEC_COUNT 320,13335
#define REG_BR_PROB_BASE 322,13412
#define REG_NOTE_KIND(REG_NOTE_KIND325,13523
#define PUT_REG_NOTE_KIND(PUT_REG_NOTE_KIND326,13585
extern char *reg_note_name[330,13716
#define GET_REG_NOTE_NAME(GET_REG_NOTE_NAME331,13746
#define CALL_INSN_FUNCTION_USAGE(CALL_INSN_FUNCTION_USAGE340,14170
#define CODE_LABEL_NUMBER(CODE_LABEL_NUMBER345,14400
#define LINE_NUMBER 347,14456
#define NOTE_SOURCE_FILE(NOTE_SOURCE_FILE355,14804
#define NOTE_BLOCK_NUMBER(NOTE_BLOCK_NUMBER356,14859
#define NOTE_LINE_NUMBER(NOTE_LINE_NUMBER360,15045
#define NOTE_INSN_DELETED 377,15768
#define NOTE_INSN_BLOCK_BEG 378,15797
#define NOTE_INSN_BLOCK_END 379,15828
#define NOTE_INSN_LOOP_BEG 380,15859
#define NOTE_INSN_LOOP_END 381,15889
#define NOTE_INSN_FUNCTION_END 387,16251
#define NOTE_INSN_SETJMP 389,16364
#define NOTE_INSN_LOOP_CONT 391,16458
#define NOTE_INSN_LOOP_VTOP 393,16546
#define NOTE_INSN_PROLOGUE_END 395,16647
#define NOTE_INSN_EPILOGUE_BEG 397,16756
#define NOTE_INSN_DELETED_LABEL 399,16864
#define NOTE_INSN_FUNCTION_BEG 403,17059
#define NOTE_INSN_EH_REGION_BEG 405,17160
#define NOTE_INSN_EH_REGION_END 406,17196
#define NOTE_REPEATED_LINE_NUMBER 410,17458
#define NOTE_DECL_NAME(NOTE_DECL_NAME414,17575
#define NOTE_DECL_CODE(NOTE_DECL_CODE415,17627
#define NOTE_DECL_RTL(NOTE_DECL_RTL416,17679
#define NOTE_DECL_IDENTIFIER(NOTE_DECL_IDENTIFIER417,17728
#define NOTE_DECL_TYPE(NOTE_DECL_TYPE418,17786
extern char *note_insn_name[423,17909
#define GET_NOTE_INSN_NAME(GET_NOTE_INSN_NAME424,17940
#define LABEL_NAME(LABEL_NAME428,18111
#define LABEL_NUSES(LABEL_NUSES432,18290
#define BYTECODE_LABEL(BYTECODE_LABEL440,18600
#define BYTECODE_BC_LABEL(BYTECODE_BC_LABEL443,18693
#define ADDRESSOF_REGNO(ADDRESSOF_REGNO446,18818
#define ADDRESSOF_DECL(ADDRESSOF_DECL449,18930
#define SET_ADDRESSOF_DECL(SET_ADDRESSOF_DECL450,18979
#define JUMP_LABEL(JUMP_LABEL455,19241
#define LABEL_REFS(LABEL_REFS461,19503
#define LABEL_NEXTREF(LABEL_NEXTREF467,19714
#define CONTAINING_INSN(CONTAINING_INSN472,19881
#define REGNO(REGNO476,19990
#define REG_FUNCTION_VALUE_P(REG_FUNCTION_VALUE_P481,20141
#define REG_USERVAR_P(REG_USERVAR_P484,20272
#define INTVAL(INTVAL488,20375
#define SUBREG_REG(SUBREG_REG493,20537
#define SUBREG_WORD(SUBREG_WORD494,20581
#define SUBREG_PROMOTED_VAR_P(SUBREG_PROMOTED_VAR_P504,20949
#define SUBREG_PROMOTED_UNSIGNED_P(SUBREG_PROMOTED_UNSIGNED_P505,21003
#define ASM_OPERANDS_TEMPLATE(ASM_OPERANDS_TEMPLATE509,21122
#define ASM_OPERANDS_OUTPUT_CONSTRAINT(ASM_OPERANDS_OUTPUT_CONSTRAINT510,21173
#define ASM_OPERANDS_OUTPUT_IDX(ASM_OPERANDS_OUTPUT_IDX511,21233
#define ASM_OPERANDS_INPUT_VEC(ASM_OPERANDS_INPUT_VEC512,21286
#define ASM_OPERANDS_INPUT_CONSTRAINT_VEC(ASM_OPERANDS_INPUT_CONSTRAINT_VEC513,21338
#define ASM_OPERANDS_INPUT(ASM_OPERANDS_INPUT514,21401
#define ASM_OPERANDS_INPUT_LENGTH(ASM_OPERANDS_INPUT_LENGTH515,21460
#define ASM_OPERANDS_INPUT_CONSTRAINT(ASM_OPERANDS_INPUT_CONSTRAINT516,21518
#define ASM_OPERANDS_INPUT_MODE(ASM_OPERANDS_INPUT_MODE517,21598
#define ASM_OPERANDS_SOURCE_FILE(ASM_OPERANDS_SOURCE_FILE518,21673
#define ASM_OPERANDS_SOURCE_LINE(ASM_OPERANDS_SOURCE_LINE519,21727
#define MEM_VOLATILE_P(MEM_VOLATILE_P523,21868
#define MEM_IN_STRUCT_P(MEM_IN_STRUCT_P526,21986
#define LABEL_OUTSIDE_LOOP_P(LABEL_OUTSIDE_LOOP_P530,22147
#define LABEL_REF_NONLOCAL_P(LABEL_REF_NONLOCAL_P534,22315
#define LABEL_PRESERVE_P(LABEL_PRESERVE_P537,22441
#define REG_LOOP_TEST_P(REG_LOOP_TEST_P540,22570
#define SCHED_GROUP_P(SCHED_GROUP_P544,22730
#define LINK_COST_ZERO(LINK_COST_ZERO553,23283
#define LINK_COST_FREE(LINK_COST_FREE554,23321
#define SET_DEST(SET_DEST558,23458
#define SET_SRC(SET_SRC559,23500
#define TRAP_CONDITION(TRAP_CONDITION562,23601
#define CONSTANT_POOL_ADDRESS_P(CONSTANT_POOL_ADDRESS_P565,23723
#define SYMBOL_REF_FLAG(SYMBOL_REF_FLAG568,23840
#define SYMBOL_REF_USED(SYMBOL_REF_USED571,23967
#define FIRST_FUNCTION_INSN(FIRST_FUNCTION_INSN599,25484
#define FIRST_PARM_INSN(FIRST_PARM_INSN600,25537
#define FIRST_LABELNO(FIRST_LABELNO601,25586
#define LAST_LABELNO(LAST_LABELNO602,25635
#define MAX_PARMREG(MAX_PARMREG603,25683
#define MAX_REGNUM(MAX_REGNUM604,25730
#define FUNCTION_ARGS_SIZE(FUNCTION_ARGS_SIZE605,25776
#define POPS_ARGS(POPS_ARGS606,25830
#define STACK_SLOT_LIST(STACK_SLOT_LIST607,25875
#define FORCED_LABELS(FORCED_LABELS608,25925
#define FUNCTION_FLAGS(FUNCTION_FLAGS609,25973
#define OUTGOING_ARGS_SIZE(OUTGOING_ARGS_SIZE610,26024
#define ORIGINAL_ARG_VECTOR(ORIGINAL_ARG_VECTOR611,26079
#define ORIGINAL_DECL_INITIAL(ORIGINAL_DECL_INITIAL612,26135
#define INLINE_REGNO_REG_RTX(INLINE_REGNO_REG_RTX613,26191
#define INLINE_REGNO_POINTER_FLAG(INLINE_REGNO_POINTER_FLAG614,26248
#define INLINE_REGNO_POINTER_ALIGN(INLINE_REGNO_POINTER_ALIGN615,26310
#define PARMREG_STACK_LOC(PARMREG_STACK_LOC616,26373
#define FUNCTION_FLAGS_CALLS_ALLOCA 623,26709
#define FUNCTION_FLAGS_CALLS_SETJMP 624,26748
#define FUNCTION_FLAGS_RETURNS_STRUCT 625,26787
#define FUNCTION_FLAGS_RETURNS_PCC_STRUCT 626,26828
#define FUNCTION_FLAGS_NEEDS_CONTEXT 627,26874
#define FUNCTION_FLAGS_HAS_NONLOCAL_LABEL 628,26915
#define FUNCTION_FLAGS_RETURNS_POINTER 629,26961
#define FUNCTION_FLAGS_USES_CONST_POOL 630,27005
#define FUNCTION_FLAGS_CALLS_LONGJMP 631,27049
#define FUNCTION_FLAGS_USES_PIC_OFFSET_TABLE 632,27091
#define FIND_REG_INC_NOTE(FIND_REG_INC_NOTE639,27446
#define FIND_REG_INC_NOTE(FIND_REG_INC_NOTE641,27530
#define AUTO_INC_DEC649,27909
#define exact_log2(exact_log2659,28176
#define floor_log2(floor_log2660,28236
#define plus_constant(plus_constant663,28304
#define plus_constant_for_output(plus_constant_for_output665,28376
#define GEN_INT(GEN_INT671,28607
extern int max_parallel;848,36876
extern rtx pc_rtx;859,37269
extern rtx cc0_rtx;860,37288
extern rtx const0_rtx;861,37308
extern rtx const1_rtx;862,37331
extern rtx const2_rtx;863,37354
extern rtx constm1_rtx;864,37377
extern rtx const_true_rtx;865,37401
extern rtx const_tiny_rtx[867,37429
#define CONST0_RTX(CONST0_RTX872,37584
#define CONST1_RTX(CONST1_RTX876,37689
#define CONST2_RTX(CONST2_RTX877,37748
extern rtx stack_pointer_rtx;882,37976
extern rtx frame_pointer_rtx;883,38006
extern rtx hard_frame_pointer_rtx;884,38036
extern rtx arg_pointer_rtx;885,38071
extern rtx pic_offset_table_rtx;886,38099
extern rtx struct_value_rtx;887,38132
extern rtx struct_value_incoming_rtx;888,38161
extern rtx static_chain_rtx;889,38199
extern rtx static_chain_incoming_rtx;890,38228
#define HARD_FRAME_POINTER_REGNUM 899,38742
#define FIRST_VIRTUAL_REGISTER	908,39129
extern rtx virtual_incoming_args_rtx;914,39359
#define VIRTUAL_INCOMING_ARGS_REGNUM	916,39398
extern rtx virtual_stack_vars_rtx;922,39624
#define VIRTUAL_STACK_VARS_REGNUM	924,39660
extern rtx virtual_stack_dynamic_rtx;930,39890
#define VIRTUAL_STACK_DYNAMIC_REGNUM	932,39929
extern rtx virtual_outgoing_args_rtx;938,40179
#define VIRTUAL_OUTGOING_ARGS_REGNUM	940,40218
#define LAST_VIRTUAL_REGISTER	942,40287
#define STORE_FLAG_VALUE 963,40977
extern int reload_completed;969,41084
extern int reload_in_progress;974,41240
extern int cse_not_expected;982,41626
extern rtx *regno_reg_rtx;986,41779
extern char *regno_pointer_align;990,41924
#define REGNO_POINTER_ALIGN(REGNO_POINTER_ALIGN991,41958

scan.h,635
typedef struct sstringsstring20,808
} sstring;sstring25,875
#define INIT_SSTRING(INIT_SSTRING27,887
#define FREE_SSTRING(FREE_SSTRING28,965
#define SSTRING_PUT(SSTRING_PUT29,1042
#define SSTRING_LENGTH(SSTRING_LENGTH32,1176
#define MAKE_SSTRING_SPACE(MAKE_SSTRING_SPACE33,1231
#define _PARAMS(_PARAMS38,1411
#define _PARAMS(_PARAMS40,1444
struct fn_declfn_decl45,1506
extern int lineno;53,1606
#define IDENTIFIER_TOKEN 65,2143
#define CHAR_TOKEN 66,2172
#define STRING_TOKEN 67,2195
#define INT_TOKEN 68,2220
extern int source_lineno;72,2363
extern sstring source_filename;73,2389
extern int lineno;75,2456

specs.h,0

stack.h,38
struct stack_levelstack_level25,966

sys-protos.h,160
extern ENTRY                  TLgetentry(6,257
extern ENTRY *                hsearch(542,30653
extern ENTRY *                hsearch(ENTRY, ACTION)542,30653

sys-types.h,5172
enum clnt_stat clnt_stat1,0
enum clnt_stat { ___fake1 1,0
enum auth_stat auth_stat2,29
enum auth_stat { ___fake2 2,29
struct timeval timeval65,959
struct in_addr in_addr69,1034
struct mallinfo mallinfo71,1076
#define ssize_t 89,1367
typedef int dev_t;dev_t94,1501
typedef int pid_t;pid_t95,1520
typedef int gid_t;gid_t96,1539
typedef int off_t;off_t97,1558
typedef int mode_t;mode_t98,1577
typedef int uid_t;uid_t99,1597
typedef int proc_t;proc_t101,1617
typedef int time_t;time_t102,1637
typedef int addr_t;addr_t103,1657
typedef int caddr_t;caddr_t104,1677
typedef int clock_t;clock_t105,1698
typedef int div_t;div_t106,1719
typedef int ldiv_t;ldiv_t107,1738
typedef int dl_t;dl_t108,1758
typedef int major_t;major_t109,1776
typedef int minor_t;minor_t110,1797
typedef int emcp_t;emcp_t111,1818
typedef int fpclass_t;fpclass_t112,1838
typedef int index_t;index_t113,1861
typedef int ecb_t;ecb_t114,1882
typedef int aioop_t;aioop_t115,1901
typedef int evver_t;evver_t116,1922
typedef int evcntlcmds_t;evcntlcmds_t117,1943
typedef int idtype_t;idtype_t118,1969
typedef int id_t;id_t119,1991
typedef int procset_t;procset_t120,2009
typedef int hostid_t;hostid_t121,2032
typedef int evpollcmds_t;evpollcmds_t122,2054
typedef int event_t;event_t123,2080
typedef int hrtime_t;hrtime_t124,2101
typedef int evqcntlcmds_t;evqcntlcmds_t125,2123
typedef int sigset_t;sigset_t126,2150
typedef int evsiginfo_t;evsiginfo_t127,2172
typedef int evcontext_t;evcontext_t128,2197
typedef int evta_t;evta_t129,2222
typedef int speed_t;speed_t130,2242
typedef int rlim_t;rlim_t131,2263
typedef int cred_t;cred_t132,2283
typedef int file_t;file_t133,2303
typedef int vnode_t;vnode_t134,2323
typedef int vfs_t;vfs_t135,2344
typedef int fpos_t;fpos_t136,2363
typedef int exhda_t;exhda_t137,2383
typedef int ucontext_t;ucontext_t138,2404
typedef int sess_t;sess_t139,2428
typedef int hrtcmd_t;hrtcmd_t140,2448
typedef int interval_t;interval_t141,2470
typedef int key_t;key_t142,2494
typedef int daddr_t;daddr_t143,2513
typedef int stack_t;stack_t144,2534
typedef int sigaction_t;sigaction_t145,2555
typedef int siginfo_t;siginfo_t146,2580
typedef int mblk_t;mblk_t147,2603
typedef int paddr_t;paddr_t148,2623
typedef int qband_t;qband_t149,2644
typedef int queue_t;queue_t150,2665
typedef int rf_resource_t;rf_resource_t151,2686
typedef int sr_mount_t;sr_mount_t152,2713
typedef int timer_t;timer_t153,2737
typedef int fpregset_t;fpregset_t154,2758
typedef int prstatus_t;prstatus_t155,2782
typedef int vfssw_t;vfssw_t156,2806
typedef int eucwidth_t;eucwidth_t157,2827
typedef int page_t;page_t158,2851
typedef int u_int;u_int160,2872
typedef int u_short;u_short161,2891
typedef int u_long;u_long162,2912
typedef int u_char;u_char163,2932
typedef int ushort;ushort165,2953
typedef int ulong;ulong166,2973
typedef int uint;uint167,2992
typedef int __gnuc_va_list;__gnuc_va_list169,3011
typedef int archdr;archdr171,3040
typedef int AUTH;AUTH172,3060
typedef int CLIENT;CLIENT173,3078
typedef int DIR;DIR174,3098
typedef int ENTRY;ENTRY175,3115
typedef int Elf;Elf176,3134
typedef int Elf32_Ehdr;Elf32_Ehdr177,3151
typedef int Elf32_Phdr;Elf32_Phdr178,3175
typedef int Elf32_Shdr;Elf32_Shdr179,3199
typedef int Elf_Arhdr;Elf_Arhdr180,3223
typedef int Elf_Arsym;Elf_Arsym181,3246
typedef int Elf_Cmd;Elf_Cmd182,3269
typedef int Elf_Data;Elf_Data183,3290
typedef int Elf_Scn;Elf_Scn184,3312
typedef int Elf_Type;Elf_Type185,3333
typedef int Elf_Kind;Elf_Kind186,3355
typedef int FIELD;FIELD187,3377
typedef int FIELDTYPE;FIELDTYPE188,3396
typedef int PTF_int;PTF_int189,3419
typedef int PTF_void;PTF_void190,3440
typedef int PTF_charP;PTF_charP191,3462
typedef int FILE;FILE192,3485
typedef int FORM;FORM193,3503
typedef int ITEM;ITEM194,3521
typedef int MENU;MENU195,3539
typedef int OPTIONS;OPTIONS196,3557
typedef int PANEL;PANEL197,3578
typedef int FTP_void;FTP_void198,3597
typedef int RPCBLIST;RPCBLIST199,3619
typedef int SCREEN;SCREEN200,3641
typedef int SVCXPRT;SVCXPRT201,3661
typedef int TERMINAL;TERMINAL202,3682
typedef int WINDOW;WINDOW203,3704
typedef int bool;bool204,3724
typedef int nl_catd;nl_catd205,3742
typedef int nl_item;nl_item206,3763
typedef int chtype;chtype207,3784
typedef int datum;datum208,3804
typedef int fp_rnd;fp_rnd209,3823
typedef int spraycumul;spraycumul210,3843
typedef int WORD;WORD211,3867
typedef int VISIT;VISIT212,3885
typedef int ACTION;ACTION213,3904
typedef int *jmp_buf;jmp_buf215,3925
typedef int *sigjmp_buf;sigjmp_buf216,3947
typedef int xdrproc_t;xdrproc_t217,3972
typedef int CALL;CALL218,3995
typedef int bool_t;bool_t219,4013
typedef int DBM;DBM220,4033
typedef int des_block;des_block221,4050
typedef int resultproc_t;resultproc_t222,4073
#define mode_t 227,4113
#define uid_t 228,4132
#define gid_t 229,4150
#define time_t 230,4168
#define pid_t 231,4188
#define signal_ret_t 232,4206
#define wait_arg_t 233,4231
#define signal_ret_t 237,4269
#define wait_arg_t 238,4295

tconfig.h,0

tm.h,0

tree.h,13661
#define DEFTREECODE(DEFTREECODE29,911
enum tree_code tree_code31,965
  LAST_AND_UNUSED_TREE_CODE	34,1003
#define NUM_TREE_CODES 41,1149
extern char **tree_code_type;50,1585
#define TREE_CODE_CLASS(TREE_CODE_CLASS51,1615
extern int *tree_code_length;55,1738
extern char **tree_code_name;59,1803
enum built_in_functionbuilt_in_function64,1944
  NOT_BUILT_IN,66,1969
  BUILT_IN_ALLOCA,67,1985
  BUILT_IN_ABS,68,2004
  BUILT_IN_FABS,69,2020
  BUILT_IN_LABS,70,2037
  BUILT_IN_FFS,71,2054
  BUILT_IN_DIV,72,2070
  BUILT_IN_LDIV,73,2086
  BUILT_IN_FFLOOR,74,2103
  BUILT_IN_FCEIL,75,2122
  BUILT_IN_FMOD,76,2140
  BUILT_IN_FREM,77,2157
  BUILT_IN_MEMCPY,78,2174
  BUILT_IN_MEMCMP,79,2193
  BUILT_IN_MEMSET,80,2212
  BUILT_IN_STRCPY,81,2231
  BUILT_IN_STRCMP,82,2250
  BUILT_IN_STRLEN,83,2269
  BUILT_IN_FSQRT,84,2288
  BUILT_IN_SIN,85,2306
  BUILT_IN_COS,86,2322
  BUILT_IN_GETEXP,87,2338
  BUILT_IN_GETMAN,88,2357
  BUILT_IN_SAVEREGS,89,2376
  BUILT_IN_CLASSIFY_TYPE,90,2397
  BUILT_IN_NEXT_ARG,91,2423
  BUILT_IN_ARGS_INFO,92,2444
  BUILT_IN_CONSTANT_P,93,2466
  BUILT_IN_FRAME_ADDRESS,94,2489
  BUILT_IN_RETURN_ADDRESS,95,2515
  BUILT_IN_AGGREGATE_INCOMING_ADDRESS,96,2542
  BUILT_IN_CALLER_RETURN_ADDRESS,97,2581
  BUILT_IN_APPLY_ARGS,98,2615
  BUILT_IN_APPLY,99,2638
  BUILT_IN_RETURN,100,2656
  BUILT_IN_SETJMP,101,2675
  BUILT_IN_LONGJMP,102,2694
  BUILT_IN_FP,105,2771
  BUILT_IN_FP, BUILT_IN_SP,105,2771
  BUILT_IN_UNWIND_INIT,106,2799
  BUILT_IN_DWARF_FP_REGNUM,107,2823
  BUILT_IN_DWARF_REG_SIZE,108,2851
  BUILT_IN_FROB_RETURN_ADDR,109,2878
  BUILT_IN_EXTRACT_RETURN_ADDR,110,2907
  BUILT_IN_SET_RETURN_ADDR_REG,111,2939
  BUILT_IN_EH_STUB,112,2971
  BUILT_IN_SET_EH_REGS,113,2991
  BUILT_IN_NEW,116,3039
  BUILT_IN_VEC_NEW,117,3055
  BUILT_IN_DELETE,118,3075
  BUILT_IN_VEC_DELETE,119,3094
  END_BUILTINS122,3173
typedef union tree_node *tree;tree143,3998
struct tree_commontree_common150,4202
#define TREE_CODE(TREE_CODE294,7447
#define TREE_SET_CODE(TREE_SET_CODE295,7510
#define TREE_TYPE(TREE_TYPE300,7796
#define TREE_CHAIN(TREE_CHAIN311,8263
#define STRIP_NOPS(STRIP_NOPS316,8431
#define STRIP_TYPE_NOPS(STRIP_TYPE_NOPS326,8783
#define INTEGRAL_TYPE_P(INTEGRAL_TYPE_P337,9161
#define FLOAT_TYPE_P(FLOAT_TYPE_P344,9445
#define AGGREGATE_TYPE_P(AGGREGATE_TYPE_P351,9678
#define POINTER_TYPE_P(POINTER_TYPE_P358,9948
#define TREE_ADDRESSABLE(TREE_ADDRESSABLE375,10863
#define TREE_STATIC(TREE_STATIC380,11111
#define TREE_NO_UNUSED_WARNING(TREE_NO_UNUSED_WARNING384,11313
#define TREE_VIA_VIRTUAL(TREE_VIA_VIRTUAL388,11495
#define TREE_CONSTANT_OVERFLOW(TREE_CONSTANT_OVERFLOW393,11779
#define TREE_SYMBOL_REFERENCED(TREE_SYMBOL_REFERENCED397,11953
#define TREE_OVERFLOW(TREE_OVERFLOW402,12244
#define TREE_PUBLIC(TREE_PUBLIC409,12568
#define TREE_VIA_PUBLIC(TREE_VIA_PUBLIC414,12806
#define TREE_VIA_PRIVATE(TREE_VIA_PRIVATE417,12908
#define TREE_VIA_PROTECTED(TREE_VIA_PROTECTED423,13164
#define TREE_SIDE_EFFECTS(TREE_SIDE_EFFECTS430,13549
#define TREE_THIS_VOLATILE(TREE_THIS_VOLATILE442,14102
#define TREE_READONLY(TREE_READONLY449,14456
#define TREE_CONSTANT(TREE_CONSTANT455,14703
#define TREE_PERMANENT(TREE_PERMANENT460,14921
#define TREE_UNSIGNED(TREE_UNSIGNED465,15170
#define TREE_ASM_WRITTEN(TREE_ASM_WRITTEN474,15680
#define TREE_USED(TREE_USED480,15959
#define TREE_RAISES(TREE_RAISES484,16129
#define TREE_PRIVATE(TREE_PRIVATE487,16216
#define TREE_PROTECTED(TREE_PROTECTED490,16353
#define TREE_LANG_FLAG_0(TREE_LANG_FLAG_0493,16495
#define TREE_LANG_FLAG_1(TREE_LANG_FLAG_1494,16555
#define TREE_LANG_FLAG_2(TREE_LANG_FLAG_2495,16615
#define TREE_LANG_FLAG_3(TREE_LANG_FLAG_3496,16675
#define TREE_LANG_FLAG_4(TREE_LANG_FLAG_4497,16735
#define TREE_LANG_FLAG_5(TREE_LANG_FLAG_5498,16795
#define TREE_LANG_FLAG_6(TREE_LANG_FLAG_6499,16855
#define TREE_INT_CST_LOW(TREE_INT_CST_LOW507,17265
#define TREE_INT_CST_HIGH(TREE_INT_CST_HIGH508,17326
#define INT_CST_LT(INT_CST_LT510,17390
#define INT_CST_LT_UNSIGNED(INT_CST_LT_UNSIGNED516,17636
struct tree_int_csttree_int_cst524,18007
#define TREE_CST_RTL(TREE_CST_RTL537,18404
#define TREE_REAL_CST(TREE_REAL_CST544,18643
struct tree_real_csttree_real_cst548,18719
#define TREE_STRING_LENGTH(TREE_STRING_LENGTH557,18930
#define TREE_STRING_POINTER(TREE_STRING_POINTER558,18987
struct tree_stringtree_string560,19047
#define TREE_REALPART(TREE_REALPART570,19267
#define TREE_IMAGPART(TREE_IMAGPART571,19318
struct tree_complextree_complex573,19370
#define IDENTIFIER_LENGTH(IDENTIFIER_LENGTH584,19654
#define IDENTIFIER_POINTER(IDENTIFIER_POINTER585,19714
struct tree_identifiertree_identifier587,19777
#define TREE_PURPOSE(TREE_PURPOSE595,19909
#define TREE_VALUE(TREE_VALUE596,19959
struct tree_listtree_list598,20006
#define TREE_VEC_LENGTH(TREE_VEC_LENGTH606,20154
#define TREE_VEC_ELT(TREE_VEC_ELT607,20205
#define TREE_VEC_END(TREE_VEC_END608,20253
struct tree_vectree_vec610,20320
#define SAVE_EXPR_CONTEXT(SAVE_EXPR_CONTEXT620,20532
#define SAVE_EXPR_RTL(SAVE_EXPR_RTL621,20586
#define SAVE_EXPR_NOPLACEHOLDER(SAVE_EXPR_NOPLACEHOLDER622,20662
#define RTL_EXPR_SEQUENCE(RTL_EXPR_SEQUENCE625,20749
#define RTL_EXPR_RTL(RTL_EXPR_RTL626,20829
#define CALL_EXPR_RTL(CALL_EXPR_RTL629,20933
#define CONSTRUCTOR_ELTS(CONSTRUCTOR_ELTS632,21040
#define TREE_OPERAND(TREE_OPERAND635,21132
#define TREE_COMPLEXITY(TREE_COMPLEXITY636,21188
struct tree_exptree_exp638,21244
#define BLOCK_VARS(BLOCK_VARS646,21385
#define BLOCK_TYPE_TAGS(BLOCK_TYPE_TAGS647,21431
#define BLOCK_SUBBLOCKS(BLOCK_SUBBLOCKS648,21487
#define BLOCK_SUPERCONTEXT(BLOCK_SUPERCONTEXT649,21543
#define BLOCK_CHAIN(BLOCK_CHAIN652,21700
#define BLOCK_ABSTRACT_ORIGIN(BLOCK_ABSTRACT_ORIGIN653,21744
#define BLOCK_ABSTRACT(BLOCK_ABSTRACT654,21812
#define BLOCK_END_NOTE(BLOCK_END_NOTE655,21871
#define BLOCK_HANDLER_BLOCK(BLOCK_HANDLER_BLOCK659,22030
struct tree_blocktree_block661,22100
#define TYPE_UID(TYPE_UID681,22621
#define TYPE_SIZE(TYPE_SIZE682,22663
#define TYPE_MODE(TYPE_MODE683,22707
#define TYPE_VALUES(TYPE_VALUES684,22751
#define TYPE_DOMAIN(TYPE_DOMAIN685,22799
#define TYPE_FIELDS(TYPE_FIELDS686,22847
#define TYPE_METHODS(TYPE_METHODS687,22895
#define TYPE_VFIELD(TYPE_VFIELD688,22944
#define TYPE_ARG_TYPES(TYPE_ARG_TYPES689,22992
#define TYPE_METHOD_BASETYPE(TYPE_METHOD_BASETYPE690,23043
#define TYPE_OFFSET_BASETYPE(TYPE_OFFSET_BASETYPE691,23100
#define TYPE_POINTER_TO(TYPE_POINTER_TO692,23157
#define TYPE_REFERENCE_TO(TYPE_REFERENCE_TO693,23213
#define TYPE_MIN_VALUE(TYPE_MIN_VALUE694,23273
#define TYPE_MAX_VALUE(TYPE_MAX_VALUE695,23324
#define TYPE_PRECISION(TYPE_PRECISION696,23375
#define TYPE_SYMTAB_ADDRESS(TYPE_SYMTAB_ADDRESS697,23429
#define TYPE_SYMTAB_POINTER(TYPE_SYMTAB_POINTER698,23493
#define TYPE_NAME(TYPE_NAME699,23557
#define TYPE_NEXT_VARIANT(TYPE_NEXT_VARIANT700,23601
#define TYPE_MAIN_VARIANT(TYPE_MAIN_VARIANT701,23661
#define TYPE_BINFO(TYPE_BINFO702,23721
#define TYPE_NONCOPIED_PARTS(TYPE_NONCOPIED_PARTS703,23767
#define TYPE_CONTEXT(TYPE_CONTEXT704,23833
#define TYPE_OBSTACK(TYPE_OBSTACK705,23883
#define TYPE_LANG_SPECIFIC(TYPE_LANG_SPECIFIC706,23933
#define TYPE_ATTRIBUTES(TYPE_ATTRIBUTES710,24081
#define TYPE_ALIGN(TYPE_ALIGN714,24237
#define TYPE_STUB_DECL(TYPE_STUB_DECL716,24284
#define TYPE_NO_FORCE_BLK(TYPE_NO_FORCE_BLK721,24488
#define TYPE_VOLATILE(TYPE_VOLATILE724,24611
#define TYPE_READONLY(TYPE_READONLY727,24714
#define TYPE_LANG_FLAG_0(TYPE_LANG_FLAG_0730,24854
#define TYPE_LANG_FLAG_1(TYPE_LANG_FLAG_1731,24912
#define TYPE_LANG_FLAG_2(TYPE_LANG_FLAG_2732,24970
#define TYPE_LANG_FLAG_3(TYPE_LANG_FLAG_3733,25028
#define TYPE_LANG_FLAG_4(TYPE_LANG_FLAG_4734,25086
#define TYPE_LANG_FLAG_5(TYPE_LANG_FLAG_5735,25144
#define TYPE_LANG_FLAG_6(TYPE_LANG_FLAG_6736,25202
#define TYPE_STRING_FLAG(TYPE_STRING_FLAG741,25432
#define TYPE_ARRAY_MAX_SIZE(TYPE_ARRAY_MAX_SIZE745,25638
#define TYPE_NEEDS_CONSTRUCTING(TYPE_NEEDS_CONSTRUCTING749,25818
#define TYPE_TRANSPARENT_UNION(TYPE_TRANSPARENT_UNION753,26038
#define TYPE_PACKED(TYPE_PACKED757,26213
struct tree_typetree_type759,26267
#define BINFO_TYPE(BINFO_TYPE821,28275
#define BINFO_OFFSET(BINFO_OFFSET829,28629
#define TYPE_BINFO_OFFSET(TYPE_BINFO_OFFSET830,28681
#define BINFO_OFFSET_ZEROP(BINFO_OFFSET_ZEROP831,28746
#define BINFO_VTABLE(BINFO_VTABLE837,29034
#define TYPE_BINFO_VTABLE(TYPE_BINFO_VTABLE838,29086
#define BINFO_VIRTUALS(BINFO_VIRTUALS843,29337
#define TYPE_BINFO_VIRTUALS(TYPE_BINFO_VIRTUALS844,29391
#define BINFO_BASETYPES(BINFO_BASETYPES856,29929
#define TYPE_BINFO_BASETYPES(TYPE_BINFO_BASETYPES857,29984
#define BINFO_VPTR_FIELD(BINFO_VPTR_FIELD863,30247
#define BINFO_BASETYPE(BINFO_BASETYPE866,30371
#define TYPE_BINFO_BASETYPE(TYPE_BINFO_BASETYPE867,30445
#define BINFO_INHERITANCE_CHAIN(BINFO_INHERITANCE_CHAIN880,31232
#define DECL_NAME(DECL_NAME886,31463
#define DECL_ASSEMBLER_NAME(DECL_ASSEMBLER_NAME891,31705
#define DECL_SECTION_NAME(DECL_SECTION_NAME894,31912
#define DECL_CONTEXT(DECL_CONTEXT901,32357
#define DECL_FIELD_CONTEXT(DECL_FIELD_CONTEXT902,32407
#define DECL_MACHINE_ATTRIBUTES(DECL_MACHINE_ATTRIBUTES905,32559
#define DECL_FIELD_BITPOS(DECL_FIELD_BITPOS908,32758
#define DECL_BIT_FIELD_TYPE(DECL_BIT_FIELD_TYPE912,33005
#define DECL_ARGUMENTS(DECL_ARGUMENTS916,33201
#define DECL_RESULT(DECL_RESULT918,33317
#define DECL_ORIGINAL_TYPE(DECL_ORIGINAL_TYPE920,33442
#define DECL_ARG_TYPE_AS_WRITTEN(DECL_ARG_TYPE_AS_WRITTEN922,33575
#define DECL_INITIAL(DECL_INITIAL928,33870
#define DECL_ARG_TYPE(DECL_ARG_TYPE931,34054
#define DECL_QUALIFIER(DECL_QUALIFIER934,34263
#define DECL_SOURCE_FILE(DECL_SOURCE_FILE936,34394
#define DECL_SOURCE_LINE(DECL_SOURCE_LINE937,34449
#define DECL_SIZE(DECL_SIZE940,34586
#define DECL_ALIGN(DECL_ALIGN942,34681
#define DECL_MODE(DECL_MODE946,34898
#define DECL_RTL(DECL_RTL952,35275
#define DECL_INCOMING_RTL(DECL_INCOMING_RTL955,35422
#define DECL_SAVED_INSNS(DECL_SAVED_INSNS957,35554
#define DECL_FRAME_SIZE(DECL_FRAME_SIZE960,35710
#define DECL_FUNCTION_CODE(DECL_FUNCTION_CODE963,35864
#define DECL_SET_FUNCTION_CODE(DECL_SET_FUNCTION_CODE964,35925
#define DECL_FIELD_SIZE(DECL_FIELD_SIZE966,36071
#define DECL_VINDEX(DECL_VINDEX975,36574
#define DECL_FCONTEXT(DECL_FCONTEXT979,36829
#define DECL_UID(DECL_UID982,36929
#define DECL_ABSTRACT_ORIGIN(DECL_ABSTRACT_ORIGIN989,37289
#define DECL_FROM_INLINE(DECL_FROM_INLINE994,37575
#define DECL_IGNORED_P(DECL_IGNORED_P998,37758
#define DECL_ABSTRACT(DECL_ABSTRACT1006,38242
#define DECL_IN_SYSTEM_HEADER(DECL_IN_SYSTEM_HEADER1010,38406
#define DECL_COMMON(DECL_COMMON1015,38687
#define DECL_LANG_SPECIFIC(DECL_LANG_SPECIFIC1018,38784
#define DECL_EXTERNAL(DECL_EXTERNAL1023,38988
#define TYPE_DECL_SUPPRESS_DEBUG(TYPE_DECL_SUPPRESS_DEBUG1029,39248
#define DECL_REGISTER(DECL_REGISTER1033,39396
#define DECL_ERROR_ISSUED(DECL_ERROR_ISSUED1036,39594
#define DECL_PACKED(DECL_PACKED1038,39721
#define DECL_NO_STATIC_CHAIN(DECL_NO_STATIC_CHAIN1041,39879
#define DECL_NONLOCAL(DECL_NONLOCAL1050,40293
#define DECL_INLINE(DECL_INLINE1054,40447
#define DECL_BUILT_IN_NONANSI(DECL_BUILT_IN_NONANSI1059,40687
#define DECL_BIT_FIELD(DECL_BIT_FIELD1063,40846
#define DECL_TOO_LATE(DECL_TOO_LATE1066,41042
#define DECL_BUILT_IN(DECL_BUILT_IN1068,41162
#define DECL_IN_TEXT_SECTION(DECL_IN_TEXT_SECTION1071,41304
#define DECL_VIRTUAL_P(DECL_VIRTUAL_P1076,41550
#define DECL_DEFER_OUTPUT(DECL_DEFER_OUTPUT1080,41722
#define DECL_TRANSPARENT_UNION(DECL_TRANSPARENT_UNION1085,41950
#define DECL_STATIC_CONSTRUCTOR(DECL_STATIC_CONSTRUCTOR1089,42142
#define DECL_STATIC_DESTRUCTOR(DECL_STATIC_DESTRUCTOR1090,42212
#define DECL_ARTIFICIAL(DECL_ARTIFICIAL1093,42361
#define DECL_WEAK(DECL_WEAK1096,42480
#define DECL_ONE_ONLY(DECL_ONE_ONLY1100,42651
#define DECL_LANG_FLAG_0(DECL_LANG_FLAG_01103,42765
#define DECL_LANG_FLAG_1(DECL_LANG_FLAG_11104,42823
#define DECL_LANG_FLAG_2(DECL_LANG_FLAG_21105,42881
#define DECL_LANG_FLAG_3(DECL_LANG_FLAG_31106,42939
#define DECL_LANG_FLAG_4(DECL_LANG_FLAG_41107,42997
#define DECL_LANG_FLAG_5(DECL_LANG_FLAG_51108,43055
#define DECL_LANG_FLAG_6(DECL_LANG_FLAG_61109,43113
#define DECL_LANG_FLAG_7(DECL_LANG_FLAG_71110,43171
struct tree_decltree_decl1112,43230
union tree_nodetree_node1189,45354
#define NULL_TREE 1207,45740
#define exact_log2(exact_log21214,45971
#define floor_log2(floor_log21215,46031
#define build_int_2(build_int_21270,47624
extern tree sizetype;1403,52965
extern int maximum_field_alignment;1406,53064
extern int set_alignment;1409,53180
extern tree integer_zero_node;1596,59857
extern tree integer_one_node;1599,59928
extern tree size_zero_node;1602,60023
extern tree size_one_node;1605,60116
extern tree null_pointer_node;1608,60196
extern tree error_mark_node;1611,60262
extern tree void_type_node;1614,60332
extern tree integer_type_node;1617,60422
extern tree unsigned_type_node;1620,60506
extern tree char_type_node;1623,60593
extern char *input_filename;1627,60754
extern int lineno;1630,60826
extern int pedantic;1634,60931
extern int pedantic_lvalues;1639,61068
extern int immediate_size_expand;1644,61228
extern tree current_function_decl;1648,61341
extern int current_function_calls_setjmp;1652,61437
extern int current_function_calls_longjmp;1656,61541
extern int all_types_permanent;1660,61659

typeclass.h,870
enum type_classtype_class3,52
  no_type_class 5,70
  void_type_class,6,92
  void_type_class, integer_type_class,6,92
  void_type_class, integer_type_class, char_type_class,6,92
  enumeral_type_class,7,148
  enumeral_type_class, boolean_type_class,7,148
  pointer_type_class,8,191
  pointer_type_class, reference_type_class,8,191
  pointer_type_class, reference_type_class, offset_type_class,8,191
  real_type_class,9,254
  real_type_class, complex_type_class,9,254
  function_type_class,10,293
  function_type_class, method_type_class,10,293
  record_type_class,11,335
  record_type_class, union_type_class,11,335
  array_type_class,12,374
  array_type_class, string_type_class,12,374
  array_type_class, string_type_class, set_type_class,12,374
  array_type_class, string_type_class, set_type_class, file_type_class,12,374
  lang_type_class13,446

xcoffout.h,1123
#define ASM_STABS_OP 4,86
#define DBX_TYPE_DECL_STABS_CODE 8,176
#define DBX_OUTPUT_STANDARD_TYPES(DBX_OUTPUT_STANDARD_TYPES16,465
#define DBX_TYPE_DEFINED(DBX_TYPE_DEFINED24,654
#define DBX_STATIC_CONST_VAR_CODE 29,820
#define DBX_STATIC_BLOCK_START(DBX_STATIC_BLOCK_START46,1657
#define DBX_STATIC_BLOCK_END(DBX_STATIC_BLOCK_END59,2108
#define DBX_REGPARM_STABS_CODE 67,2333
#define DBX_REGPARM_STABS_LETTER 71,2437
#define DBX_FINISH_SYMBOL(DBX_FINISH_SYMBOL76,2576
#define N_DECL 109,3829
#define N_RPSYM 115,4035
extern char *xcoff_current_include_file;120,4106
extern char *xcoff_bss_section_name;125,4248
extern char *xcoff_private_data_section_name;126,4285
extern char *xcoff_read_only_section_name;127,4331
extern char *xcoff_lastfile;131,4431
#define DBX_OUTPUT_MAIN_SOURCE_DIRECTORY(DBX_OUTPUT_MAIN_SOURCE_DIRECTORY134,4516
#define DBX_OUTPUT_MAIN_SOURCE_FILENAME(DBX_OUTPUT_MAIN_SOURCE_FILENAME141,4913
#define DBX_OUTPUT_MAIN_SOURCE_FILE_END(DBX_OUTPUT_MAIN_SOURCE_FILE_END145,5068
#define DBX_CONTIN_LENGTH 157,5440
#define DBX_NO_XREFS162,5680
#define DEBUG_SYMS_TEXT168,5866

alloca.c,785
#define ADDRESS_FUNCTION(ADDRESS_FUNCTION65,2010
#define ADDRESS_FUNCTION(ADDRESS_FUNCTION67,2073
typedef void *pointer;pointer71,2131
typedef char *pointer;pointer73,2160
#define	NULL	77,2204
#define malloc 91,2675
#define	STACK_DIRECTION	104,3074
#define	STACK_DIR	109,3160
static int stack_dir;113,3281
#define	STACK_DIR	114,3331
find_stack_direction 117,3372
#define	ALIGN_SIZE	148,4162
typedef union hdrhdr151,4204
} header;header159,4410
static header *last_alloca_header 161,4421
alloca 171,4861
#define CRAY_STACK242,6374
struct stack_control_headerstack_control_header245,6467
struct stack_segment_linkagestack_segment_linkage260,7088
struct stk_statstk_stat298,8186
struct stk_trailerstk_trailer327,9609
i00afunc 356,10268
i00afunc 430,12216

bc-emit.c,2056
extern struct obstack *rtl_obstack;44,1192
extern enum machine_mode class_narrowest_mode[48,1301
extern enum machine_mode byte_mode;52,1439
extern enum machine_mode word_mode;55,1516
static struct arityvec arityvec[58,1629
prsym 65,1759
#define HASH_BITS 83,2027
#define HASH_SIZE 84,2048
static struct bc_sym *hashtab[86,2071
hash 89,2134
sym_lookup 107,2405
bc_sym_write 132,2894
seg_create 168,3510
seg_align 185,3841
seg_data 205,4271
seg_skip 225,4668
seg_defsym 246,5170
seg_refsym 271,5656
seg_concat 292,6161
bc_seg_write 331,7062
static struct bc_seg *bc_text_seg;405,8749
static struct bc_seg *bc_data_seg;406,8784
bc_initialize 411,8877
static struct bc_seg *ptrconsts;458,10364
struct bc_seg *trampoline;461,10445
struct bc_seg *bytecode;464,10514
struct bc_label *labels;467,10587
struct bc_labelref *labelrefs;470,10662
bc_define_pointer 478,10865
bc_begin_function 491,11029
bc_align_bytecode 504,11252
bc_emit_bytecode_const 514,11375
bc_get_bytecode_label 528,11729
bc_emit_bytecode_labeldef 544,12028
bc_emit_bytecode_labelref 568,12498
bc_emit_code_labelref 592,13071
bc_end_function 613,13617
bc_align_const 661,14704
bc_emit_const 670,14812
bc_emit_const_skip 680,14970
bc_emit_const_labeldef 689,15108
bc_emit_const_labelref 698,15252
bc_align_data 708,15409
bc_emit_data 717,15510
bc_emit_data_skip 727,15663
bc_emit_data_labeldef 736,15792
bc_emit_data_labelref 745,15927
bc_emit_common 757,16241
bc_globalize_label 776,16510
static enum { in_text,785,16627
static enum { in_text, in_data 785,16627
static enum { in_text, in_data } section 785,16627
bc_text 788,16685
bc_data 794,16727
bc_align 800,16769
bc_emit 810,16900
bc_emit_skip 821,17068
bc_emit_labeldef 831,17215
bc_emit_labelref 841,17382
bc_write_file 852,17576
bc_gen_rtx 863,17736
bc_print_rtl 883,18077
bc_emit_bytecode 898,18382
#define PRLIT(PRLIT937,19412
#define PRLIT(PRLIT939,19485
bc_emit_instruction VPROTO(947,19736
#define DEFTYPECODE(DEFTYPECODE974,20464
bc_emit_trampoline 1005,21150

bc-optab.c,2447
#define obstack_chunk_alloc 33,1026
#define obstack_chunk_free 34,1062
#define GET_TYPECODE_MODE(GET_TYPECODE_MODE39,1183
enum machine_mode typecode_mode[40,1245
#define DEFTYPECODE(DEFTYPECODE41,1283
static enum typecode signed_mode_to_code_map[47,1417
static enum typecode unsigned_mode_to_code_map[48,1483
#define GET_TYPECODE_SIZE(GET_TYPECODE_SIZE50,1552
#define BIG_ARBITRARY_NUMBER 52,1626
static struct conversion_recipeconversion_recipe56,1765
} conversion_recipe[61,1960
struct binary_operator optab_plus_expr[64,2043
struct binary_operator optab_minus_expr[74,2335
struct binary_operator optab_mult_expr[88,2800
struct binary_operator optab_trunc_div_expr[99,3130
struct binary_operator optab_trunc_mod_expr[107,3354
struct binary_operator optab_rdiv_expr[115,3578
struct binary_operator optab_bit_and_expr[122,3760
struct binary_operator optab_bit_ior_expr[128,3908
struct binary_operator optab_bit_xor_expr[134,4056
struct binary_operator optab_lshift_expr[140,4204
struct binary_operator optab_rshift_expr[148,4437
struct binary_operator optab_truth_and_expr[156,4670
struct binary_operator optab_truth_or_expr[161,4781
struct binary_operator optab_lt_expr[166,4891
struct binary_operator optab_le_expr[178,5237
struct binary_operator optab_ge_expr[190,5583
struct binary_operator optab_gt_expr[202,5929
struct binary_operator optab_eq_expr[214,6275
struct binary_operator optab_ne_expr[224,6551
struct unary_operator optab_negate_expr[235,6857
struct unary_operator optab_bit_not_expr[244,7070
struct unary_operator optab_truth_not_expr[250,7197
struct increment_operator optab_predecrement_expr[256,7330
struct increment_operator optab_preincrement_expr[272,7690
struct increment_operator optab_postdecrement_expr[288,8050
struct increment_operator optab_postincrement_expr[304,8423
static struct conversion_infoconversion_info321,8854
} conversion_info[328,9153
#define NUM_CONVERSIONS 390,11323
struct conversion_listconversion_list393,11448
conversion_reasonable_p 411,12115
deduce_conversion 524,15507
#define DEDUCE_CONVERSION(DEDUCE_CONVERSION613,17999
emit_typecode_conversion 622,18256
bc_init_mode_to_code_map 636,18562
#define DEF_MODEMAP(DEF_MODEMAP647,18772
preferred_typecode 660,19145
bc_expand_conversion 679,19513
bc_expand_truth_conversion 693,19852
bc_expand_binary_operation 705,20096
bc_expand_unary_operation 747,21410
bc_expand_increment 784,22370

bi-arity.c,66
length 27,874
main 38,976
xmalloc 69,1622
fancy_abort 87,1998

bi-lexer.c,71
xmalloc 30,973
xrealloc 49,1344
scan_string 74,2042
yylex 121,2964

bi-opcode.c,51
main(26,883
xmalloc 67,1771
fancy_abort 85,2147

bi-opname.c,51
main(26,887
xmalloc 48,1309
fancy_abort 66,1685

bi-parser.c,2200
#define YYBISON 5,91
#define	DEFOP	7,141
#define	STRING	8,159
extern char yytext[17,266
extern int yyleng;18,288
struct def *defs;22,354
int ndefs;23,372
} YYSTYPE;YYSTYPE39,631
  struct yyltypeyyltype43,667
  yyltype;yyltype52,824
#define YYLTYPE 54,836
#define const61,925
#define	YYFINAL	67,956
#define	YYFLAG	68,976
#define	YYNTBASE	69,999
#define YYTRANSLATE(YYTRANSLATE71,1019
static const char yytranslate[73,1088
static const short yyprhs[103,2990
static const short yyrhs[108,3153
static const short yyrline[121,3695
static const char * const yytname[126,3855
static const short yyr1[132,4053
static const short yyr2[137,4214
static const short yydefact[142,4375
static const short yydefgoto[149,4696
static const short yypact[153,4798
static const short yypgoto[160,5117
#define	YYLAST	165,5218
static const short yytable[168,5239
static const short yycheck[175,5531
#define alloca 208,6994
#define yyerrok	244,8119
#define yyclearin	245,8154
#define YYEMPTY	246,8191
#define YYEOF	247,8211
#define YYACCEPT	248,8228
#define YYABORT 249,8255
#define YYERROR	250,8282
#define YYFAIL	255,8518
#define YYRECOVERING(YYRECOVERING256,8548
#define YYBACKUP(YYBACKUP257,8588
#define YYTERROR	269,8922
#define YYERRCODE	270,8941
#define YYLEX	273,8979
#define YYLEX	279,9063
#define YYLEX	281,9121
#define YYLEX	285,9215
#define YYLEX	287,9264
int	yychar;296,9407
YYSTYPE	yylval;297,9450
YYLTYPE yylloc;301,9553
int yynerrs;305,9639
int yydebug;309,9740
#define YYINITDEPTH 317,9982
#define YYMAXDEPTH 328,10211
#define __yy_memcpy(__yy_memcpy337,10392
__yy_memcpy 344,10643
__yy_memcpy 362,10996
#define YYPARSE_PARAM_DECL 384,11509
#define YYPARSE_PARAM386,11563
#define YYPARSE_PARAM_DECL387,11585
yyparse(391,11624
#define YYPOPSTACK 412,12331
#define YYPOPSTACK 414,12386
  if 740,20402
  *++yyvsp 750,20603
  if 754,20655
  yyn 774,21207
  yystate 776,21227
  if 777,21273
  goto yyerrlab1;835,22592
  if 838,22675
  yyerrstatus 857,23117
  goto yyerrhandle;859,23184
  yyn 866,23391
  if 867,23486
  yyn 892,23944
  if 893,23969
  else if 908,24245
makevar 943,24740
makedef 960,25099
yyerror 975,25368

bi-reverse.c,16
reverse(26,871

bitmap.c,827
static struct obstack bitmap_obstack;38,1106
static int bitmap_obstack_init 39,1144
#define INLINE44,1219
#define INLINE 46,1240
bitmap_element bitmap_zero;51,1299
bitmap_element *bitmap_free;52,1363
bitmap_element_free 63,1809
bitmap_element_allocate 91,2450
#define OBSTACK_CHUNK_SIZE 113,2973
#define OBSTACK_CHUNK_ALLOC 117,3098
#define OBSTACK_CHUNK_FREE 120,3168
#define __alignof__(__alignof__124,3249
bitmap_element_zerop 150,3852
bitmap_element_link 169,4218
bitmap_clear 226,5463
bitmap_copy 244,5787
bitmap_find_bit 293,6989
bitmap_clear_bit 328,7763
bitmap_set_bit 351,8333
bitmap_bit_p 375,8982
bitmap_operation 399,9519
bitmap_ior_and_compl 531,13157
bitmap_initialize 548,13481
bitmap_debug_file 559,13652
debug_bitmap 606,14928
bitmap_print 616,15140
bitmap_release_memory 637,15519

c-aux-info.c,488
enum formals_style_enum formals_style_enum32,1127
  ansi,33,1153
  k_and_r_names,34,1161
  k_and_r_decls35,1178
typedef enum formals_style_enum formals_style;formals_style37,1197
static char *data_type;40,1246
concat 54,1620
concat3 77,2013
affix_data_type 117,3250
gen_formal_list_for_type 162,4460
deserves_ellipsis 246,7568
gen_formal_list_for_func_def 282,9124
gen_type 357,12727
gen_decl 521,17616
extern FILE *aux_info_file;594,20488
gen_aux_info_record 601,20725

c-common.c,3030
#define WCHAR_TYPE_SIZE 32,1036
#define WCHAR_TYPE_SIZE	34,1080
extern struct obstack permanent_obstack;38,1133
int skip_evaluation;42,1309
enum attrs attrs44,1331
enum attrs {A_PACKED,44,1331
enum attrs {A_PACKED, A_NOCOMMON,44,1331
enum attrs {A_PACKED, A_NOCOMMON, A_COMMON,44,1331
enum attrs {A_PACKED, A_NOCOMMON, A_COMMON, A_NORETURN,44,1331
enum attrs {A_PACKED, A_NOCOMMON, A_COMMON, A_NORETURN, A_CONST,44,1331
enum attrs {A_PACKED, A_NOCOMMON, A_COMMON, A_NORETURN, A_CONST, A_T_UNION,44,1331
	    A_CONSTRUCTOR,45,1407
	    A_CONSTRUCTOR, A_DESTRUCTOR,45,1407
	    A_CONSTRUCTOR, A_DESTRUCTOR, A_MODE,45,1407
	    A_CONSTRUCTOR, A_DESTRUCTOR, A_MODE, A_SECTION,45,1407
	    A_CONSTRUCTOR, A_DESTRUCTOR, A_MODE, A_SECTION, A_ALIGNED,45,1407
	    A_UNUSED,46,1471
	    A_UNUSED, A_FORMAT,46,1471
	    A_UNUSED, A_FORMAT, A_FORMAT_ARG,46,1471
	    A_UNUSED, A_FORMAT, A_FORMAT_ARG, A_WEAK,46,1471
	    A_UNUSED, A_FORMAT, A_FORMAT_ARG, A_WEAK, A_ALIAS}46,1471
static int *if_stack;56,1911
static int if_stack_space 59,1984
static int if_stack_pointer 62,2038
c_expand_start_cond 65,2077
c_expand_end_cond 89,2663
c_expand_start_else 96,2738
declare_function_name 112,3158
declare_hidden_char_array 136,3759
combine_strings 170,4850
static struct {enum attrs id; tree name; int min, max, decl_req;} attrtab[286,8022
static int attrtab_idx 288,8102
add_attribute 293,8194
init_attributes 319,8857
decl_attributes 346,10019
split_specs_attrs 826,23965
#define T_I	888,25384
#define T_L	889,25415
#define T_LL	890,25451
#define T_S	891,25493
#define T_UI	892,25530
#define T_UL	893,25563
#define T_ULL	894,25601
#define T_US	895,25645
#define T_F	896,25684
#define T_D	897,25713
#define T_LD	898,25743
#define T_C	899,25779
#define T_V	900,25807
#define T_W	901,25835
#define T_ST 902,25864
} format_char_info;format_char_info923,26620
static format_char_info print_char_table[925,26641
static format_char_info scan_char_table[942,27353
typedef struct function_format_infofunction_format_info955,27854
} function_format_info;function_format_info963,28236
static function_format_info *function_format_list 965,28261
typedef struct international_format_infointernational_format_info967,28320
} international_format_info;international_format_info973,28608
static international_format_info *international_format_list 975,28638
init_function_format_info 990,29288
record_function_format 1017,30770
record_international_format 1056,31884
static char	tfaff[1086,32574
check_function_format 1095,32904
check_format_info 1121,33533
constant_expression_warning 1667,48941
overflow_warning 1684,49559
unsigned_conversion_warning 1713,50451
convert_and_check 1735,51311
c_expand_expr_stmt 1768,52271
check_case_value 1788,52878
type_for_size 1816,53524
type_for_mode 1856,54881
min_precision 1909,56632
binary_op_error 1940,57646
shorten_compare 2017,59718
truthvalue_conversion 2353,69715
get_directive_line 2537,76049
c_build_type_variant 2610,77791

c-convert.c,17
convert 59,2205

c-decl.c,7312
enum decl_contextdecl_context38,1375
{ NORMAL,39,1393
  FUNCDEF,40,1432
  PARM,41,1471
  FIELD,42,1529
  BITFIELD,43,1581
  TYPENAME}44,1635
#define CHAR_TYPE_SIZE 47,1714
#define SHORT_TYPE_SIZE 51,1783
#define INT_TYPE_SIZE 55,1889
#define LONG_TYPE_SIZE 59,1956
#define LONG_LONG_TYPE_SIZE 63,2029
#define WCHAR_UNSIGNED 67,2108
#define FLOAT_TYPE_SIZE 71,2165
#define DOUBLE_TYPE_SIZE 75,2236
#define LONG_DOUBLE_TYPE_SIZE 79,2319
#define SIZE_TYPE 89,2731
#define PTRDIFF_TYPE 93,2798
#define WCHAR_TYPE 97,2857
tree error_mark_node;106,3238
tree short_integer_type_node;110,3329
tree integer_type_node;111,3359
tree long_integer_type_node;112,3383
tree long_long_integer_type_node;113,3412
tree short_unsigned_type_node;115,3447
tree unsigned_type_node;116,3478
tree long_unsigned_type_node;117,3503
tree long_long_unsigned_type_node;118,3533
tree boolean_type_node;120,3569
tree boolean_false_node;121,3593
tree boolean_true_node;122,3618
tree ptrdiff_type_node;124,3643
tree unsigned_char_type_node;126,3668
tree signed_char_type_node;127,3698
tree char_type_node;128,3726
tree wchar_type_node;129,3747
tree signed_wchar_type_node;130,3769
tree unsigned_wchar_type_node;131,3798
tree float_type_node;133,3830
tree double_type_node;134,3852
tree long_double_type_node;135,3875
tree complex_integer_type_node;137,3904
tree complex_float_type_node;138,3936
tree complex_double_type_node;139,3966
tree complex_long_double_type_node;140,3997
tree intQI_type_node;142,4034
tree intHI_type_node;143,4056
tree intSI_type_node;144,4078
tree intDI_type_node;145,4100
tree unsigned_intQI_type_node;147,4123
tree unsigned_intHI_type_node;148,4154
tree unsigned_intSI_type_node;149,4185
tree unsigned_intDI_type_node;150,4216
tree void_type_node;154,4274
tree ptr_type_node,158,4349
tree ptr_type_node, const_ptr_type_node;158,4349
tree string_type_node,162,4444
tree string_type_node, const_string_type_node;162,4444
tree char_array_type_node;167,4593
tree int_array_type_node;172,4738
tree wchar_array_type_node;177,4869
tree default_function_type;181,4967
tree double_ftype_double,185,5073
tree double_ftype_double, double_ftype_double_double;185,5073
tree int_ftype_int,186,5127
tree int_ftype_int, long_ftype_long;186,5127
tree float_ftype_float;187,5164
tree ldouble_ftype_ldouble;188,5188
tree void_ftype_ptr_ptr_int,192,5284
tree void_ftype_ptr_ptr_int, int_ftype_ptr_ptr_int,192,5284
tree void_ftype_ptr_ptr_int, int_ftype_ptr_ptr_int, void_ftype_ptr_int_int;192,5284
tree string_ftype_ptr_ptr,195,5423
tree string_ftype_ptr_ptr, int_ftype_string_string;195,5423
tree int_ftype_cptr_cptr_sizet;198,5539
tree integer_zero_node;203,5692
tree null_pointer_node;204,5716
tree integer_one_node;208,5784
tree pending_invalid_xref;213,5932
char *pending_invalid_xref_file;215,6021
int pending_invalid_xref_line;216,6054
static tree enum_next_value;224,6396
static int enum_overflow;228,6499
static tree last_function_parms;233,6636
static tree last_function_parm_tags;238,6785
static tree current_function_parms;244,7009
static tree current_function_parm_tags;247,7091
static char *current_function_prototype_file;251,7238
static int current_function_prototype_line;252,7284
static tree named_labels;258,7508
static tree shadowed_labels;262,7614
static int c_function_varargs;267,7770
tree current_function_decl;271,7900
int current_function_returns_value;276,8058
int current_function_returns_null;281,8211
static int warn_about_return_type;286,8374
static int current_extern_inline;290,8477
struct binding_levelbinding_level308,9126
#define NULL_BINDING_LEVEL 369,11376
static struct binding_level *current_binding_level;373,11483
static struct binding_level *free_binding_level;377,11596
static struct binding_level *global_binding_level;383,11794
static struct binding_level clear_binding_level387,11916
static int keep_next_level_flag;393,12128
static int keep_next_if_subblocks;398,12247
static struct binding_level *label_level_chain;406,12564
tree static_ctors,410,12691
tree static_ctors, static_dtors;410,12691
int flag_cond_mismatch;434,13600
int flag_short_double;438,13687
int flag_no_asm;442,13768
int flag_no_builtin;446,13847
int flag_no_nonansi_builtin;451,13959
int flag_traditional;455,14049
int flag_hosted 459,14144
int flag_allow_single_precision 463,14264
int flag_signed_bitfields 467,14381
int explicit_flag_signed_bitfields 468,14412
int flag_no_ident 472,14525
int warn_implicit_int;476,14602
int mesg_implicit_function_declaration;481,14733
int warn_write_strings;487,14972
int warn_cast_qual;492,15108
int warn_bad_function_cast;498,15337
int warn_traditional;502,15442
int warn_pointer_arith;507,15564
int warn_strict_prototypes;512,15703
int warn_missing_prototypes;517,15832
int warn_missing_declarations;522,15952
int warn_redundant_decls 527,16089
int warn_nested_externs 535,16414
int warn_format;539,16508
int warn_char_subscripts 543,16577
int warn_conversion;547,16685
int warn_parentheses;551,16747
int warn_missing_braces;555,16827
int warn_main;559,16889
int warn_sign_compare 564,17041
#define DOLLARS_IN_IDENTIFIERS 569,17152
int dollars_in_ident 571,17192
c_decode_option 578,17392
print_lang_decl 795,24685
print_lang_type 803,24782
print_lang_identifier 811,24879
finish_incomplete_decl 828,25560
make_binding_level 852,26056
global_bindings_p 861,26244
keep_next_level 867,26331
kept_level_p 875,26452
declare_parm_level 891,26966
in_parm_level_p 900,27133
pushlevel 910,27343
clear_limbo_values 955,28514
poplevel 984,29415
delete_block 1216,37098
insert_block 1240,37771
set_block 1252,38015
push_label_level 1259,38115
pop_label_level 1287,38714
pushtag 1348,40590
duplicate_decls 1397,42192
pushdecl 1999,63990
pushdecl_top_level 2430,79595
implicitly_declare 2446,79964
redeclaration_error_message 2520,82483
lookup_label 2590,85344
shadow_label 2643,86792
define_label 2677,87705
getdecls 2714,88751
gettags 2722,88890
storedecls 2732,89160
storetags 2741,89317
lookup_tag 2758,89906
pending_xref_error 2795,90927
lookup_tag_reverse 2809,91326
lookup_name 2832,91916
lookup_name_current_level 2847,92251
init_decl_processing 2871,92819
builtin_function 3473,116403
shadow_tag 3513,117867
shadow_tag_warned 3520,117957
groktypename 3588,119439
groktypename_in_parm_context 3601,119724
int debug_temp_inits 3628,120757
start_decl 3631,120789
finish_decl 3777,125718
maybe_build_cleanup 4060,135143
push_parm_decl 4073,135470
clear_parm_order 4115,136677
complete_array_type 4125,136954
grokdeclarator 4219,139890
grokparms 5265,174310
get_parm_info 5372,177695
parmlist_tags_warning 5467,180668
xref_tag 5504,181731
start_struct 5562,183681
grokfield 5607,185030
field_decl_cmp 5629,185554
finish_struct 5653,186146
layout_array_type 5980,196006
start_enum 5995,196432
finish_enum 6047,197938
build_enumerator 6160,201570
start_function 6238,203840
c_mark_varargs 6468,211988
store_parm_decls 6481,212337
combine_parm_decls 6903,226013
finish_function 7048,230290
struct c_functionc_function7193,235031
struct c_function *c_function_chain;7205,235258
push_c_function_context 7211,235389
pop_c_function_context 7236,236057
copy_lang_decl 7275,237256

c-iterate.c,847
struct  ixpansionixpansion66,2677
struct iter_stack_nodeiter_stack_node77,2956
struct iter_stack_node *iter_stack;84,3180
struct iter_stack_node sublevel_ixpansions;85,3216
static struct obstack ixp_obstack;89,3375
static char *ixp_firstobj;90,3410
static tree save_exprs;93,3509
init_iterators 109,4143
iterator_for_loop_start 118,4336
iterator_for_loop_end 129,4573
iterator_expand 149,5112
expand_stmt_with_iterators_1 161,5347
collect_iterators 190,6273
iterator_loop_prologue 281,8364
iterator_loop_epilogue 329,9936
top_level_ixpansion_p 360,11000
isn_append 369,11147
#define ISN_ZERO(ISN_ZERO389,11425
istack_sublevel_to_current 396,11660
push_iterator_stack 414,12170
pop_iterator_stack 430,12538
add_ixpansion 446,12871
delete_ixpansion 476,13763
prdecl 527,15116
pil 548,15453
pixl 565,15775
pis 588,16193

c-lang.c,437
lang_decode_option 31,999
lang_init 38,1076
lang_finish 49,1325
lang_identify 54,1352
print_lang_statistics 60,1393
lookup_interface 67,1472
is_class_name 74,1532
maybe_objc_check_decl 81,1588
maybe_objc_comptypes 87,1642
maybe_objc_method_name 95,1748
maybe_building_objc_message_expr 102,1815
recognize_objc_keyword 108,1872
build_objc_string 114,1920
GNU_xref_begin 123,2019
GNU_xref_end 129,2090
finish_file 137,2228

c-lex.c,1524
extern int errno;51,1377
cpp_reader parse_in;56,1438
cpp_options parse_options;57,1459
static enum cpp_token cpp_token;58,1486
tree ridpointers[64,1674
#define YYDEBUG 67,1759
static unsigned char *yy_cur,70,1793
static unsigned char *yy_cur, *yy_lim;70,1793
yy_get_token 73,1837
#define GETC(GETC88,2141
#define UNGETC(UNGETC89,2204
#define GETC(GETC91,2244
#define UNGETC(UNGETC92,2273
tree lastiddecl;99,2598
int doing_objc_thang;103,2655
extern int yydebug;107,2709
extern FILE *asm_out_file;110,2778
#define WCHAR_TYPE_SIZE 114,2851
#define WCHAR_TYPE_SIZE	116,2895
#define WCHAR_BYTES 121,2992
static int maxtoken;123,3047
char *token_buffer;124,3116
static int indent_level 128,3271
static int end_of_file;131,3399
static int nextchar 135,3504
make_pointer_declarator 154,4139
forget_protocol_qualifiers 161,4277
remember_protocol_qualifiers 172,4529
init_parse 191,5047
finish_parse 208,5399
init_lex 215,5458
#define UNSET_RESERVED_WORD(UNSET_RESERVED_WORD261,7577
reinit_parse_for_function 289,8327
yyprint 296,8443
skip_white_space 339,9277
position_after_white_space 395,10348
extend_token_buffer 415,10781
#define GET_DIRECTIVE_LINE(GET_DIRECTIVE_LINE428,11006
GET_DIRECTIVE_LINE 441,11578
check_newline 515,13404
handle_sysv_pragma 856,21418
#define ENDFILE 895,22036
readescape 901,22239
yyerror 1036,25029
struct try_typetry_type1064,25793
struct try_type type_sequence[1072,25896
yylex 1084,26193
#define TOTAL_PARTS 1325,32118
set_yydebug 2185,53776

c-pragma.c,108
extern int maximum_field_alignment;35,1177
extern FILE *asm_out_file;38,1262
handle_pragma_token 44,1409

c-typeck.c,4164
static int missing_braces_mentioned;40,1450
require_complete_type 79,3196
incomplete_type_error 98,3671
qualify_type 161,5140
common_type 178,5694
comptypes 418,13586
#define COMP_TYPE_ATTRIBUTES(COMP_TYPE_ATTRIBUTES460,14755
comp_target_types 527,16597
function_types_compatible_p 554,17407
type_lists_compatible_p 604,18818
self_promoting_args_p 684,21203
self_promoting_type_p 710,21683
unsigned_type 725,21941
signed_type 754,22818
signed_or_unsigned_type 784,23720
c_sizeof 808,24704
c_sizeof_nowarn 844,25636
c_size_in_bytes 867,26147
c_alignof 896,26822
c_alignof_expr 916,27357
decl_constant_value 957,28508
default_conversion 985,29599
lookup_field 1135,34389
build_component_ref 1232,36746
build_indirect_ref 1319,39284
build_array_ref 1376,41254
build_function_call 1520,45992
convert_arguments 1624,49361
parser_build_binary_op 1802,55973
build_binary_op 1922,60468
pointer_int_sum 2646,84909
pointer_diff 2735,88237
build_unary_op 2781,89782
convert_sequence 3155,100543
lvalue_p 3183,101204
lvalue_or_else 3220,101967
unary_complex_lvalue 3237,102393
pedantic_lvalue_warning 3275,103541
readonly_warning 3287,103840
mark_addressable 3327,104846
build_conditional_expr 3412,106883
build_compound_expr 3604,113195
internal_build_compound_expr 3611,113307
build_c_cast 3672,115532
build_modify_expr 3843,120942
convert_for_assignment 4022,126865
warn_for_assignment 4299,136816
initializer_constant_valid_p 4345,138161
valid_compound_expr_initializer 4475,142595
store_init_value 4500,143321
struct spellingspelling4559,145068
#define SPELLING_STRING 4569,145153
#define SPELLING_MEMBER 4570,145179
#define SPELLING_BOUNDS 4571,145205
static struct spelling *spelling;4573,145232
static struct spelling *spelling_base;4574,145302
static int spelling_size;4575,145369
#define SPELLING_DEPTH(SPELLING_DEPTH4580,145552
#define RESTORE_SPELLING_DEPTH(RESTORE_SPELLING_DEPTH4581,145604
#define SAVE_SPELLING_DEPTH(SAVE_SPELLING_DEPTH4585,145747
#define PUSH_SPELLING(PUSH_SPELLING4595,145980
push_string 4620,146705
push_member_name 4629,146875
push_array_bounds 4641,147146
spelling_length 4650,147321
print_spelling 4669,147633
char initialization_message;4695,148141
get_spelling 4700,148246
error_init 4735,149234
pedwarn_init 4761,149974
warning_init 4787,150716
digest_init 4812,151427
static tree constructor_type;5031,158644
static tree constructor_fields;5035,158760
static tree constructor_index;5040,158956
static tree constructor_range_end;5045,159158
static tree constructor_max_index;5048,159247
static tree constructor_unfilled_fields;5051,159354
static tree constructor_unfilled_index;5056,159548
static tree constructor_bit_index;5061,159792
static tree constructor_elements;5066,159978
static int constructor_constant;5069,160092
static int constructor_simple;5072,160206
static int constructor_erroneous;5075,160288
static int constructor_subconstants_deferred;5078,160374
static tree constructor_pending_elts;5084,160611
static int constructor_depth;5087,160697
int constructor_no_implicit 5090,160790
static int constructor_implicit;5093,160927
static int require_constant_value;5095,160961
static int require_constant_elements;5096,160996
static int constructor_incremental;5100,161151
static tree constructor_decl;5105,161327
static char *constructor_asmspec;5108,161438
static int constructor_top_level;5111,161536
static tree constructor_result;5115,161681
struct constructor_stackconstructor_stack5121,161905
struct constructor_stack *constructor_stack;5147,162395
struct initializer_stackinitializer_stack5153,162627
struct initializer_stack *initializer_stack;5170,162990
start_init 5175,163113
finish_init 5243,165037
really_start_incremental_init 5286,166485
push_init_level 5386,169689
check_init_type_bitfields 5543,174990
pop_init_level 5577,175924
set_init_index 5793,182282
set_init_label 5837,183897
output_init_element 5882,185201
output_pending_init_elements 6070,191316
process_init_element 6223,195940
c_expand_asm_operands 6508,204747
c_expand_return 6577,207060
c_expand_start_case 6673,209695

caller-save.c,570
#define MAX_MOVE_MAX 34,1097
#define MIN_UNITS_PER_WORD 38,1162
  regno_save_mode[47,1537
  regno_save_mem[53,1721
  reg_save_code[62,2137
  reg_restore_code[64,2239
static HARD_REG_SET hard_regs_live;68,2390
static HARD_REG_SET hard_regs_saved;72,2504
static HARD_REG_SET hard_regs_need_restore;76,2612
int n_regs_saved;80,2715
init_caller_save 99,3432
init_save_areas 216,6902
setup_save_areas 251,8344
save_call_clobbered_regs 351,11186
set_reg_live 507,16614
clear_reg_live 539,17397
restore_referenced_regs 563,18075
insert_save_restore 636,20506

calls.c,541
#define PUSH_ARGS_REVERSED	44,1362
#define STACK_BYTES 50,1493
struct arg_dataarg_data54,1611
static char *stack_usage_map;113,4228
static int highest_outgoing_arg_in_use;116,4291
int stack_arg_under_construction;123,4650
static tree calls_function_save_exprs;141,5336
calls_function 144,5387
calls_function_1 156,5592
prepare_call_address 258,8090
emit_call_1 344,11241
expand_call 481,15466
emit_library_call VPROTO(2271,76212
emit_library_call_value VPROTO(2765,91549
target_for_arg 3362,109768
store_one_arg 3406,111261

cccp.c,12655
typedef unsigned char U_CHAR;U_CHAR25,1065
#define NO_SHORTNAMES28,1109
#define STANDARD_INCLUDE_DIR 44,1462
#define PATH_SEPARATOR 51,1613
#define HAVE_OBJECT_SUFFIX56,1725
#define OBJECT_SUFFIX 58,1758
# define STDC_HEADERS 77,2155
# define HAVE_FCNTL_H 83,2296
# define bcmp(bcmp122,2819
# define bcopy(bcopy125,2882
# define bzero(bzero128,2946
#  define bcmp 137,3128
my_bcmp 139,3162
#  define bcopy 153,3377
my_bcopy 155,3414
#  define bzero 166,3593
my_bzero 168,3630
# define __attribute__(__attribute__181,3935
#  define PROTO(PROTO186,4051
#  define PROTO(PROTO188,4085
# define VA_START(VA_START194,4196
# define PRINTF_ALIST(PRINTF_ALIST195,4252
# define PRINTF_DCL(PRINTF_DCL196,4294
# define PRINTF_PROTO(PRINTF_PROTO197,4319
# define VA_START(VA_START200,4438
# define PRINTF_ALIST(PRINTF_ALIST201,4489
# define PRINTF_DCL(PRINTF_DCL202,4530
# define PRINTF_PROTO(PRINTF_PROTO203,4573
# define vfprintf(vfprintf204,4654
#define PRINTF_PROTO_1(PRINTF_PROTO_1214,4922
#define PRINTF_PROTO_2(PRINTF_PROTO_2215,4976
#define PRINTF_PROTO_3(PRINTF_PROTO_3216,5030
#define open(open225,5195
#define fopen(fopen226,5252
#define freopen(freopen227,5301
#define fstat(fstat228,5366
#define INO_T_EQ(INO_T_EQ234,5577
#define INO_T_HASH(INO_T_HASH235,5650
#define INCLUDE_LEN_FUDGE 236,5674
#define INO_T_EQ(INO_T_EQ241,5907
#define O_RDONLY 245,5957
#define MIN(MIN250,6006
#define MAX(MAX251,6047
#  define HOST_WIDE_INT 259,6290
#   define HOST_WIDE_INT 262,6425
#   define HOST_WIDE_INT 265,6565
#   define HOST_WIDE_INT 267,6603
#define S_ISREG(S_ISREG274,6688
#define S_ISDIR(S_ISDIR278,6759
#define INO_T_EQ(INO_T_EQ282,6831
#define INO_T_HASH(INO_T_HASH286,6894
#define NULL 292,7007
#define GENERIC_PTR 297,7117
#define GENERIC_PTR 299,7150
#define NULL_PTR 304,7209
#define INCLUDE_LEN_FUDGE 308,7278
extern char *version_string;313,7345
extern int sys_nerr;317,7458
extern char *sys_errlist[318,7479
extern int errno;329,7733
static char *progname;334,7811
static int cplusplus;338,7904
static int cplusplus_comments;342,7980
static int objc;346,8067
static int lang_asm;351,8191
static int max_include_len;356,8339
static int for_lint 360,8433
static int put_out_comments 364,8517
static int no_trigraphs 368,8616
static int print_deps 374,8811
static int print_deps_missing_files 379,8941
static int print_include_names 383,9039
static int no_line_directives;387,9136
static int output_conditionals;392,9265
static enum {dump_none,401,9640
static enum {dump_none, dump_only,401,9640
static enum {dump_none, dump_only, dump_names,401,9640
static enum {dump_none, dump_only, dump_names, dump_definitions}401,9640
     dump_macros 402,9705
static int debug_output 410,10118
static int dump_includes;414,10246
static FILE *pcp_outfile;427,10685
static int pcp_inside_if;432,10881
static int no_precomp 437,11069
int pedantic;441,11175
static int pedantic_errors;445,11256
static int inhibit_warnings 449,11342
static int warn_comments;454,11511
static int warn_stringify;459,11636
static int warn_trigraphs;463,11719
int warn_undef;467,11824
static int warn_import 471,11888
static int warnings_are_errors;475,11966
int traditional;479,12073
int c89;483,12169
static int no_output;489,12303
static int remap;492,12406
static int no_record_file;497,12561
static int done_initializing 503,12760
static int multiline_string_line 507,12861
#define INPUT_STACK_MAX 514,13138
static struct file_buf file_buf515,13166
} instack[539,13991
static int last_error_tick;541,14020
static int input_file_stack_tick;542,14093
static int indepth 546,14277
#define CHECK_DEPTH(CHECK_DEPTH547,14302
static int system_include_depth 556,14601
typedef struct file_buf FILE_BUF;FILE_BUF558,14639
#define OUTBUF_SIZE 564,14867
static FILE_BUF outbuf;565,14926
#define check_expand(check_expand570,15039
struct file_name_listfile_name_list574,15186
static struct default_include default_include596,15947
} include_defaults_array[603,16284
#define STANDARD_INCLUDE_COMPONENT 641,17682
static struct default_include *include_defaults 652,18077
static struct file_name_list *include 654,18152
static struct file_name_list *first_bracket_include 658,18374
static struct file_name_list *first_system_include 661,18536
static struct file_name_list *last_include 662,18592
static struct file_name_list *after_include 665,18735
static struct file_name_list *last_after_include 666,18784
static struct file_name_list *before_system 669,18921
static struct file_name_list *last_before_system 670,18970
static char *include_prefix;674,19141
struct include_file include_file678,19223
#define INCLUDE_HASHSIZE 695,19920
static struct include_file *include_hashtab[696,19948
static struct include_file *include_ino_hashtab[697,20011
static STRINGDEF *stringlist;704,20336
static STRINGDEF **stringlist_tailp 705,20366
typedef struct macrodef MACRODEF;MACRODEF709,20465
struct macrodefmacrodef710,20499
enum sharp_token_type sharp_token_type717,20581
  NO_SHARP_TOKEN 718,20605
  SHARP_TOKEN 720,20653
  WHITE_SHARP_TOKEN,721,20707
  PERCENT_COLON_TOKEN 723,20773
  WHITE_PERCENT_COLON_TOKEN	724,20835
typedef struct definition DEFINITION;DEFINITION748,21986
struct definition definition749,22024
union hashval hashval781,23265
static char rest_extension[799,23939
#define REST_EXTENSION_LENGTH	800,23977
enum node_type node_type810,24498
 T_DEFINE 811,24515
 T_INCLUDE,812,24558
 T_INCLUDE_NEXT,813,24599
 T_IMPORT,814,24650
 T_IFDEF,815,24694
 T_IFNDEF,816,24731
 T_IF,817,24770
 T_ELSE,818,24802
 T_PRAGMA,819,24825
 T_ELIF,820,24852
 T_UNDEF,821,24875
 T_LINE,822,24900
 T_ERROR,823,24923
 T_WARNING,824,24948
 T_ENDIF,825,24977
 T_SCCS,826,25002
 T_IDENT,827,25045
 T_ASSERT,828,25090
 T_UNASSERT,829,25140
 T_SPECLINE,830,25194
 T_DATE,831,25239
 T_FILE,832,25265
 T_BASE_FILE,833,25291
 T_INCLUDE_LEVEL,834,25327
 T_VERSION,835,25371
 T_SIZE_TYPE,836,25403
 T_PTRDIFF_TYPE,837,25441
 T_WCHAR_TYPE,838,25485
 T_USER_LABEL_PREFIX_TYPE,839,25525
 T_REGISTER_PREFIX_TYPE,840,25582
 T_IMMEDIATE_PREFIX_TYPE,841,25637
 T_TIME,842,25693
 T_CONST,843,25719
 T_MACRO,844,25770
 T_DISABLED,845,25813
 T_SPEC_DEFINED,846,25872
 T_PCSTRING,847,25945
 T_UNUSED	848,26005
struct hashnode hashnode851,26059
typedef struct hashnode HASHNODE;HASHNODE863,26553
#define HASHSIZE 872,26973
static HASHNODE *hashtab[873,26995
#define HASHSTEP(HASHSTEP874,27031
#define MAKE_POS(MAKE_POS875,27073
static char *predefs 880,27190
static char *predefs 882,27235
#define SIZE_TYPE 894,27669
#define PTRDIFF_TYPE 900,27783
#define WCHAR_TYPE 906,27887
char * wchar_type 908,27919
#define USER_LABEL_PREFIX 914,28046
#define REGISTER_PREFIX 920,28155
#define IMMEDIATE_PREFIX 926,28264
struct tokenlist_list tokenlist_list934,28504
struct assertion_hashnode assertion_hashnode939,28589
typedef struct assertion_hashnode ASSERTION_HASHNODE;ASSERTION_HASHNODE952,29071
#define ASSERTION_HASHSIZE 961,29502
static ASSERTION_HASHNODE *assertion_hashtab[962,29532
static int assertions_flag;966,29703
#define DO_PROTO 970,29813
struct directive directive972,29891
#define IS_INCLUDE_DIRECTIVE_TYPE(IS_INCLUDE_DIRECTIVE_TYPE979,30119
static int do_assert DO_PROTO;985,30394
static int do_define DO_PROTO;986,30425
static int do_elif DO_PROTO;987,30456
static int do_else DO_PROTO;988,30485
static int do_endif DO_PROTO;989,30514
static int do_error DO_PROTO;990,30544
static int do_ident DO_PROTO;991,30574
static int do_if DO_PROTO;992,30604
static int do_include DO_PROTO;993,30631
static int do_line DO_PROTO;994,30663
static int do_pragma DO_PROTO;995,30692
static int do_sccs DO_PROTO;997,30745
static int do_unassert DO_PROTO;999,30781
static int do_undef DO_PROTO;1000,30814
static int do_warning DO_PROTO;1001,30844
static int do_xifdef DO_PROTO;1002,30876
static struct directive directive_table[1006,30980
U_CHAR *directive_start;1033,31938
U_CHAR is_idchar[1036,32024
U_CHAR is_idstart[1038,32113
static U_CHAR is_hor_space[1040,32184
U_CHAR is_space[1042,32276
static char *char_name[1044,32329
#define SKIP_WHITE_SPACE(SKIP_WHITE_SPACE1046,32359
#define SKIP_ALL_WHITE_SPACE(SKIP_ALL_WHITE_SPACE1047,32434
static int errors 1049,32512
static char *out_fname;1052,32620
struct if_stack if_stack1058,32755
typedef struct if_stack IF_STACK_FRAME;IF_STACK_FRAME1068,33204
static IF_STACK_FRAME *if_stack 1069,33244
static char *deps_buffer;1072,33313
static int deps_allocated_size;1075,33383
static int deps_size;1078,33445
static int deps_column;1081,33515
static int ignore_srcdir;1085,33643
enum file_change_code file_change_code1164,36968
enum file_change_code {same_file,1164,36968
enum file_change_code {same_file, enter_file,1164,36968
enum file_change_code {same_file, enter_file, leave_file}1164,36968
static void fatal PRINTF_PROTO_1(1220,39241
safe_write 1275,40833
main 1303,41275
path_include 2320,69972
index0 2357,70856
trigraph_pcp 2388,71602
newline_fix 2462,73308
name_newline_fix 2495,74075
get_lintcmd 2534,75122
rescan 2615,78156
#define POPMACRO 2661,79578
#define RECACHE 2669,79803
expand_to_temp_buffer 3546,103403
handle_directive 3630,105462
timestamp 4033,115810
static char *monthnames[4043,115963
special_symbol 4053,116216
do_include 4239,120497
is_system_include 4650,133009
base_name 4665,133405
absolute_filename 4690,134030
simplify_filename 4716,134843
struct file_name_mapfile_name_map4782,136620
#define FILE_NAME_MAP_FILE 4789,136715
read_filename_string 4795,136850
read_name_map 4828,137486
open_include_file 4924,140107
remap_include_file 4993,142013
lookup_ino_include 5041,143415
finclude 5069,144263
record_control_macro 5178,147077
check_precompiled 5199,147965
check_preconditions 5252,149026
pcfinclude 5312,150573
pcstring_used 5428,154190
write_output 5442,154453
pass_thru_directive 5494,156168
struct arglist arglist5528,157364
create_definition 5540,157582
do_define 5716,162424
check_macro_name 5783,164404
compare_defs 5805,164976
comp_def_part 5849,166389
collect_expansion 5892,167907
do_assert 6186,175757
do_unassert 6263,177782
check_assertion 6363,180266
compare_token_lists 6406,181312
read_token_list 6429,181931
free_token_list 6494,183471
assertion_install 6514,183941
assertion_lookup 6553,184964
delete_assertion 6570,185296
#define FNAME_HASHSIZE 6591,185761
do_line 6594,185799
do_undef 6743,189499
do_error 6783,190634
do_warning 6802,191167
do_once 6822,191772
do_ident 6836,191986
do_pragma 6867,192792
do_pragma 6916,194147
do_sccs 6938,194708
do_if 6962,195501
do_elif 6979,195906
eval_if_expression 7020,197076
do_xifdef 7048,197805
conditional_skip 7144,200566
skip_if_group 7176,201348
do_else 7468,208571
do_endif 7511,209724
validate_else 7574,211544
skip_to_end_of_comment 7625,213016
skip_quoted_string 7716,215425
quote_string 7788,217262
skip_paren_group 7827,217973
output_line_directive 7878,219017
struct argdata argdata7958,221471
macroexpand 7976,221973
macarg 8371,233759
macarg1 8506,238025
discard_comments 8610,240327
change_newlines 8718,242765
my_strerror 8770,243723
error 8801,244572
verror 8812,244718
error_from_errno 8837,245165
warning 8862,245595
vwarning 8873,245745
error_with_line 8903,246295
verror_with_line 8918,246548
warning_with_line 8943,247021
vwarning_with_line 8958,247280
pedwarn 8990,247866
pedwarn_with_line 9005,248114
pedwarn_with_file_and_line 9027,248612
print_containing_files 9055,249267
line_for_error 9105,250621
grow_outbuf 9137,251337
install 9181,252654
lookup 9235,253823
delete_macro 9275,254883
hashf 9310,255587
dump_single_macro 9327,255865
dump_all_macros 9413,258030
dump_defn_1 9434,258543
dump_arg_n 9467,259278
initialize_char_syntax 9487,259649
initialize_builtins 9532,260655
make_definition 9642,264858
make_undef 9729,266913
make_assertion 9758,267560
#define DIR_SEPARATOR 9813,268783
new_include_prefix 9825,269202
append_include_chain 9916,271693
deps_output 9949,272395
#define MAX_OUTPUT_COLUMNS 9959,272550
fatal 9989,273303
fancy_abort 10006,273677
perror_with_name 10012,273742
pfatal_with_name 10021,273909
pipe_closed 10035,274094
memory_full 10043,274246
xmalloc 10050,274310
xrealloc 10060,274471
xcalloc 10071,274666
savestring 10083,274902
hack_vms_include_specification 10099,275255
VMS_freopen 10251,280927
VMS_fopen 10264,281264
VMS_open 10282,281842
VMS_fstat 10312,282895
VMS_stat 10332,283283

choose-temp.c,220
#define R_OK 35,1209
#define W_OK 36,1224
#define X_OK 37,1239
#define DIR_SEPARATOR 49,1464
#define DIR_SEPARATOR 54,1528
#define P_tmpdir 65,1919
#define TEMP_FILE 71,2021
try 80,2256
choose_temp_base 97,2704

collect2.c,4495
#define COLLECT37,1329
extern int errno;44,1427
extern char *sys_errlist[48,1475
extern int sys_nerr;49,1503
#define obstack_chunk_alloc 55,1609
#define obstack_chunk_free 56,1645
#define vfork 59,1689
#define R_OK 63,1729
#define W_OK 64,1744
#define X_OK 65,1759
#define WIFSIGNALED(WIFSIGNALED69,1802
#define WTERMSIG(WTERMSIG72,1893
#define WIFEXITED(WIFEXITED75,1951
#define WEXITSTATUS(WEXITSTATUS78,2019
#define OBJECT_FORMAT_NONE105,2961
#define MY_ISCOFF(MY_ISCOFF131,3476
#define XCOFF_SCAN_LIBS135,3544
#define USE_MMAP143,3655
#define NM_FLAGS 162,3965
#define NAME__MAIN 172,4318
#define SYMBOL__MAIN 173,4346
#define SCAN_LIBRARIES177,4462
int do_collecting 181,4513
int do_collecting 183,4542
struct id id188,4632
struct headhead195,4700
enum pass pass204,4848
  PASS_FIRST,205,4860
  PASS_OBJ,206,4904
  PASS_LIB,207,4944
  PASS_SECOND	208,5001
extern char *sys_siglist[213,5108
extern char *version_string;216,5150
int vflag;218,5180
static int rflag;219,5211
static int strip_flag;220,5248
int debug;222,5291
static int shared_obj;224,5327
static int   temp_filename_length;226,5382
static char *temp_filename;227,5447
static char *c_file;228,5505
static char *o_file;229,5576
static char *export_file;230,5647
char *ldout;231,5717
static char *output_file;232,5760
static char *nm_file_name;233,5814
static char *ldd_file_name;234,5863
static char *strip_file_name;235,5930
char *c_file_name;236,5985
static char *initname,237,6035
static char *initname, *fininame;237,6035
static struct head constructors;239,6105
static struct head destructors;240,6171
static struct head exports;241,6236
static struct head frame_tables;242,6296
struct obstack temporary_obstack;244,6369
struct obstack permanent_obstack;245,6403
char * temporary_firstobj;246,6437
extern int prepends_underscore;249,6525
struct prefix_listprefix_list258,6721
struct path_prefixpath_prefix264,6872
dup2 301,8282
my_strerror 322,8616
collect_exit 346,8928
fatal_perror 374,9410
fatal 388,9697
error 400,9949
fancy_abort 412,10260
handler 419,10322
xcalloc 440,10674
xmalloc 452,10854
xrealloc 464,11015
file_exists 475,11210
savestring 484,11347
extract_string 497,11597
dump_file 528,12141
is_ctor_dtor 589,13452
putenv 650,15117
#define PATH_SEPARATOR 695,16034
static struct path_prefix cpath,701,16186
static struct path_prefix cpath, path;701,16186
static char *target_machine 707,16351
static struct path_prefix our_file_names;713,16502
is_in_prefix_list 722,16806
find_a_file 758,17501
add_prefix 810,18637
prefix_from_env 846,19387
prefix_from_string 857,19558
main 895,20218
collect_wait 1495,38005
do_wait 1529,38569
collect_execute 1544,38815
fork_execute 1603,39991
maybe_unlink 1614,40173
add_to_list 1627,40352
write_list 1662,41078
write_list_with_asm 1675,41301
write_c_file_stat 1692,41705
#define INIT_NAME_FORMAT 1736,42571
#define FINI_NAME_FORMAT 1740,42734
write_c_file_glob 1815,45335
write_c_file 1868,47091
write_export_file 1883,47428
scan_prog_file 1903,48110
unsigned object;2085,52007
unsigned objsize;2086,52064
char * code;2087,52122
char * data;2088,52166
struct nlist *symtab;2089,52210
struct link_dynamic *ld;2090,52262
struct link_dynamic_2 *ld_2;2091,52287
struct head libraries;2092,52316
mapfile 2097,52426
static char *libname;2118,52878
libselect 2121,52912
libcompare 2136,53477
locatelib 2180,54523
scan_libraries 2272,56447
scan_libraries 2347,58394
#   define GCC_SYMBOLS(GCC_SYMBOLS2495,61615
#   define GCC_SYMENT	2496,61687
#   define GCC_OK_SYMBOL(GCC_OK_SYMBOL2497,61715
#   define GCC_SYMINC(GCC_SYMINC2498,61782
#   define GCC_SYMZERO(GCC_SYMZERO2499,61811
#   define GCC_CHECK_HDR(GCC_CHECK_HDR2500,61860
#   define GCC_SYMBOLS(GCC_SYMBOLS2502,61912
#   define GCC_SYMENT	2503,61962
#   define GCC_OK_SYMBOL(GCC_OK_SYMBOL2504,61992
#   define GCC_SYMINC(GCC_SYMINC2508,62176
#   define GCC_SYMZERO(GCC_SYMZERO2509,62218
#   define GCC_CHECK_HDR(GCC_CHECK_HDR2510,62246
scan_prog_file 2525,62803
scan_libraries 2614,65110
typedef union load_unionload_union2783,69620
} load_union_t;load_union_t2796,70256
typedef struct load_allload_all2800,70344
} load_all_t;load_all_t2804,70457
struct file_infofile_info2808,70546
scan_prog_file 2841,71799
add_func_table 3114,79377
print_header 3194,81960
print_load_command 3237,83836
bad_header 3304,85867
read_file 3329,86589
end_file 3394,88121

combine.c,3907
#define gen_lowpart 102,4144
static int combine_attempts;106,4265
static int combine_merges;110,4372
static int combine_extras;114,4474
static int combine_successes;118,4560
static int total_attempts,122,4631
static int total_attempts, total_merges,122,4631
static int total_attempts, total_merges, total_extras,122,4631
static int total_attempts, total_merges, total_extras, total_successes;122,4631
#define REVERSIBLE_CC_MODE(REVERSIBLE_CC_MODE128,4884
static int *uid_cuid;138,5283
static int max_uid_cuid;139,5305
#define INSN_CUID(INSN_CUID143,5364
static int combine_max_regno;148,5543
static rtx *reg_last_death;152,5641
static rtx *reg_last_set;156,5744
static int mem_last_set;161,5908
static int last_call_cuid;166,6049
static rtx subst_insn;174,6401
static rtx subst_prev_insn;179,6524
static int subst_low_cuid;188,6975
static HARD_REG_SET newpat_used_regs;193,7139
static rtx added_links_insn;199,7344
static int this_basic_block;202,7450
static rtx *reg_last_set_value;250,9562
static int *reg_last_set_label;255,9703
static int *reg_last_set_table_tick;260,9851
static char *reg_last_set_invalid;265,9976
static int label_tick;269,10048
static unsigned HOST_WIDE_INT *reg_nonzero_bits;281,10538
static enum machine_mode nonzero_bits_mode;286,10726
static char *reg_sign_bit_copies;291,10878
static int nonzero_sign_valid;298,11207
static enum machine_mode *reg_last_set_mode;305,11523
static unsigned HOST_WIDE_INT *reg_last_set_nonzero_bits;306,11568
static char *reg_last_set_sign_bit_copies;307,11626
struct undoundo313,11816
struct undobufundobuf335,12552
static struct undobuf undobuf;344,12683
#define SUBST(SUBST352,13028
#define SUBST_INT(SUBST_INT375,13786
static int n_occurrences;396,14446
combine_instructions 464,17876
init_reg_last_arrays 684,24753
setup_incoming_promotions 702,25467
set_nonzero_bits_and_sign_copies 733,26453
can_combine_p 815,29136
sets_function_arg_p 1055,38379
combinable_i3pat 1130,40847
try_combine 1259,45281
undo_all 2490,90320
find_split_point 2522,91099
subst 2936,105108
#define COMBINE_RTX_EQUAL_P(COMBINE_RTX_EQUAL_P2951,105522
simplify_rtx 3120,111448
simplify_if_then_else 4150,149099
simplify_set 4458,160333
simplify_logical 4741,170273
expand_compound_operation 5028,180023
expand_field_assignment 5228,187249
make_extraction 5358,191714
extract_left_shift 5686,203831
make_compound_operation 5749,205838
get_pos_from_mask 5998,214496
force_to_mode 6035,215603
if_then_else_cond 6556,234613
known_cond 6737,241075
rtx_equal_for_field_assignment_p 6827,243385
make_field_assignment 6875,244823
apply_distributive_law 6991,249010
simplify_and_const_int 7118,253343
#define num_sign_bit_copies(num_sign_bit_copies7227,257503
nonzero_bits 7236,257826
num_sign_bit_copies 7636,270854
extended_count 7952,281931
merge_outer_ops 7989,283345
simplify_shift_const 8121,286569
recog_for_combine 8848,311203
gen_lowpart_for_combine 8949,314268
gen_rtx_combine VPROTO(9052,317809
gen_binary 9122,319450
gen_unary 9172,320824
simplify_comparison 9197,321615
reversible_comparison_p 10191,354608
update_table_tick 10228,355626
record_value_for_reg 10260,356564
static rtx record_dead_insn;10348,359390
record_dead_and_set_regs_1 10354,359537
record_dead_and_set_regs 10395,361134
get_last_value_validate 10449,362746
get_last_value 10508,364471
use_crosses_set_p 10610,367783
static int reg_dead_regno,10661,369013
static int reg_dead_regno, reg_dead_endregno;10661,369013
static int reg_dead_flag;10662,369059
reg_dead_at_p_1 10670,369285
reg_dead_at_p 10696,370063
mark_used_regs_combine 10756,371618
remove_death 10860,374163
move_deaths 10886,374838
reg_bitfield_target_p 11054,380198
distribute_notes 11109,381736
distribute_links 11531,395466
insn_cuid 11621,398185
dump_combine_stats 11635,398457
dump_combine_total_stats 11645,398716

convert.c,112
convert_to_pointer 36,1231
convert_to_real 80,2402
convert_to_integer 118,3502
convert_to_complex 428,13949

cplus-dem.c,2043
#define CURRENT_DEMANGLING_STYLE 37,1452
mystrstr 45,1680
#define CPLUS_MARKER 78,2887
enum demangling_styles current_demangling_style 81,2920
static char cplus_markers[83,2987
set_cplus_marker_for_demangling 86,3057
struct work_stuffwork_stuff95,3255
#define PRINT_ANSI_QUALIFIERS 109,3613
#define PRINT_ARG_TYPES 110,3673
static const struct optableoptable112,3736
} optable[117,3816
typedef struct string	string199,7164
} string;string204,7409
#define STRING_EMPTY(STRING_EMPTY206,7420
#define PREPEND_BLANK(PREPEND_BLANK207,7473
#define APPEND_BLANK(APPEND_BLANK209,7558
#define ARM_VTABLE_STRING 212,7642
#define ARM_VTABLE_STRLEN 213,7716
consume_count 330,10540
consume_count_with_underscores 350,10924
cplus_demangle_opname 381,11408
cplus_mangle_opname 510,14442
cplus_demangle 557,15938
mop_up 610,17443
demangle_signature 681,19162
demangle_method_args 902,24941
demangle_template 925,25337
arm_pt 1279,32554
demangle_arm_pt 1301,32987
demangle_class_name 1337,33761
demangle_class 1391,35075
demangle_prefix 1455,36794
gnu_special 1643,41700
arm_special 1825,45967
demangle_qualified 1908,48080
get_count 2063,51571
do_type 2102,52114
demangle_fund_type 2383,57397
do_arg 2535,60485
remember_type 2554,60804
forget_types 2586,61503
demangle_args 2645,63188
demangle_function_name 2772,65755
string_need 2924,69588
string_delete 2951,69963
string_init 2962,70098
string_clear 2969,70177
string_empty 2978,70248
string_append 2987,70331
string_appends 3001,70533
string_appendn 3016,70730
string_prepend 3030,70916
string_prepends 3041,71076
string_prependn 3051,71214
static char *program_name;3079,71743
static char *program_version 3080,71770
static int flags 3081,71810
demangle_it 3088,71990
usage 3106,72267
#define MBUF_SIZE 3118,72560
char mbuffer[3119,72582
extern int prepends_underscore;3122,72668
int strip_underscore 3124,72701
static struct option long_options[3126,72728
main 3137,73039
fatal 3250,75043
xmalloc 3261,75184
xrealloc 3271,75354

cppalloc.c,56
memory_full 30,1205
xmalloc 37,1315
xrealloc 47,1459

cpperror.c,143
cpp_print_containing_files 36,1325
cpp_file_line_for_message 80,2290
cpp_message 94,2627
cpp_fatal 117,3311
cpp_pfatal_with_name 126,3470

cppexp.c,1921
struct arglist arglist45,1391
#define NULL 55,1558
#define GENERIC_PTR 60,1668
#define GENERIC_PTR 62,1701
#define NULL_PTR 67,1760
#define CHAR_TYPE_SIZE 73,1852
#define INT_TYPE_SIZE 77,1919
#define LONG_TYPE_SIZE 81,1986
#define WCHAR_TYPE_SIZE 85,2055
#define MAX_CHAR_TYPE_SIZE 89,2128
#define MAX_INT_TYPE_SIZE 93,2204
#define MAX_LONG_TYPE_SIZE 97,2279
#define MAX_WCHAR_TYPE_SIZE 101,2357
#define possible_sum_sign(possible_sum_sign106,2554
#define ERROR 112,2719
#define OROR 113,2737
#define ANDAND 114,2754
#define EQUAL 115,2773
#define NOTEQUAL 116,2791
#define LEQ 117,2812
#define GEQ 118,2828
#define LSH 119,2844
#define RSH 120,2860
#define NAME 121,2876
#define INT 122,2893
#define CHAR 123,2909
#define LEFT_OPERAND_REQUIRED 125,2927
#define RIGHT_OPERAND_REQUIRED 126,2959
#define HAVE_VALUE 127,2992
#define SKIP_OPERAND 130,3144
#  define HOST_WIDE_INT 139,3394
#   define HOST_WIDE_INT 143,3538
#   define HOST_WIDE_INT 147,3687
#   define HOST_WIDE_INT 149,3725
#define CHAR_BIT 156,3811
#define HOST_BITS_PER_WIDE_INT 160,3869
struct operation operation163,3944
parse_number 177,4413
struct token token281,6821
static struct token tokentab2[286,6871
cpp_lex 303,7133
cpp_parse_escape 514,12688
integer_overflow 613,14682
left_shift 621,14848
right_shift 645,15264
#define PAREN_INNER_PRIO 660,15628
#define COMMA_PRIO 661,15655
#define COND_PRIO 662,15676
#define OROR_PRIO 663,15709
#define ANDAND_PRIO 664,15741
#define OR_PRIO 665,15775
#define XOR_PRIO 666,15807
#define AND_PRIO 667,15836
#define EQUAL_PRIO 668,15866
#define LESS_PRIO 669,15898
#define SHIFT_PRIO 670,15931
#define PLUS_PRIO 671,15964
#define MUL_PRIO 672,15997
#define UNARY_PRIO 673,16028
#define PAREN_OUTER_PRIO 674,16060
#define COMPARE(COMPARE676,16101
cpp_parse_expr 684,16344
#define INIT_STACK_SIZE 697,16894
#define LOGICAL(LOGICAL933,23195

cpphash.c,103
hashf 35,1345
cpp_lookup 58,1890
delete_macro 100,3013
install 146,4264
cpp_hash_cleanup 193,5190

cpplib.c,5823
#define NO_SHORTNAMES26,1101
#define STANDARD_INCLUDE_DIR 42,1454
#define PTR_INT_TYPE 47,1599
#define PTR_INT_TYPE 49,1636
#define STDC_VALUE 57,1746
#define PATH_SEPARATOR 62,1856
#define O_RDONLY 95,2431
#define MIN(MIN100,2480
#define MAX(MAX101,2521
#  define HOST_WIDE_INT 109,2764
#   define HOST_WIDE_INT 113,2908
#   define HOST_WIDE_INT 117,3057
#   define HOST_WIDE_INT 119,3095
#define S_ISREG(S_ISREG126,3180
#define S_ISDIR(S_ISDIR130,3251
#define NULL 136,3385
#define GENERIC_PTR 141,3495
#define GENERIC_PTR 143,3528
#define NULL_PTR 148,3587
#define INCLUDE_LEN_FUDGE 152,3656
static char *predefs 158,3744
static char *predefs 160,3789
#define SIZE_TYPE 172,4223
#define PTRDIFF_TYPE 178,4337
#define WCHAR_TYPE 184,4441
#define CPP_WCHAR_TYPE(CPP_WCHAR_TYPE186,4473
#define USER_LABEL_PREFIX 192,4643
#define REGISTER_PREFIX 198,4752
struct tokenlist_list tokenlist_list206,4991
struct assertion_hashnode assertion_hashnode211,5076
#define SKIP_WHITE_SPACE(SKIP_WHITE_SPACE224,5559
#define SKIP_ALL_WHITE_SPACE(SKIP_ALL_WHITE_SPACE225,5634
#define PEEKN(PEEKN227,5710
#define FORWARD(FORWARD228,5824
#define GETC(GETC229,5881
#define PEEKC(PEEKC230,5929
#define CPP_IS_MACRO_BUFFER(CPP_IS_MACRO_BUFFER233,6121
#define NEWLINE_FIX 242,6517
#define NEWLINE_FIX1(NEWLINE_FIX1246,6683
struct cpp_pending cpp_pending250,6802
enum file_change_code file_change_code308,8438
enum file_change_code {same_file,308,8438
enum file_change_code {same_file, enter_file,308,8438
enum file_change_code {same_file, enter_file, leave_file}308,8438
extern char *version_string;316,8639
struct file_name_listfile_name_list341,9311
#define SELF_DIR_DUMMY 359,9953
static struct default_include default_include365,10202
} include_defaults_array[372,10539
#define STANDARD_INCLUDE_COMPONENT 410,11936
struct directive directive420,12215
#define IS_INCLUDE_DIRECTIVE_TYPE(IS_INCLUDE_DIRECTIVE_TYPE428,12513
static struct directive directive_table[433,12732
U_CHAR is_idchar[459,13674
U_CHAR is_idstart[461,13763
U_CHAR is_hor_space[463,13834
static U_CHAR is_space[465,13919
initialize_char_syntax 470,14021
quote_string 514,15087
cpp_grow_buffer 550,15705
cpp_define 570,16233
make_assertion 624,17385
append_include_chain 672,18478
deps_output 708,19354
#define MAX_OUTPUT_COLUMNS 719,19540
path_include 749,20483
cpp_options_init 796,21532
null_underflow 830,22293
null_cleanup 837,22367
macro_cleanup 845,22462
file_cleanup 858,22760
skip_comment 877,23206
cpp_skip_hspace 939,24329
copy_rest_of_line 977,25138
skip_rest_of_line 1026,26029
handle_directive 1038,26252
pass_thru_directive 1165,29896
struct arglist arglist1197,31041
collect_expansion 1218,31743
static char rest_extension[1498,39785
#define REST_EXTENSION_LENGTH	1499,39823
create_definition 1505,39996
check_macro_name 1680,44898
compare_defs 1710,45729
comp_def_part 1755,47188
do_define 1789,48238
#define ARG_BASE 1873,50937
struct argdata argdata1875,50979
cpp_push_buffer 1890,51411
cpp_pop_buffer 1915,52011
cpp_scan_buffer 1927,52277
cpp_expand_to_buffer 1954,52950
adjust_position 2003,53760
update_position 2022,54082
cpp_buf_line_and_col 2038,54546
cpp_file_buffer 2061,54998
count_newlines 2073,55230
output_line_command 2096,55806
macarg 2188,58178
change_newlines 2248,59655
timestamp 2287,60286
static char *monthnames[2297,60460
special_symbol 2307,60713
dump_special_to_buffer 2507,65406
initialize_builtins 2525,65998
unsafe_chars 2576,68093
macroexpand 2626,69857
push_macro_expansion 3035,81499
get_directive_token 3075,82931
do_include 3110,83826
redundant_include_p 3539,97007
is_system_include 3564,97941
assertion_install 3599,98782
assertion_lookup 3640,99863
delete_assertion 3658,100236
convert_string 3690,101080
#define FNAME_HASHSIZE 3732,101849
do_line 3735,101887
do_undef 3866,105953
do_error 3911,107196
do_warning 3932,107733
do_once 3952,108338
do_ident 3981,108944
do_pragma 4002,109575
do_pragma 4054,111111
do_sccs 4074,111649
do_if 4098,112433
do_elif 4114,112809
eval_if_expression 4157,114093
do_xifdef 4185,114780
conditional_skip 4267,117123
skip_if_group 4302,117952
do_else 4467,122179
do_endif 4510,123390
validate_else 4584,125284
cpp_get_token 4600,125662
cpp_get_non_space_token 5247,142158
parse_name 5264,142544
import_hash 5299,143160
lookup_import 5314,143500
add_import 5359,144645
struct file_name_mapfile_name_map5387,145648
#define FILE_NAME_MAP_FILE 5394,145743
read_filename_string 5400,145878
struct file_name_map_listfile_name_map_list5430,146409
read_name_map 5440,146625
open_include_file 5521,148756
finclude 5604,151117
cpp_start_read 5730,154064
cpp_reader_init 6229,168717
nreverse_pending 6249,169244
push_pending 6264,169514
cpp_handle_options 6283,170035
cpp_finish 6783,183500
cpp_cleanup 6816,184411
do_assert 6882,185812
do_unassert 6955,187989
check_assertion 7049,190421
compare_token_lists 7093,191531
reverse_token_list 7110,191865
read_token_list 7128,192337
free_token_list 7208,194105
file_size_and_mode 7223,194420
safe_read 7243,195044
xcalloc 7275,195548
savestring 7285,195746
parse_set_mark 7297,195976
parse_clear_mark 7311,196276
parse_goto_mark 7325,196579
parse_move_mark 7339,196994
cpp_read_check_assertion 7350,197264
cpp_print_file_and_line 7379,198077
cpp_error 7394,198388
cpp_warning 7407,198680
cpp_pedwarn 7426,199105
cpp_error_with_line 7438,199374
cpp_warning_with_line 7456,199783
cpp_pedwarn_with_line 7482,200322
cpp_pedwarn_with_file_and_line 7498,200796
extern int errno;7517,201349
extern int sys_nerr;7522,201409
extern char *sys_errlist[7523,201430
my_strerror 7535,201653
cpp_error_from_errno 7566,202483
cpp_perror_with_name 7582,202818

cppmain.c,117
char *progname;32,1118
cpp_reader parse_in;34,1135
cpp_options options;35,1156
fancy_abort 42,1331
main 50,1397

crtstuff.c,1344
#define CTORS_SECTION_ASM_OP	74,3511
#define DTORS_SECTION_ASM_OP	77,3602
#define EH_FRAME_SECTION_ASM_OP	80,3771
typedef void (*func_ptr)func_ptr86,3915
#define STATIC 87,3948
#define ON_EXIT(ON_EXIT94,4043
#define STATIC96,4072
static char __EH_FRAME_BEGIN__[125,5159
static func_ptr __DTOR_LIST__[126,5193
__do_global_dtors_aux 128,5238
fini_dummy 145,5529
frame_dummy 161,5924
init_dummy 167,5997
void __do_global_ctors 188,6672
  INIT_SECTION_PREAMBLE;209,7516
__do_global_ctors_aux 218,7845
static char __EH_FRAME_BEGIN__[237,8463
static func_ptr __DTOR_LIST__[238,8497
__do_global_dtors 240,8535
static func_ptr force_to_data[255,8805
CTOR_LIST_BEGIN;272,9781
STATIC func_ptr __CTOR_LIST__[275,9878
DTOR_LIST_BEGIN;279,9965
STATIC func_ptr __DTOR_LIST__[282,10062
char __EH_FRAME_BEGIN__[293,10375
static func_ptr __CTOR_END__[304,10549
__do_global_ctors_aux 306,10593
init_dummy 316,10788
__do_global_ctors_aux 365,12593
extern char __EH_FRAME_BEGIN__[380,13103
static func_ptr __CTOR_END__[381,13137
__do_global_ctors 383,13174
static func_ptr force_to_data[397,13457
CTOR_LIST_END;406,13862
STATIC func_ptr __CTOR_END__[409,13957
DTOR_LIST_END;413,14038
STATIC func_ptr __DTOR_END__[416,14133
typedef unsigned int ui32 __attribute__ __attribute__423,14353
STATIC ui32 __FRAME_END__[425,14439

cse.c,4170
static int max_reg;194,8920
static int max_qty;199,9062
static int next_qty;204,9178
static int *qty_first_reg;209,9339
static int *qty_last_reg;210,9366
static enum machine_mode *qty_mode;214,9459
static rtx *qty_const;221,9723
static rtx *qty_const_insn;226,9852
static enum rtx_code *qty_comparison_code;235,10304
static rtx *qty_comparison_const;241,10555
static int *qty_comparison_qty;247,10795
static rtx prev_insn_cc0;259,11317
static enum machine_mode prev_insn_cc0_mode;260,11343
static rtx prev_insn;265,11462
static rtx this_insn;269,11513
static int *reg_qty;274,11635
static int *reg_next_eqv;284,11908
static int *reg_prev_eqv;285,11934
static int *reg_tick;290,12083
static int *reg_in_table;299,12444
static HARD_REG_SET hard_regs_in_table;306,12722
static HARD_REG_SET regs_invalidated_by_call;311,12860
static int *all_minus_one;318,13123
static int *consec_ints;319,13150
static int cse_basic_block_start;323,13256
static int cse_basic_block_end;327,13369
static int *uid_cuid;333,13580
static int max_uid;336,13635
#define INSN_CUID(INSN_CUID340,13689
static int cse_jumps_altered;345,13858
static int recorded_label_ref;350,14065
static int do_not_record;356,14224
static rtx memory_extend_rtx;361,14344
static int hash_arg_in_memory;367,14507
static int hash_arg_in_struct;372,14656
struct table_elttable_elt417,16532
#define NBUCKETS 437,17071
#define HASH(HASH442,17241
#define FIXED_REGNO_P(FIXED_REGNO_P453,17760
#define FIXED_REGNO_P(FIXED_REGNO_P458,17943
#define CHEAP_REGNO(CHEAP_REGNO468,18385
#define CHEAP_REG(CHEAP_REG478,18877
#define COST(COST482,18994
#define REGNO_QTY_VALID_P(REGNO_QTY_VALID_P492,19290
static struct table_elt *table[494,19340
static struct table_elt *free_element_chain;499,19491
static int n_elements_made;503,19616
static int max_elements_made;508,19759
static struct table_elt *last_jump_equiv_class;514,19977
static int constant_pool_entries_cost;521,20252
struct write_datawrite_data536,20922
#define PATHLENGTH	546,21216
struct cse_basic_block_data cse_basic_block_data550,21318
#define FIXED_BASE_PLUS_P(FIXED_BASE_PLUS_P576,22244
#define NONZERO_BASE_PLUS_P(NONZERO_BASE_PLUS_P595,23072
extern int rtx_equal_function_value_matters;673,26872
notreg_cost 684,27308
#define COSTS_N_INSNS(COSTS_N_INSNS706,28086
rtx_cost 709,28130
new_basic_block 792,30243
make_new_qty 831,31132
make_regs_eqv 852,31535
delete_reg_equiv 913,33742
mention_regs 951,34546
insert_regs 1033,36911
free_element 1092,38469
get_element 1102,38667
remove_from_table 1120,39135
lookup 1200,41228
lookup_for_remove 1219,41726
lookup_as_function 1250,42473
#define CHEAPER(CHEAPER1294,43979
insert 1297,44053
merge_equiv_classes 1472,49623
invalidate 1534,51520
remove_invalid_refs 1654,54782
rehash_using_reg 1676,55338
invalidate_memory 1727,56770
invalidate_for_call 1751,57330
use_related_value 1807,58896
canon_hash 1891,61337
safe_hash 2051,65034
exp_equiv_p 2081,66273
refers_to_p 2238,69862
set_nonvarying_address_components 2296,71135
refers_to_mem_p 2447,75452
cse_rtx_addr_varies_p 2510,76884
canon_reg 2568,79333
find_best_addr 2663,82220
find_comparison_args 2892,89676
simplify_unary_operation 3047,94412
simplify_binary_operation 3474,105357
simplify_plus_minus 4324,129051
cse_gen_binary 4497,133293
simplify_relational_operation 4542,134806
simplify_ternary_operation 4762,141633
fold_rtx 4851,144269
equiv_constant 5810,174595
gen_lowpart_if_possible 5856,175912
record_jump_equiv 5902,177367
record_jump_cond 5950,178944
struct setset6172,185720
cse_insn 6206,186846
note_mem_written 7700,238979
invalidate_from_clobbers 7754,240985
cse_process_notes 7818,242805
cse_around_loop 7906,245221
static struct write_data skipped_writes_memory;7969,247624
invalidate_skipped_set 7975,247834
invalidate_skipped_block 8008,248880
static rtx cse_check_loop_start_value;8037,249618
cse_check_loop_start 8043,249812
cse_set_around_loop 8074,250927
cse_end_of_basic_block 8174,254588
cse_main 8386,261358
cse_basic_block 8565,266980
count_reg_usage 8785,273933
delete_dead_from_cse 8877,276374

dbxout.c,2748
extern int errno;85,3357
#define ASM_STABS_OP 93,3462
#define ASM_STABN_OP 97,3521
#define DBX_TYPE_DECL_STABS_CODE 101,3592
#define DBX_STATIC_CONST_VAR_CODE 105,3674
#define DBX_REGPARM_STABS_CODE 109,3753
#define DBX_REGPARM_STABS_LETTER 113,3832
#define GDB_INV_REF_REGPARM_STABS_LETTER 118,3998
#define DBX_MEMPARM_STABS_LETTER 122,4084
#define FILE_NAME_JOINER 126,4154
#define MINIMAL_DEBUG 134,4411
#define MINIMAL_DEBUG 139,4506
static int flag_minimal_debug 143,4545
static int have_used_extensions 150,4837
static int source_label_number 155,4995
static int scope_labelno 157,5032
#define FORCE_TEXT 167,5279
#define FORCE_TEXT169,5321
#define N_CATCH 179,5633
#define STAB_CODE_TYPE 184,5703
#define STAB_CODE_TYPE 186,5755
#define PARM_PASSED_IN_MEMORY(PARM_PASSED_IN_MEMORY191,5846
#define DEBUGGER_AUTO_OFFSET(DEBUGGER_AUTO_OFFSET197,6075
#define DEBUGGER_ARG_OFFSET(DEBUGGER_ARG_OFFSET204,6333
static FILE *asmfile;209,6435
static char *lastfile;213,6514
static char *cwd;217,6573
enum typestatus typestatus219,6592
enum typestatus {TYPE_UNSEEN,219,6592
enum typestatus {TYPE_UNSEEN, TYPE_XREF,219,6592
enum typestatus {TYPE_UNSEEN, TYPE_XREF, TYPE_DEFINED}219,6592
struct typeinfotypeinfo228,6944
struct typeinfo *typevec;242,7252
static int typevec_len;246,7339
static int next_type_number;252,7534
struct dbx_filedbx_file260,7758
static struct dbx_file *current_file;269,7886
static int next_file_number;273,7970
static int next_block_number;285,8417
static STAB_CODE_TYPE current_sym_code;297,8942
static int current_sym_value;298,8982
static rtx current_sym_addr;299,9012
static int current_sym_nchars;304,9159
#define CHARS(CHARS308,9263
#define DBX_CONTIN_LENGTH 314,9434
#define CONTIN 318,9497
#define CONTIN321,9602
dbxout_function_end 348,10627
dbxout_init 371,11494
dbxout_typedefs 473,15018
dbxout_start_new_source_file 494,15497
dbxout_resume_previous_source_file 513,15980
dbxout_source_file 528,16290
dbxout_source_line 560,17255
dbxout_finish 579,17710
dbxout_type_index 591,17968
dbxout_continue 611,18511
dbxout_type_fields 628,18922
dbxout_type_method_1 731,21958
dbxout_type_methods 775,23148
dbxout_range_type 935,27851
dbxout_type 978,29358
print_int_cst_octal 1521,45415
print_octal 1565,46708
dbxout_type_name 1580,47064
dbxout_symbol 1607,47732
dbxout_symbol_location 1886,56239
dbxout_symbol_name 2096,63136
dbxout_prepare_symbol 2115,63725
dbxout_finish_symbol 2126,63900
dbxout_syms 2148,64388
dbxout_parms 2171,65106
dbxout_reg_parms 2392,72260
dbxout_args 2422,73294
dbxout_types 2439,73637
dbxout_block 2470,74599
dbxout_really_begin_function 2573,77619
dbxout_begin_function 2585,77896
dbxout_function 2600,78333

doschk.c,327
typedef struct ENTENT19,307
} ENT;ENT26,413
ENT *eroot 28,421
int first_inv 30,438
int first_msg 31,457
invalid_msg 38,645
alloc_ent 52,856
fill_ent 65,1075
compare_ent_dosname 179,3141
compare_ent_fullname 192,3388
mpath 205,3646
add_ent 221,4006
handle_input 229,4076
display_problems 238,4186
main 331,6366

dwarf2out.c,15008
dwarf2out_do_frame 51,1738
#define inline63,1982
#define ASM_COMMENT_START 68,2073
typedef struct dw_cfi_struct *dw_cfi_ref;dw_cfi_ref71,2112
typedef struct dw_fde_struct *dw_fde_ref;dw_fde_ref72,2154
typedef union  dw_cfi_oprnd_struct *dw_cfi_oprnd_ref;dw_cfi_oprnd_ref73,2196
typedef union dw_cfi_oprnd_structdw_cfi_oprnd_struct80,2477
dw_cfi_oprnd;dw_cfi_oprnd86,2594
typedef struct dw_cfi_structdw_cfi_struct88,2609
dw_cfi_node;dw_cfi_node95,2769
typedef struct dw_fde_structdw_fde_struct103,3087
dw_fde_node;dw_fde_node110,3217
#define MAX_ARTIFICIAL_LABEL_BYTES	113,3299
#define CHAR_TYPE_SIZE 121,3605
#define PTR_SIZE 124,3666
#define DWARF_OFFSET_SIZE 132,3973
#define DWARF_VERSION 135,4009
#define DWARF_ROUND(DWARF_ROUND138,4080
#define DWARF_CIE_DATA_ALIGNMENT 143,4272
#define DWARF_CIE_DATA_ALIGNMENT 145,4329
static dw_fde_ref fde_table;150,4490
static unsigned fde_table_allocated;153,4581
static unsigned fde_table_in_use;156,4676
#define FDE_TABLE_INCREMENT 160,4792
static dw_cfi_ref cie_cfi_head;163,4872
static unsigned current_funcdef_number 170,5234
static unsigned current_funcdef_fde;176,5543
#define UNALIGNED_SHORT_ASM_OP	206,6774
#define UNALIGNED_INT_ASM_OP	209,6850
#define UNALIGNED_DOUBLE_INT_ASM_OP	212,6931
#define ASM_BYTE_OP	217,7035
#define DW_FORM_data 221,7126
#define DW_FORM_ref 222,7204
#define SECTION_ASM_OP	226,7348
#define SECTION_FORMAT 235,7727
#define SECTION_FORMAT	237,7775
#define FRAME_SECTION	242,7849
#define FUNC_BEGIN_LABEL	246,7920
#define FUNC_END_LABEL	249,7981
#define CIE_AFTER_SIZE_LABEL	251,8018
#define CIE_END_LABEL	252,8055
#define FDE_AFTER_SIZE_LABEL	253,8086
#define FDE_END_LABEL	254,8123
#define ASM_OUTPUT_SECTION(ASM_OUTPUT_SECTION261,8375
#define ASM_OUTPUT_DWARF_DATA1(ASM_OUTPUT_DWARF_DATA1266,8518
#define UNALIGNED_OFFSET_ASM_OP 273,8685
#define UNALIGNED_WORD_ASM_OP 278,8837
#define ASM_OUTPUT_DWARF_DELTA2(ASM_OUTPUT_DWARF_DELTA2283,8980
#define ASM_OUTPUT_DWARF_DELTA4(ASM_OUTPUT_DWARF_DELTA4292,9254
#define ASM_OUTPUT_DWARF_DELTA(ASM_OUTPUT_DWARF_DELTA301,9525
#define ASM_OUTPUT_DWARF_ADDR_DELTA(ASM_OUTPUT_DWARF_ADDR_DELTA310,9803
#define ASM_OUTPUT_DWARF_ADDR(ASM_OUTPUT_DWARF_ADDR319,10078
#define ASM_OUTPUT_DWARF_ADDR_CONST(ASM_OUTPUT_DWARF_ADDR_CONST326,10279
#define ASM_OUTPUT_DWARF_OFFSET(ASM_OUTPUT_DWARF_OFFSET331,10433
#define ASM_OUTPUT_DWARF_DATA2(ASM_OUTPUT_DWARF_DATA2338,10633
#define ASM_OUTPUT_DWARF_DATA4(ASM_OUTPUT_DWARF_DATA4343,10792
#define ASM_OUTPUT_DWARF_DATA(ASM_OUTPUT_DWARF_DATA348,10948
#define ASM_OUTPUT_DWARF_ADDR_DATA(ASM_OUTPUT_DWARF_ADDR_DATA354,11123
#define ASM_OUTPUT_DWARF_DATA8(ASM_OUTPUT_DWARF_DATA8360,11297
#define ASM_OUTPUT_DWARF_ADDR(ASM_OUTPUT_DWARF_ADDR380,11927
#define ASM_OUTPUT_DWARF_OFFSET(ASM_OUTPUT_DWARF_OFFSET383,12041
#define ASM_OUTPUT_DWARF_DELTA2(ASM_OUTPUT_DWARF_DELTA2386,12151
#define ASM_OUTPUT_DWARF_DELTA4(ASM_OUTPUT_DWARF_DELTA4392,12375
#define ASM_OUTPUT_DWARF_ADDR_DELTA(ASM_OUTPUT_DWARF_ADDR_DELTA398,12597
#define ASM_OUTPUT_DWARF_DELTA(ASM_OUTPUT_DWARF_DELTA404,12820
#define ASM_OUTPUT_DWARF_DATA4(ASM_OUTPUT_DWARF_DATA4407,12921
#define ASM_OUTPUT_DWARF_STRING(ASM_OUTPUT_DWARF_STRING416,13303
#define DWARF_FRAME_RETURN_COLUMN 444,14367
#define DWARF_FRAME_RETURN_COLUMN 446,14439
#define DWARF_FRAME_REGNUM(DWARF_FRAME_REGNUM453,14671
expand_builtin_dwarf_fp_regnum 459,14771
#define INCOMING_FRAME_SP_OFFSET 467,15018
stripattributes 474,15183
reg_number 490,15427
struct reg_size_rangereg_size_range505,15698
expand_builtin_dwarf_reg_size 519,16131
dwarf_cfi_name 589,18402
new_cfi 649,20048
add_cfi 663,20343
dwarf2out_cfi_label 679,20648
add_fde_cfi 694,20992
lookup_cfa_1 729,21753
lookup_cfa 754,22338
static unsigned long cfa_reg;775,22882
static long cfa_offset;776,22912
static unsigned cfa_store_reg;780,23029
static long cfa_store_offset;781,23060
static long args_size;784,23164
dwarf2out_def_cfa 791,23355
reg_save 843,24595
dwarf2out_window_save 883,25665
dwarf2out_args_size 895,25942
dwarf2out_reg_save 909,26307
dwarf2out_return_save 921,26606
dwarf2out_return_reg 932,26875
initial_return_save 943,27136
dwarf2out_stack_adjust 995,28477
dwarf2out_frame_debug 1076,30352
size_of_uleb128 1247,34604
size_of_sleb128 1267,34931
output_uleb128 1288,35302
output_sleb128 1315,35877
output_cfi 1346,36570
#define EH_FRAME_SECTION(EH_FRAME_SECTION1464,40168
#define EH_FRAME_SECTION(EH_FRAME_SECTION1467,40259
output_call_frame_info 1480,40580
dwarf2out_begin_prologue 1668,46441
dwarf2out_end_epilogue 1707,47529
dwarf2out_frame_init 1721,47923
dwarf2out_frame_finish 1741,48560
dw_val_class;dw_val_class1791,50046
typedef long int dw_offset;dw_offset1796,50175
typedef struct die_struct *dw_die_ref;dw_die_ref1800,50265
typedef struct dw_attr_struct *dw_attr_ref;dw_attr_ref1801,50304
typedef struct dw_val_struct *dw_val_ref;dw_val_ref1802,50348
typedef struct dw_line_info_struct *dw_line_info_ref;dw_line_info_ref1803,50390
typedef struct dw_separate_line_info_struct *dw_separate_line_info_ref;dw_separate_line_info_ref1804,50444
typedef struct dw_loc_descr_struct *dw_loc_descr_ref;dw_loc_descr_ref1805,50516
typedef struct pubname_struct *pubname_ref;pubname_ref1806,50570
typedef dw_die_ref *arange_ref;arange_ref1807,50614
typedef struct dw_long_long_structdw_long_long_struct1811,50694
dw_long_long_const;dw_long_long_const1816,50774
typedef struct dw_fp_structdw_fp_struct1820,50845
dw_float_const;dw_float_const1825,50911
typedef struct dw_line_info_structdw_line_info_struct1832,51134
dw_line_info_entry;dw_line_info_entry1837,51231
typedef struct dw_separate_line_info_structdw_separate_line_info_struct1841,51347
dw_separate_line_info_entry;dw_separate_line_info_entry1847,51479
typedef struct dw_val_structdw_val_struct1852,51600
dw_val_node;dw_val_node1872,52028
typedef struct dw_loc_descr_structdw_loc_descr_struct1877,52133
dw_loc_descr_node;dw_loc_descr_node1884,52301
typedef struct dw_attr_structdw_attr_struct1890,52523
dw_attr_node;dw_attr_node1896,52644
typedef struct die_structdie_struct1900,52714
die_node;die_node1912,52975
typedef struct pubname_structpubname_struct1916,53015
pubname_entry;pubname_entry1921,53082
typedef struct limbo_die_structlimbo_die_struct1924,53135
limbo_die_node;limbo_die_node1929,53222
#define ASM_COMMENT_START 1933,53307
#define TYPE_DECL_IS_STUB(TYPE_DECL_IS_STUB1946,53834
extern int flag_traditional;1960,54385
extern char *version_string;1961,54414
extern char *language_string;1962,54443
#define DWARF_COMPILE_UNIT_HEADER_SIZE 1965,54538
#define DWARF_LINE_PROLOG_HEADER_SIZE 1968,54670
#define DWARF_PUBNAMES_HEADER_SIZE 1971,54759
#define DWARF_ARANGES_HEADER_SIZE 1974,54876
#define DWARF_LINE_MIN_INSTR_LENGTH 1985,55448
#define DWARF_LINE_BASE 1990,55616
#define DWARF_LINE_OPCODE_BASE 1993,55717
#define DWARF_LINE_RANGE 1996,55814
#define	DWARF_LINE_DEFAULT_IS_STMT_START 2002,56118
static unsigned long next_die_offset;2006,56283
static dw_die_ref comp_unit_die;2009,56398
static limbo_die_node *limbo_die_list 2012,56498
static char **file_table;2015,56619
static unsigned file_table_allocated;2020,56799
static unsigned file_table_in_use;2023,56908
#define FILE_TABLE_INCREMENT 2027,57030
static char *primary_filename;2031,57155
static unsigned next_block_number 2038,57539
static dw_die_ref *decl_die_table;2043,57762
static unsigned decl_die_table_allocated;2046,57868
static unsigned decl_die_table_in_use;2049,57973
#define DECL_DIE_TABLE_INCREMENT 2053,58099
static tree *decl_scope_table;2060,58421
static unsigned decl_scope_table_allocated;2063,58525
static unsigned decl_scope_depth;2066,58624
#define DECL_SCOPE_TABLE_INCREMENT 2070,58747
static dw_die_ref *abbrev_die_table;2075,58968
static unsigned abbrev_die_table_allocated;2078,59074
static unsigned abbrev_die_table_in_use;2081,59181
#define ABBREV_DIE_TABLE_INCREMENT 2085,59311
static dw_line_info_ref line_info_table;2089,59485
static unsigned line_info_table_allocated;2092,59594
static unsigned separate_line_info_table_in_use;2095,59710
static dw_separate_line_info_ref separate_line_info_table;2099,59902
static unsigned separate_line_info_table_allocated;2102,60038
static unsigned line_info_table_in_use;2105,60154
#define LINE_INFO_TABLE_INCREMENT 2109,60282
static pubname_ref pubname_table;2113,60416
static unsigned pubname_table_allocated;2116,60516
static unsigned pubname_table_in_use;2119,60619
#define PUBNAME_TABLE_INCREMENT 2123,60743
static arange_ref arange_table;2127,60873
static unsigned arange_table_allocated;2130,60970
static unsigned arange_table_in_use;2133,61071
#define ARANGE_TABLE_INCREMENT 2137,61193
static tree *pending_types_list;2143,61381
static unsigned pending_types_allocated;2146,61489
static unsigned pending_types;2149,61597
#define PENDING_TYPES_INCREMENT 2154,61813
static int current_function_has_inlines;2157,61927
static int comp_unit_has_inlines;2158,61968
static tree dwarf_last_decl;2164,62250
#define DEBUG_INFO_SECTION	2345,71347
#define ABBREV_SECTION	2348,71418
#define ARANGES_SECTION	2351,71489
#define DW_MACINFO_SECTION	2354,71565
#define DEBUG_LINE_SECTION	2357,71643
#define LOC_SECTION	2360,71711
#define PUBNAMES_SECTION	2363,71777
#define STR_SECTION	2366,71847
#define TEXT_SECTION	2371,71972
#define DATA_SECTION	2374,72030
#define BSS_SECTION	2377,72087
static char text_end_label[2387,72459
#define TEXT_END_LABEL	2390,72539
#define DATA_END_LABEL	2393,72602
#define BSS_END_LABEL 2396,72664
#define INSN_LABEL_FMT	2399,72734
#define BLOCK_BEGIN_LABEL	2402,72799
#define BLOCK_END_LABEL	2405,72862
#define BODY_BEGIN_LABEL	2408,72925
#define BODY_END_LABEL	2411,72986
#define LINE_CODE_LABEL	2414,73047
#define SEPARATE_LINE_CODE_LABEL	2417,73117
#define ASM_NAME_TO_STRING(ASM_NAME_TO_STRING2424,73375
addr_const_to_string 2441,74080
addr_to_string 2572,77328
is_pseudo_reg 2583,77511
type_main_variant 2595,77841
is_tagged_type 2615,78467
dwarf_tag_name 2627,78742
dwarf_attr_name 2744,82360
dwarf_form_name 2917,87490
dwarf_stack_op_name 2972,88843
dwarf_type_encoding_name 3275,96248
decl_ultimate_origin 3308,97198
block_ultimate_origin 3338,97984
decl_class_context 3368,98667
add_dwarf_attr 3388,99122
add_AT_flag 3410,99512
add_AT_int 3427,99987
add_AT_unsigned 3444,100473
add_AT_long_long 3461,101005
add_AT_float 3480,101620
add_AT_string 3499,102184
add_AT_die_ref 3516,102662
add_AT_fde_ref 3533,103160
add_AT_loc 3550,103664
add_AT_addr 3567,104144
add_AT_lbl_id 3584,104609
add_AT_section_offset 3601,105103
is_extern_subr_die 3619,105608
get_AT 3647,106209
get_AT_low_pc 3679,106967
get_AT_hi_pc 3696,107441
get_AT_string 3711,107796
get_AT_flag 3727,108192
get_AT_unsigned 3743,108594
is_c_family 3756,108902
is_fortran 3765,109105
remove_AT 3775,109339
remove_children 3814,110184
add_child_die 3844,110725
new_die 3870,111265
lookup_type_die 3904,112082
equate_type_number_to_die 3913,112245
lookup_decl_die 3923,112488
equate_decl_number_to_die 3935,112731
new_loc_descr 3970,113795
add_loc_descr 3991,114441
static int print_indent;4007,114872
print_spaces 4012,114985
print_die 4022,115210
print_dwarf_line_table 4106,117447
debug_dwarf_die 4128,118012
debug_dwarf 4138,118205
add_sibling_attributes(4150,118536
build_abbrev_table 4182,119536
size_of_string 4243,121165
size_of_loc_descr 4268,121579
size_of_locs 4371,123994
constant_size 4385,124278
size_of_die 4405,124588
calc_die_sizes 4474,126185
size_of_line_prolog 4493,126649
size_of_line_info 4532,127599
size_of_pubnames 4684,131345
size_of_aranges 4703,131769
value_format 4721,132191
output_value_format 4778,133377
output_abbrev_section 4794,133706
output_loc_operands 4844,135028
sibling_offset 4963,138169
output_die 4980,138531
output_compilation_unit_header 5184,143930
dwarf2_name 5215,144984
add_pubname 5225,145173
output_pubnames 5252,145821
add_arange 5305,147356
output_aranges 5328,147947
output_line_info 5426,150934
is_body_block 5870,165899
base_type_die 5896,166482
root_type 5976,168973
is_base_type 6000,169519
modified_type_die 6040,170288
type_is_enum 6150,173853
reg_loc_descriptor 6159,174044
based_loc_descr 6176,174458
is_based_loc 6201,175232
mem_loc_descriptor 6220,175959
concat_loc_descriptor 6305,179273
loc_descriptor 6332,180304
ceiling 6371,181298
field_type 6384,181702
simple_type_align_in_bits 6405,182194
simple_type_size_in_bits 6418,182677
field_byte_offset 6442,183463
add_AT_location_description 6551,188528
add_data_member_location_attribute 6596,190691
add_const_value_attribute 6632,191945
add_location_or_const_value_attribute 6732,195528
add_name_attribute 6886,202235
add_bound_info 6898,202570
add_subscript_info 6985,206004
add_byte_size_attribute 7055,208493
add_bit_offset_attribute 7109,210507
add_bit_size_attribute 7160,212443
add_prototyped_attribute 7174,212925
add_abstract_origin_attribute 7189,213374
add_pure_or_virtual_attribute 7205,213848
add_src_coords_attributes 7227,214511
add_name_and_src_coords_attributes 7241,214946
push_decl_scope 7262,215579
scope_die_for 7280,216076
pop_decl_scope 7326,217411
add_type_attribute 7337,217713
type_tag 7377,219220
member_declared_type 7409,220096
decl_start_label 7421,220400
gen_array_type_die 7443,220874
gen_set_type_die 7500,222971
gen_entry_point_die 7512,223304
pend_type 7536,224003
output_pending_types_for_scope 7557,224603
gen_inlined_enumeration_type_die 7574,224993
gen_inlined_structure_type_die 7588,225400
gen_inlined_union_type_die 7602,225799
gen_enumeration_type_die 7619,226352
gen_formal_parameter_die 7684,228711
gen_unspecified_parameters_die 7731,229937
gen_formal_types_die 7750,230759
gen_subprogram_die 7811,233081
gen_variable_die 8080,243197
gen_label_die 8158,245760
gen_lexical_block_die 8199,247021
gen_inlined_subroutine_die 8224,247745
gen_field_die 8252,248662
gen_pointer_type_die 8290,249937
gen_reference_type_die 8307,250592
gen_ptr_to_mbr_type_die 8322,251056
gen_compile_unit_die 8338,251556
gen_string_type_die 8392,253422
gen_inheritance_die 8411,253947
gen_member_die 8431,254600
gen_struct_or_union_type_die 8473,256342
gen_subroutine_type_die 8550,258835
gen_typedef_die 8567,259355
gen_type_die 8604,260301
gen_tagged_type_instantiation_die 8742,264346
gen_block_die 8783,265415
decls_for_scope 8866,268696
is_redundant_typedef 8914,270131
gen_decl_die 8934,270663
dwarf2out_decl 9071,275333
dwarf2out_begin_block 9196,280620
dwarf2out_end_block 9207,280910
dwarf2out_label 9218,281222
lookup_filename 9244,282297
dwarf2out_line 9286,283662
dwarf2out_start_source_file 9351,285690
dwarf2out_end_source_file 9360,285889
dwarf2out_define 9369,286152
dwarf2out_undef 9386,286618
dwarf2out_init 9395,286781
dwarf2out_finish 9460,289383

dwarfout.c,10119
#define inline69,2153
#define ASM_COMMENT_START 74,2244
#define PRINT_REG(PRINT_REG79,2342
#define TYPE_USED_FOR_FUNCTION(TYPE_USED_FOR_FUNCTION98,3249
#define TYPE_DECL_IS_STUB(TYPE_DECL_IS_STUB109,3812
extern int flag_traditional;115,4019
extern char *version_string;116,4048
extern char *language_string;117,4077
#define MAX_ARTIFICIAL_LABEL_BYTES	121,4175
#define CHAR_TYPE_SIZE 129,4482
#define SHORT_TYPE_SIZE 133,4551
#define INT_TYPE_SIZE 137,4625
#define LONG_TYPE_SIZE 141,4692
#define LONG_LONG_TYPE_SIZE 145,4765
#define WCHAR_TYPE_SIZE 149,4845
#define WCHAR_UNSIGNED 153,4914
#define FLOAT_TYPE_SIZE 157,4971
#define DOUBLE_TYPE_SIZE 161,5042
#define LONG_DOUBLE_TYPE_SIZE 165,5125
struct filename_entry filename_entry170,5237
typedef struct filename_entry filename_entry;filename_entry175,5299
static filename_entry *filename_table;179,5424
static unsigned ft_entries_allocated;185,5622
static unsigned ft_entries;189,5736
#define FT_ENTRIES_INCREMENT 195,5946
static char *primary_filename;200,6071
static char *last_filename;204,6185
static unsigned next_block_number 214,6639
static unsigned next_unused_dienum 218,6730
static unsigned current_dienum;222,6833
static next_pubname_number 228,7046
#define NEXT_DIE_NUM 230,7079
static unsigned *pending_sibling_stack;235,7291
static unsigned pending_siblings;240,7434
static unsigned pending_siblings_allocated;245,7567
#define PENDING_SIBLINGS_INCREMENT 251,7800
static int finalizing 257,8035
static tree *pending_types_list;263,8216
static unsigned pending_types_allocated;267,8325
static unsigned pending_types;271,8434
#define PENDING_TYPES_INCREMENT 277,8651
static tree fake_containing_scope;285,9040
static unsigned current_funcdef_number 293,9430
static tree dwarf_last_decl;300,9723
static int in_class;306,9977
#define FILE_ASM_OP	433,16561
#define VERSION_ASM_OP	436,16620
#define UNALIGNED_SHORT_ASM_OP	439,16693
#define UNALIGNED_INT_ASM_OP	442,16769
#define ASM_BYTE_OP	445,16834
#define SET_ASM_OP	448,16889
#define PUSHSECTION_ASM_OP	460,17452
#define POPSECTION_ASM_OP	463,17523
#define PUSHSECTION_FORMAT	472,17894
#define DEBUG_SECTION	476,17964
#define LINE_SECTION	479,18024
#define SFNAMES_SECTION	482,18085
#define SRCINFO_SECTION	485,18158
#define MACINFO_SECTION	488,18231
#define PUBNAMES_SECTION	491,18305
#define ARANGES_SECTION	494,18379
#define TEXT_SECTION	497,18449
#define DATA_SECTION	500,18507
#define DATA1_SECTION	503,18566
#define RODATA_SECTION	506,18628
#define RODATA1_SECTION	509,18693
#define BSS_SECTION	512,18756
#define TEXT_BEGIN_LABEL	534,19790
#define TEXT_END_LABEL	537,19858
#define DATA_BEGIN_LABEL	541,19928
#define DATA_END_LABEL	544,19996
#define DATA1_BEGIN_LABEL	548,20067
#define DATA1_END_LABEL	551,20138
#define RODATA_BEGIN_LABEL	555,20212
#define RODATA_END_LABEL	558,20286
#define RODATA1_BEGIN_LABEL	562,20362
#define RODATA1_END_LABEL	565,20439
#define BSS_BEGIN_LABEL	569,20513
#define BSS_END_LABEL	572,20579
#define LINE_BEGIN_LABEL	576,20647
#define LINE_LAST_ENTRY_LABEL	579,20722
#define LINE_END_LABEL	582,20798
#define DEBUG_BEGIN_LABEL	586,20869
#define SFNAMES_BEGIN_LABEL	589,20944
#define SRCINFO_BEGIN_LABEL	592,21023
#define MACINFO_BEGIN_LABEL	595,21102
#define DIE_BEGIN_LABEL_FMT	599,21182
#define DIE_END_LABEL_FMT	602,21253
#define PUB_DIE_LABEL_FMT	605,21324
#define INSN_LABEL_FMT	608,21390
#define BLOCK_BEGIN_LABEL_FMT	611,21464
#define BLOCK_END_LABEL_FMT	614,21539
#define SS_BEGIN_LABEL_FMT	617,21613
#define SS_END_LABEL_FMT	620,21682
#define EE_BEGIN_LABEL_FMT	623,21753
#define EE_END_LABEL_FMT	626,21822
#define MT_BEGIN_LABEL_FMT	629,21893
#define MT_END_LABEL_FMT	632,21962
#define LOC_BEGIN_LABEL_FMT	635,22034
#define LOC_END_LABEL_FMT	638,22105
#define BOUND_BEGIN_LABEL_FMT	641,22180
#define BOUND_END_LABEL_FMT	644,22261
#define DERIV_BEGIN_LABEL_FMT	647,22344
#define DERIV_END_LABEL_FMT	650,22419
#define SL_BEGIN_LABEL_FMT	653,22493
#define SL_END_LABEL_FMT	656,22563
#define BODY_BEGIN_LABEL_FMT	659,22637
#define BODY_END_LABEL_FMT	662,22710
#define FUNC_END_LABEL_FMT	665,22783
#define TYPE_NAME_FMT	668,22851
#define DECL_NAME_FMT	671,22913
#define LINE_CODE_LABEL_FMT	674,22981
#define SFNAMES_ENTRY_LABEL_FMT	677,23059
#define LINE_ENTRY_LABEL_FMT	680,23137
#define ASM_OUTPUT_PUSH_SECTION(ASM_OUTPUT_PUSH_SECTION690,23447
#define ASM_OUTPUT_POP_SECTION(ASM_OUTPUT_POP_SECTION695,23603
#define ASM_OUTPUT_DWARF_DELTA2(ASM_OUTPUT_DWARF_DELTA2700,23730
#define ASM_OUTPUT_DWARF_DELTA4(ASM_OUTPUT_DWARF_DELTA4710,24034
#define ASM_OUTPUT_DWARF_TAG(ASM_OUTPUT_DWARF_TAG720,24333
#define ASM_OUTPUT_DWARF_ATTRIBUTE(ASM_OUTPUT_DWARF_ATTRIBUTE732,24702
#define ASM_OUTPUT_DWARF_STACK_OP(ASM_OUTPUT_DWARF_STACK_OP744,25079
#define ASM_OUTPUT_DWARF_FUND_TYPE(ASM_OUTPUT_DWARF_FUND_TYPE755,25430
#define ASM_OUTPUT_DWARF_FMT_BYTE(ASM_OUTPUT_DWARF_FMT_BYTE767,25806
#define ASM_OUTPUT_DWARF_TYPE_MODIFIER(ASM_OUTPUT_DWARF_TYPE_MODIFIER778,26163
#define ASM_OUTPUT_DWARF_ADDR(ASM_OUTPUT_DWARF_ADDR789,26515
#define ASM_OUTPUT_DWARF_ADDR_CONST(ASM_OUTPUT_DWARF_ADDR_CONST797,26745
#define ASM_OUTPUT_DWARF_REF(ASM_OUTPUT_DWARF_REF806,27000
#define ASM_OUTPUT_DWARF_DATA1(ASM_OUTPUT_DWARF_DATA1814,27224
#define ASM_OUTPUT_DWARF_DATA2(ASM_OUTPUT_DWARF_DATA2819,27363
#define ASM_OUTPUT_DWARF_DATA4(ASM_OUTPUT_DWARF_DATA4824,27524
#define ASM_OUTPUT_DWARF_DATA8(ASM_OUTPUT_DWARF_DATA8829,27683
#define ASM_OUTPUT_DWARF_STRING(ASM_OUTPUT_DWARF_STRING845,28218
is_pseudo_reg 852,28406
type_main_variant 861,28647
is_tagged_type 883,29281
dwarf_tag_name 893,29508
dwarf_attr_name 943,31667
dwarf_stack_op_name 1021,35215
dwarf_typemod_name 1038,35621
dwarf_fmt_byte_name 1052,35951
dwarf_fund_type_name 1071,36459
decl_ultimate_origin 1134,38932
block_ultimate_origin 1163,39707
decl_class_context 1192,40387
output_unsigned_leb128 1209,40789
output_signed_leb128 1231,41331
is_body_block 1277,42736
fundamental_type_code 1320,44176
root_type_1 1444,48437
root_type 1469,48993
write_modifier_bytes_1 1482,49318
write_modifier_bytes 1520,50411
type_is_fundamental 1532,50799
equate_decl_number_to_die_number 1581,52107
equate_type_number_to_die_number 1613,53503
output_reg_number 1632,54129
output_mem_loc_descriptor 1664,55226
output_loc_descriptor 1753,58277
output_bound_representation 1787,59100
output_enumeral_list 1870,61878
ceiling 1887,62358
field_type 1899,62759
simple_type_align_in_bits 1918,63242
simple_type_size_in_bits 1931,63725
field_byte_offset 1955,64512
sibling_attribute 2094,70564
location_attribute 2108,71028
data_member_location_attribute 2171,73931
const_value_attribute 2201,75163
location_or_const_value_attribute 2286,78724
name_attribute 2445,85836
fund_type_attribute 2456,86086
mod_fund_type_attribute 2464,86278
user_def_type_attribute 2484,87038
mod_u_d_type_attribute 2495,87335
ordering_attribute 2517,88199
subscript_data_attribute 2529,88582
byte_size_attribute 2631,91964
bit_offset_attribute 2690,93970
bit_size_attribute 2742,95919
element_list_attribute 2759,96522
stmt_list_attribute 2785,97509
low_pc_attribute 2797,97846
high_pc_attribute 2808,98142
body_begin_attribute 2818,98415
body_end_attribute 2828,98696
language_attribute 2839,99030
member_attribute 2847,99241
string_length_attribute 2863,99652
comp_dir_attribute 2879,100235
sf_names_attribute 2887,100426
src_info_attribute 2896,100702
mac_info_attribute 2905,100978
prototyped_attribute 2914,101254
producer_attribute 2926,101561
inline_attribute 2934,101755
containing_type_attribute 2945,101976
abstract_origin_attribute 2956,102296
src_coords_attribute 2981,102855
pure_or_virtual_attribute 2992,103206
name_and_src_coords_attributes 3015,103917
type_attribute 3051,105227
type_tag 3105,107319
dienum_push 3134,108097
dienum_pop 3155,108666
member_declared_type 3161,108726
function_start_label 3174,109039
output_array_type_die 3198,109514
output_set_type_die 3225,110497
output_entry_point_die 3241,110878
output_inlined_enumeration_type_die 3268,111578
output_inlined_structure_type_die 3282,111923
output_inlined_union_type_die 3296,112260
output_enumeration_type_die 3312,112728
output_formal_parameter_die 3348,114082
output_global_subroutine_die 3390,115145
output_global_variable_die 3439,116560
output_label_die 3467,117315
output_lexical_block_die 3506,118400
output_inlined_subroutine_die 3527,118961
output_local_variable_die 3552,119739
output_member_die 3576,120375
output_pointer_type_die 3605,121211
output_reference_type_die 3618,121521
output_ptr_to_mbr_type_die 3632,121842
output_compile_unit_die 3646,122220
output_string_type_die 3697,123670
output_inheritance_die 3712,124011
output_structure_type_die 3739,124753
output_local_subroutine_die 3767,125617
output_subroutine_type_die 3814,126961
output_typedef_die 3830,127369
output_union_type_die 3852,127938
output_unspecified_parameters_die 3880,128794
output_padded_null_die 3906,129784
output_die 3921,130357
end_sibling_chain 3953,131247
output_formal_types 3985,132280
pend_type 4042,134306
type_ok_for_scope 4098,136940
output_pending_types_for_scope 4132,138462
output_type 4168,139395
output_tagged_type_instantiation 4428,147925
output_block 4470,148938
output_decls_for_scope 4563,152330
is_redundant_typedef 4604,153307
output_decl 4622,153836
dwarfout_file_scope_decl 4985,166873
dwarfout_begin_block 5194,174893
dwarfout_end_block 5208,175246
dwarfout_label 5222,175621
dwarfout_begin_function 5241,176161
dwarfout_end_function 5256,176595
dwarfout_end_epilogue 5272,177051
shuffle_filename_entry 5284,177332
generate_new_sfname_entry 5310,177931
lookup_filename 5357,180247
generate_srcinfo_entry 5408,181879
dwarfout_line 5424,182435
generate_macinfo_entry 5481,184352
dwarfout_start_new_source_file 5496,184787
dwarfout_resume_previous_source_file 5512,185291
dwarfout_define 5528,185797
dwarfout_undef 5551,186464
dwarfout_init 5565,186821
dwarfout_finish 5755,193426

emit-rtl.c,4670
char *opcode_name[65,1959
enum machine_mode byte_mode;76,2060
enum machine_mode word_mode;77,2131
enum machine_mode ptr_mode;78,2202
int reg_rtx_no 83,2426
static int label_num 88,2598
static int first_label_num;92,2674
static int last_label_num;98,2872
static int base_label_num;103,3050
static int no_line_numbers;107,3147
rtx pc_rtx;114,3434
rtx cc0_rtx;115,3459
rtx cc1_rtx;116,3486
rtx const0_rtx;117,3542
rtx const1_rtx;118,3580
rtx const2_rtx;119,3618
rtx constm1_rtx;120,3656
rtx const_true_rtx;121,3695
rtx const_tiny_rtx[127,3939
REAL_VALUE_TYPE dconst0;129,3987
REAL_VALUE_TYPE dconst1;130,4012
REAL_VALUE_TYPE dconst2;131,4037
REAL_VALUE_TYPE dconstm1;132,4062
rtx stack_pointer_rtx;152,5060
rtx frame_pointer_rtx;153,5123
rtx hard_frame_pointer_rtx;154,5186
rtx arg_pointer_rtx;155,5258
rtx struct_value_rtx;156,5317
rtx struct_value_incoming_rtx;157,5378
rtx static_chain_rtx;158,5456
rtx static_chain_incoming_rtx;159,5517
rtx pic_offset_table_rtx;160,5595
rtx return_address_pointer_rtx;164,5776
rtx virtual_incoming_args_rtx;166,5857
rtx virtual_stack_vars_rtx;167,5935
rtx virtual_stack_dynamic_rtx;168,6007
rtx virtual_outgoing_args_rtx;169,6085
#define MAX_SAVED_CONST_INT 176,6349
static rtx const_int_rtx[178,6381
static rtx first_insn 186,6734
static rtx last_insn 187,6764
tree sequence_rtl_expr 193,6965
static int cur_insn_uid 198,7079
static int last_linenum 203,7231
static char *last_filename 204,7260
char *regno_pointer_flag;212,7589
int regno_pointer_flag_length;213,7615
char *regno_pointer_align;218,7827
rtx *regno_reg_rtx;223,7979
struct sequence_stack *sequence_stack;230,8219
#define SEQUENCE_RESULT_SIZE 247,9002
static struct sequence_stack *sequence_element_free_list;249,9034
static rtx sequence_result[250,9092
static rtx free_insn;253,9217
extern int rtx_equal_function_value_matters;255,9240
extern char *emit_filename;259,9386
extern int emit_lineno;260,9414
gen_rtx VPROTO(290,10379
gen_rtvec VPROTO(419,14108
gen_rtvec_v 447,14522
gen_rtvec_vv 466,14842
gen_reg_rtx 488,15303
mark_user_reg 556,17592
mark_reg_pointer 574,17946
max_reg_num 587,18194
max_label_num 595,18320
get_first_label_num 605,18522
gen_lowpart_common 622,19084
gen_realpart 878,28194
gen_imagpart 894,28599
subreg_realpart_p 912,29102
gen_lowpart 929,29559
gen_highpart 971,30762
subreg_lowpart_p 1052,33405
operand_subword 1088,34599
operand_subword_force 1347,42996
reverse_comparison 1371,43482
change_address 1406,44269
gen_label_rtx 1443,45201
gen_inline_header_rtx 1462,45648
set_new_first_and_last_insn 1500,46987
set_new_first_and_last_label_num 1519,47395
save_emit_status 1531,47688
restore_emit_status 1553,48372
unshare_all_rtl 1587,49362
copy_rtx_if_shared 1614,50263
reset_used_flags 1739,53242
make_safe_from 1803,54399
get_insns 1841,55215
get_last_insn 1849,55336
set_last_insn 1857,55436
get_last_insn_anywhere 1868,55622
get_max_uid 1882,55927
next_insn 1891,56069
previous_insn 1909,56405
next_nonnote_insn 1927,56787
prev_nonnote_insn 1944,57080
next_real_insn 1962,57400
prev_real_insn 1981,57785
next_active_insn 2000,58211
prev_active_insn 2023,58766
next_label 2044,59216
prev_label 2060,59474
link_cc0_insns 2078,59796
next_cc0_user 2101,60545
prev_cc0_setter 2124,61095
try_split 2151,61802
make_insn_raw 2229,64151
make_jump_insn_raw 2256,64724
make_call_insn_raw 2276,65095
add_insn 2297,65539
add_insn_after 2318,66002
add_insn_before 2366,67171
delete_insns_since 2412,68199
reorder_insns 2433,68772
find_line_note 2460,69478
reorder_insns_with_line_notes 2479,69900
emit_insn_before 2507,70587
emit_jump_insn_before 2537,71224
emit_call_insn_before 2557,71644
emit_barrier_before 2578,72062
emit_note_before 2592,72319
emit_insn_after 2609,72684
emit_insn_after_with_line_notes 2640,73342
emit_jump_insn_after 2662,73910
emit_barrier_after 2682,74286
emit_label_after 2696,74526
emit_note_after 2714,74929
emit_line_note_after 2729,75261
emit_insn 2758,75880
emit_insns 2788,76423
emit_insns_before 2808,76752
emit_insns_after 2829,77127
emit_jump_insn 2862,77768
emit_call_insn 2879,78119
emit_label 2896,78458
emit_barrier 2914,78855
emit_line_note 2928,79198
emit_note 2956,79764
emit_line_note_force 2988,80363
force_next_line_note 3000,80637
classify_insn 3009,80836
emit 3047,81767
start_sequence 3072,82298
start_sequence_for_rtl_expr 3100,82916
push_to_sequence 3112,83131
push_topmost_sequence 3129,83438
pop_topmost_sequence 3147,83839
end_sequence 3167,84290
in_sequence_p 3183,84626
gen_sequence 3195,84881
init_emit 3247,86350
init_emit_once 3328,89151

enquire.c,8803
#define VERSION 5,120
#define FILENAME 300,13880
#define FILENAME 303,13995
#define FILENAME 305,14027
#define PASS 313,14221
#define PASS0 314,14236
#define PASS1 315,14252
#define D_CHAR_BIT 319,14328
#define D_CHAR_MAX 320,14382
#define D_CHAR_MIN 321,14416
#define D_SCHAR_MAX 322,14450
#define D_SCHAR_MIN 323,14492
#define D_UCHAR_MAX 324,14534
#define D_INT_MAX 326,14601
#define D_INT_MIN 327,14632
#define D_UINT_MAX 328,14663
#define D_FLT_ROUNDS 330,14727
#define D_FLT_RADIX 331,14820
#define D_MANT_DIG 332,14875
#define D_DIG 333,14955
#define D_MIN_EXP 334,15017
#define D_MIN_10_EXP 335,15097
#define D_MAX_EXP 336,15169
#define D_MAX_10_EXP 337,15252
#define D_MAX 338,15327
#define D_EPSILON 339,15354
#define D_MIN 340,15433
#define Procedure 344,15555
#define Procedure 346,15583
#define STDC355,15824
#define ARGS(ARGS371,16313
#define NOARGS 372,16331
#define Volatile 373,16353
#define Long_double 374,16379
#define stdc 375,16411
#define U 376,16426
#define ARGS(ARGS380,16466
#define NOARGS 381,16485
#define Volatile 382,16503
#define Long_double 383,16527
#define stdc 384,16554
#define U 385,16569
#define __GCC_FLOAT_NOT_NEEDED 394,16867
#define jmp_buf 404,17050
#define SYS_FLOAT_H_WRAP 427,17425
#define Vprintf 434,17526
#define Unexpected(Unexpected435,17556
#define fabs(fabs436,17615
int false NOARGS;444,17724
int maximum_int NOARGS;457,17994
int cprop NOARGS;458,18018
int basic NOARGS;459,18036
Procedure sprop NOARGS;460,18054
Procedure iprop NOARGS;461,18078
Procedure lprop NOARGS;462,18102
Procedure usprop NOARGS;463,18126
Procedure uiprop NOARGS;464,18151
Procedure ulprop NOARGS;465,18176
Procedure check_defines NOARGS;478,18685
	int lab=500,19567
	int setjmp(501,19579
	Procedure signal(502,19620
	jmp_buf lab;505,19669
	Procedure overflow(506,19683
int V=513,19821
char co[518,19974
char co[4], oc[518,19974
int bits_per_byte;520,20034
int flt_rounds;521,20108
int flt_radix;522,20168
#define ROUND_BITS	533,20568
#define TO_NEAREST	534,20592
#define TO_ZERO	535,20616
#define TO_MINUS_INF	536,20638
#define TO_PLUS_INF	537,20664
#define EXT_BITS	540,20779
#define ROUND_EXTENDED	541,20801
#define ROUND_SINGLE	542,20829
#define ROUND_DOUBLE	543,20855
#define EXE_INEX1 546,20902
#define EXE_INEX2 547,20927
#define EXE_DZ	548,20952
#define EXE_UNFL 549,20976
#define EXE_OVFL 550,21001
#define EXE_OPERR 551,21026
#define EXE_SNAN 552,21051
#define EXE_BSUN 553,21076
printmode(557,21180
int setmode(592,22379
int setmode(609,22683
Procedure farewell(615,22793
Procedure croak(626,23165
char *xmalloc(632,23395
int maxint;641,23573
int maximum_int(643,23586
int main(662,23973
Procedure eek_a_bug(796,26957
Procedure describe(802,27112
Procedure i_define(809,27300
Procedure u_define(837,28220
Procedure f_define(853,28719
int floor_log(896,30096
int ceil_log(903,30238
int exponent(909,30344
char *fake_f_rep(944,31155
char *f_rep(954,31531
Procedure bitpattern(974,32040
#define Order(Order988,32309
Procedure endian(994,32555
Procedure missing(1017,33081
Procedure fmissing(1022,33191
int false(1028,33334
#define Promoted(Promoted1030,33361
#define is_signed(is_signed1031,33400
#define sign_of(sign_of1032,33439
#define Signed 1033,33484
#define Unsigned 1034,33501
#define sgn(sgn1035,33520
#define showtype(showtype1037,33569
char *type_of(1039,33673
char *ftype_of(1057,34131
Procedure typerr(1072,34415
Procedure ftyperr(1080,34669
int promotions(1085,34853
#define checktype(checktype1112,35636
#define fchecktype(fchecktype1114,35755
Procedure check_defines(1116,35846
#define SCHAR_MAX	1360,40896
#define SCHAR_MIN	1363,40948
#define UCHAR_MAX	1366,41000
#define CHAR_BIT	1371,41072
#define CHAR_MAX	1374,41122
#define CHAR_MIN	1377,41172
#define SCHAR_MAX	1380,41223
#define SCHAR_MIN	1383,41275
#define UCHAR_MAX	1386,41327
int cprop(1389,41362
int basic(1523,44665
#define alignment(alignment1570,46112
extern jmp_buf lab;1650,47822
extern int V,1651,47842
extern int V, L,1651,47842
extern int V, L, F,1651,47842
extern int V, L, F, bugs,1651,47842
extern int V, L, F, bugs, bits_per_byte;1651,47842
extern char co[1652,47883
extern char co[], oc[1652,47883
#define Number	1726,49346
#define THING	1727,49367
#define Thing	1728,49389
#define thing	1729,49411
#define Fname	1730,49433
#define FPROP	1731,49453
#define Store	1732,49473
#define Sum	1733,49494
#define Diff	1734,49511
#define Mul	1735,49530
#define Div	1736,49547
#define ZERO	1737,49564
#define HALF	1738,49581
#define ONE	1739,49598
#define TWO	1740,49614
#define THREE	1741,49630
#define FOUR	1742,49648
#define Self	1743,49665
#define F_check	1744,49684
#define MARK	1745,49707
#define Validate(Validate1747,49738
#define EPROP	1750,49817
#define Integer	1752,49839
#define INT	1753,49861
#define IPROP	1754,49881
#define Iname	1755,49901
#define OK_UI 1757,49936
#define IMARK	1759,49959
#define UPROP	1761,49977
#define Uname	1762,49998
#define I_MAX	1765,50037
#define I_MIN	1768,50084
#define U_MAX	1771,50132
#define F_RADIX	1775,50182
#define F_MANT_DIG	1778,50236
#define F_DIG	1781,50290
#define F_ROUNDS	1784,50338
#define F_EPSILON	1787,50392
#define F_MIN_EXP	1790,50448
#define F_MIN	1793,50500
#define F_MIN_10_EXP	1796,50552
#define F_MAX_EXP	1799,50614
#define F_MAX	1802,50666
#define F_MAX_10_EXP	1805,50718
#define Number	1812,50796
#define THING	1813,50818
#define Thing	1814,50841
#define thing	1815,50864
#define Fname	1816,50887
#define FPROP	1817,50907
#define Store	1818,50927
#define Sum	1819,50948
#define Diff	1820,50965
#define Mul	1821,50984
#define Div	1822,51001
#define ZERO	1823,51018
#define HALF	1824,51035
#define ONE	1825,51052
#define TWO	1826,51068
#define THREE	1827,51084
#define FOUR	1828,51102
#define Self	1829,51119
#define F_check	1830,51138
#define MARK	1831,51161
#define Validate(Validate1833,51191
#define EPROP	1836,51270
#define Integer	1838,51292
#define INT	1839,51312
#define IPROP	1840,51330
#define Iname	1841,51350
#define OK_UI	1842,51370
#define IMARK	1843,51424
#define UPROP	1845,51442
#define Uname	1846,51463
#define I_MAX	1849,51500
#define I_MIN	1852,51545
#define U_MAX	1855,51591
#define F_MANT_DIG	1859,51643
#define F_DIG	1862,51697
#define F_EPSILON	1865,51746
#define F_MIN_EXP	1868,51802
#define F_MIN	1871,51854
#define F_MIN_10_EXP	1874,51906
#define F_MAX_EXP	1877,51968
#define F_MAX	1880,52020
#define F_MAX_10_EXP	1883,52072
#define Number	1891,52162
#define ZERO	1893,52190
#define HALF	1894,52208
#define ONE	1895,52226
#define TWO	1896,52243
#define THREE	1897,52260
#define FOUR	1898,52279
#define THING	1901,52305
#define Thing	1902,52333
#define thing	1903,52361
#define Fname	1904,52389
#define FPROP	1905,52410
#define Store	1906,52431
#define Sum	1907,52453
#define Diff	1908,52471
#define Mul	1909,52491
#define Div	1910,52509
#define Self	1911,52527
#define F_check	1912,52547
#define MARK	1913,52571
#define Validate(Validate1915,52602
#define EPROP	1918,52682
#define Integer	1920,52705
#define INT	1921,52726
#define IPROP	1922,52745
#define Iname	1923,52765
#define OK_UI	1925,52800
#define IMARK	1927,52823
#define UPROP	1929,52842
#define Uname	1930,52863
#define I_MAX	1933,52902
#define I_MIN	1936,52948
#define U_MAX	1939,52995
#define F_MANT_DIG	1943,53048
#define F_DIG	1946,53104
#define F_EPSILON	1949,53155
#define F_MIN_EXP	1952,53213
#define F_MIN	1955,53267
#define F_MIN_10_EXP	1958,53321
#define F_MAX_EXP	1961,53385
#define F_MAX	1964,53439
#define F_MAX_10_EXP	1967,53493
#define UNDEFINED 1972,53558
#define I_MAX	1975,53596
#define I_MIN	1978,53659
#define U_MAX	1981,53722
#define F_RADIX	1985,53788
#define F_MANT_DIG	1988,53841
#define F_DIG	1991,53891
#define F_ROUNDS	1994,53940
#define F_EPSILON	1997,53992
#define F_MIN_EXP	2000,54056
#define F_MIN	2003,54105
#define F_MIN_10_EXP	2006,54169
#define F_MAX_EXP	2009,54225
#define F_MAX	2012,54274
#define F_MAX_10_EXP	2015,54338
#define Validate(Validate2019,54392
Procedure IPROP(2024,54459
Procedure UPROP 2104,56519
#define ARGS1(ARGS12145,57553
#define ARGS2(ARGS22146,57587
#define ARGS1(ARGS12148,57646
#define ARGS2(ARGS22149,57683
Procedure Store ARGS2(2152,57750
Number Sum ARGS2(2153,57806
Number Diff ARGS2(2154,57886
Number Mul ARGS2(2155,57966
Number Div ARGS2(2156,58046
Number Self ARGS1(2157,58126
Procedure F_check(2161,58264
Procedure Validate(2252,61094
int FPROP(2284,62043
Procedure EPROP(2759,76950
int FPROP(2827,78934
Procedure EPROP(2831,79027
#define PASS 2841,79198
#define PASS3 2842,79213
#define PASS 2847,79263
#define PASS2 2848,79278

except.c,2467
int exceptions_via_longjmp 412,21088
int asynchronous_exceptions 416,21175
int protect_cleanup_actions_with_terminate 421,21306
rtx exception_handler_labels;426,21483
int throw_used;433,21659
rtx current_function_dhc;439,21825
rtx current_function_dcc;445,22001
static struct eh_stack ehstack;457,22539
static struct eh_queue ehqueue;470,23065
rtx catch_clauses;475,23224
static tree protect_list;481,23421
struct label_node *caught_return_label_stack 491,23800
struct label_node *false_label_stack 495,23910
rtx eh_saved_pc_rtx;499,24009
tree eh_saved_pc;500,24030
push_label_entry 510,24294
pop_label_entry 529,24687
top_label_entry 549,25002
copy_eh_entry 561,25222
push_eh_entry 575,25525
pop_eh_entry 593,26016
enqueue_eh_entry 610,26321
dequeue_eh_entry 633,26753
doing_eh 659,27350
eh_outer_context 679,27728
add_partial_entry 701,28308
get_dynamic_handler_chain 733,29462
get_dynamic_cleanup_chain 771,30654
jumpif_rtx 788,31105
jumpifnot_rtx 799,31364
start_dynamic_cleanup 819,32109
start_dynamic_handler 870,33513
expand_eh_region_start_tree 945,35986
expand_eh_region_start_for_decl 1004,37653
expand_eh_region_start 1050,39031
expand_eh_region_end 1065,39446
emit_throw 1132,41490
expand_internal_throw_indirect 1158,42093
expand_internal_throw 1171,42415
expand_leftover_cleanups 1181,42693
expand_start_try_stmts 1234,44076
expand_start_all_catch 1250,44490
expand_end_all_catch 1355,47692
end_protect_partials 1400,49071
protect_with_terminate 1413,49338
static int *eh_table;1460,50821
static int eh_table_size;1461,50843
static int eh_table_max_size;1462,50869
add_eh_table_entry 1473,51260
exception_table_p 1505,51926
register_exception_table_p 1516,52068
output_exception_table_entry 1532,52395
output_exception_table 1557,53048
register_exception_table 1588,53854
start_eh_unwinder 1604,54382
end_eh_unwinder 1628,54799
emit_unwinder 1734,57654
find_exception_handler_labels 1789,59140
check_exception_handler_labels 1858,61185
init_eh 1925,63038
init_eh_for_function 1941,63501
save_eh_status 1959,63908
restore_eh_status 1981,64420
can_throw 2003,65011
scan_region 2039,66208
exception_optimize 2135,68568
expand_builtin_unwind_init 2166,69453
expand_builtin_extract_return_addr 2181,69884
expand_builtin_frob_return_addr 2193,70255
expand_builtin_set_return_addr_reg 2208,70677
eh_regs 2234,71572
expand_builtin_eh_stub 2281,72608
expand_builtin_set_eh_regs 2303,73071

explow.c,1039
plus_constant_wide 41,1292
plus_constant_for_output_wide 145,3967
eliminate_constant_term 167,4573
find_next_ref 207,5670
expr_size 250,6562
break_out_memory_refs 280,7543
convert_memory_address 309,8418
copy_all_regs 377,10713
memory_address 407,11549
memory_address_noforce 537,15621
validize_mem 554,15976
stabilize 571,16528
copy_to_reg 600,17275
copy_addr_to_reg 620,17694
copy_to_mode_reg 630,17870
force_reg 657,18636
force_not_mem 689,19444
copy_to_suggested_reg 705,19809
promote_mode 727,20352
adjust_stack 770,21270
anti_adjust_stack 796,21843
round_push 822,22419
emit_stack_save 859,23588
emit_stack_restore 951,25819
allocate_dynamic_stack_space 1014,27318
#define MUST_ALIGN 1046,28767
#define MUST_ALIGN 1048,28794
emit_stack_probe 1181,33565
#define STACK_GROW_OP 1201,34214
#define STACK_GROW_OP 1203,34248
probe_stack_range 1207,34288
#define CMP_OPCODE 1282,36719
#define CMP_OPCODE 1286,36844
hard_function_value 1316,37748
hard_libcall_value 1348,38603
rtx_to_tree_code 1360,38904

expmed.c,1939
#define CEIL(CEIL45,1596
static int sdiv_pow2_cheap,52,1866
static int sdiv_pow2_cheap, smod_pow2_cheap;52,1866
#define SLOW_UNALIGNED_ACCESS 55,1942
#define MAX_BITS_PER_WORD 63,2210
static int add_cost,68,2370
static int add_cost, negate_cost,68,2370
static int add_cost, negate_cost, zero_cost;68,2370
static int shift_cost[69,2415
static int shiftadd_cost[70,2457
static int shiftsub_cost[71,2502
static int mul_cost[72,2547
static int div_cost[73,2587
static int mul_widen_cost[74,2627
static int mul_highpart_cost[75,2673
init_expmed 78,2728
negate_rtx 185,6107
store_bit_field 213,7117
store_fixed_bit_field 549,19039
store_split_bit_field 720,24471
extract_bit_field 873,29552
extract_fixed_bit_field 1381,45932
mask_rtx 1528,50943
lshift_value 1567,51968
extract_split_bit_field 1603,52978
expand_inc 1704,55961
expand_dec 1717,56225
expand_shift 1735,56796
enum alg_code alg_code1868,60961
enum alg_code { alg_zero,1868,60961
enum alg_code { alg_zero, alg_m,1868,60961
enum alg_code { alg_zero, alg_m, alg_shift,1868,60961
		  alg_add_t_m2,1869,61005
		  alg_add_t_m2, alg_sub_t_m2,1869,61005
		  alg_add_factor,1870,61037
		  alg_add_factor, alg_sub_factor,1870,61037
		  alg_add_t2_m,1871,61073
		  alg_add_t2_m, alg_sub_t2_m,1871,61073
		  alg_add,1872,61105
		  alg_add, alg_subtract,1872,61105
		  alg_add, alg_subtract, alg_factor,1872,61105
		  alg_add, alg_subtract, alg_factor, alg_shiftop 1872,61105
struct algorithmalgorithm1893,61911
synth_mult 1912,62601
expand_mult 2150,69124
ceil_log2 2358,75588
choose_multiplier 2382,76434
invert_mod2n 2478,79098
expand_mult_highpart_adjust 2515,80128
expand_mult_highpart 2550,81261
#define EXACT_POWER_OF_2_OR_ZERO_P(EXACT_POWER_OF_2_OR_ZERO_P2700,86562
expand_divmod 2703,86630
make_tree 3740,120568
expand_mult_add 3838,123227
expand_and 3861,123921
emit_store_flag 3902,125176
emit_store_flag_force 4292,137169

expr.c,4528
#define CEIL(CEIL49,1354
#define PUSH_ARGS_REVERSED	60,1699
#define STACK_PUSH_CODE 67,1822
#define STACK_PUSH_CODE 69,1860
#define STACK_BYTES 74,1967
int cse_not_expected;82,2375
int do_preexpand_calls 87,2564
int pending_stack_adjust;91,2734
int inhibit_defer_pop;97,2999
int target_temp_slot_level;103,3252
static rtx saveregs_value;108,3444
static rtx apply_args_value;111,3515
static int in_check_memory_usage;116,3710
struct move_by_piecesmove_by_pieces120,3834
struct clear_by_piecesclear_by_pieces140,4168
extern int local_vars_size;157,4565
extern int stack_depth;158,4593
extern int max_stack_depth;159,4617
extern struct obstack permanent_obstack;160,4645
extern rtx arg_pointer_save_area;161,4686
static char direct_load[222,7630
static char direct_store[223,7674
#define MOVE_RATIO 230,7966
#define MOVE_RATIO 234,8089
enum insn_code movstr_optab[239,8199
enum insn_code clrstr_optab[242,8322
#define SLOW_UNALIGNED_ACCESS 247,8480
#define INCOMING_REGNO(INCOMING_REGNO252,8629
#define OUTGOING_REGNO(OUTGOING_REGNO255,8693
enum bytecode_opcode mode_to_const_map[259,8805
enum bytecode_opcode mode_to_load_map[260,8863
enum bytecode_opcode mode_to_store_map[261,8920
bc_init_mode_to_opcode_maps 267,9070
#define DEF_MODEMAP(DEF_MODEMAP276,9288
init_expr_once 289,9659
init_expr 355,11486
save_expr_status 370,11778
restore_expr_status 393,12369
static rtx pending_chain;406,12742
enqueue_insn 416,13105
protect_from_queue 440,14046
queued_subexp_p 523,16632
emit_queue 546,17049
init_queue 557,17230
convert_move 569,17539
convert_to_mode 1263,34679
convert_modes 1285,35362
move_by_pieces 1381,38698
move_by_pieces_ninsns 1494,41937
move_by_pieces_1 1535,43047
emit_block_move 1597,44881
move_block_to_reg 1700,47806
move_block_from_reg 1743,48768
emit_group_load 1814,50521
emit_group_store 1870,52104
use_reg 1913,53068
use_regs 1929,53476
use_group_regs 1948,53963
clear_by_pieces 1972,54668
clear_by_pieces_1 2060,57145
clear_storage 2103,58303
emit_move_insn 2207,61257
emit_move_insn_1 2247,62339
push_block 2374,66463
gen_push_operand 2414,67590
get_push_address 2423,67792
emit_push_insn 2467,69421
expand_assignment 2876,82150
store_expr 3151,91260
is_zeros_p 3469,102403
mostly_zeros_p 3508,103273
store_constructor_field 3549,104604
store_constructor 3581,105629
store_field 4117,122409
get_inner_reference 4308,129521
get_memory_usage_from_modifier 4461,134343
force_operand 4494,135212
save_noncopied_parts 4569,137849
init_noncopied_parts 4601,138854
safe_from_p 4625,139520
fixed_type_p 4793,144006
var_rtx 4809,144406
expand_expr 4859,146262
bc_expand_expr 7384,230756
get_pointer_alignment 7904,243303
string_constant 7968,244881
c_strlen 8013,246044
expand_builtin_return_addr 8072,247986
expand_builtin_setjmp 8135,250021
#define CALLED_AS_BUILT_IN(CALLED_AS_BUILT_IN8298,255090
expand_builtin 8302,255209
static enum machine_mode apply_args_mode[9320,288000
static enum machine_mode apply_result_mode[9327,288397
static int apply_args_reg_offset[9333,288695
apply_args_register_offset 9340,288922
apply_args_size 9357,289334
apply_result_size 9421,291132
result_vector 9482,292881
expand_builtin_apply_args 9514,293923
expand_builtin_apply 9579,295884
expand_builtin_return 9742,301275
expand_increment 9796,302695
preexpand_calls 10006,310303
init_pending_stack_adjust 10078,312269
clear_pending_stack_adjust 10087,312453
do_pending_stack_adjust 10101,312808
jumpifnot 10118,313210
jumpif 10128,313389
do_jump 10148,314012
do_jump_by_parts_greater 10515,325995
do_jump_by_parts_greater_rtx 10581,328142
do_jump_by_parts_equality 10643,330033
do_jump_by_parts_equality_rtx 10680,331213
do_jump_for_compare 10742,333098
compare 10816,335329
compare_from_rtx 10871,337253
do_store_flag 10953,340090
do_tablejump 11226,349216
bc_load_memory 11297,351969
bc_store_memory 11337,352963
bc_allocate_local 11386,354415
bc_allocate_variable_array 11419,355172
bc_load_externaddr 11441,355718
bc_load_externaddr_id 11457,356013
bc_load_localaddr 11476,356361
bc_load_parmaddr 11487,356602
bc_canonicalize_array_ref 11498,356807
bc_expand_component_address 11535,357859
bc_push_offset_and_size 11584,359098
bc_expand_address 11599,359527
bc_runtime_type_code 11720,362541
bc_gen_constr_label 11754,363027
bc_expand_constructor 11773,363621
bc_store_field 11926,368101
bc_store_bit_field 11968,369024
bc_load_bit_field 11982,369275
bc_adjust_stack 11999,369793

final.c,2657
#define	N_SLINE	87,2968
#define	N_SOL 92,3054
#define INT_TYPE_SIZE 96,3103
#define LONG_TYPE_SIZE 100,3170
#define CC_STATUS_INIT106,3371
#define ASM_COMMENT_START 111,3470
#define IS_ASM_LOGICAL_LINE_SEPARATOR(IS_ASM_LOGICAL_LINE_SEPARATOR116,3621
int leaf_function;122,3890
static rtx debug_insn 125,3957
static int last_linenum;128,4018
static int high_block_linenum;131,4089
static int high_function_linenum;134,4151
static char *last_filename;137,4216
static int count_basic_blocks;141,4326
extern int count_instrumented_arcs;144,4423
static rtx this_is_asm_operands;149,4662
static int insn_noperands;152,4764
static rtx last_ignored_compare 156,4827
static int new_block 160,4934
int next_block_index;176,5737
static int insn_counter 181,5873
CC_STATUS cc_status;188,6095
CC_STATUS cc_prev_status;193,6210
char regs_ever_live[205,6640
int frame_pointer_needed;211,6882
int profile_label_no;215,6974
static int max_block_depth;219,7048
static int *pending_blocks;226,7319
static int block_depth;230,7411
static int app_on;234,7508
rtx final_sequence;239,7626
static int dialect_number;244,7735
static char *line_note_exists;249,7844
struct bb_list bb_list253,7939
static struct bb_list *bb_head	260,8190
static struct bb_list **bb_tail 261,8258
static int bb_file_label_num	262,8333
static int bb_func_label_num	263,8400
struct bb_str bb_str267,8548
static struct bb_str *sbb_head	276,8761
static struct bb_str **sbb_tail	277,8826
static int sbb_label_num	278,8902
init_final 301,9597
end_final 319,9977
app_enable 570,17534
app_disable 583,17752
dbr_sequence_length 598,18065
static short *insn_lengths;613,18406
int *insn_addresses;614,18434
int insn_current_address;617,18528
init_insn_lengths 622,18622
get_attr_length 631,18817
#define FIRST_INSN_ADDRESS 705,20622
shorten_branches 709,20664
asm_insn_count 911,26709
final_start_function 942,27566
profile_after_prologue 1043,30648
profile_function 1060,30999
final_end_function 1122,32851
add_bb 1185,34428
add_bb_string 1218,35246
final 1275,36697
final_scan_insn 1358,39028
output_source_line 2232,63892
alter_subreg 2298,65761
walk_alter_subreg 2328,66545
alter_cond 2365,67361
output_operand_lossage 2519,69775
output_asm_name 2547,70742
output_asm_insn 2569,71315
output_asm_label 2718,74956
output_operand 2744,75781
output_address 2765,76305
output_addr_const 2777,76574
asm_fprintf VPROTO(2894,79702
split_double 3050,82456
leaf_function_p 3172,85464
static char permitted_reg_in_leaf_functions[3212,86698
only_leaf_regs_used 3218,86859
leaf_renumber_regs 3235,87182
leaf_renumber_regs_insn 3255,87862

fix-header.c,2944
#define O_RDONLY 82,3248
#define const 88,3335
sstring buf;91,3371
int verbose 93,3385
int partial_count 94,3402
int warnings 95,3425
int missing_extern_C_count 102,3630
static char *files_to_ignore[115,4019
char *inf_buffer;122,4102
char *inf_limit;123,4120
char *inf_ptr;124,4137
enum special_filespecial_file128,4203
  no_special,130,4223
  errno_h,131,4237
  stdio_h,132,4248
  stdlib_h,133,4259
  sys_stat_h134,4271
typedef const char *namelist;namelist140,4403
typedef int symbol_flags;symbol_flags143,4497
#define ANSI_SYMBOL 146,4586
#define POSIX1_SYMBOL 157,5036
#define POSIX2_SYMBOL 158,5060
#define POSIX1_SYMBOL 160,5090
#define POSIX2_SYMBOL 161,5114
#define XOPEN_SYMBOL 166,5231
#define XOPEN_EXTENDED_SYMBOL 168,5315
#define XOPEN_SYMBOL 170,5354
#define XOPEN_EXTENDED_SYMBOL 171,5377
#define MACRO_SYMBOL 175,5469
struct symbol_list symbol_list177,5495
#define SYMBOL_TABLE_SIZE 182,5560
struct symbol_list symbol_table[183,5589
int cur_symbol_table_size;184,5641
add_symbols 187,5674
struct std_include_entry std_include_entry199,6052
const char NONE[205,6143
const char CONTINUED[208,6270
struct std_include_entry *include_entry;210,6300
struct std_include_entry std_include_table 212,6342
enum special_file special_file_handling 342,11716
int seen_S_IFBLK 346,11892
int seen_S_IFCHR 347,11933
int seen_S_IFDIR 348,11974
int seen_S_IFIFO 349,12015
int seen_S_IFLNK 350,12056
int seen_S_IFREG 351,12097
int seen_errno 353,12194
int seen_EXIT_FAILURE 355,12271
xfree 360,12385
fancy_abort 371,12599
#define obstack_chunk_alloc 376,12632
#define obstack_chunk_free 377,12668
struct obstack scan_file_obstack;378,12701
lookup_std_proto 383,12811
char *inc_filename;404,13254
int inc_filename_length;405,13274
char *progname 406,13299
FILE *outf;407,13330
sstring line;408,13342
int lbrac_line,410,13357
int lbrac_line, rbrac_line;410,13357
int required_unseen_count 412,13386
int required_other 413,13417
write_lbrac 416,13448
struct partial_protopartial_proto435,13974
struct partial_proto *partial_proto_list 444,14141
struct partial_proto required_dummy_proto,446,14191
struct partial_proto required_dummy_proto, seen_dummy_proto;446,14191
#define REQUIRED(REQUIRED447,14252
#define SET_REQUIRED(SET_REQUIRED448,14314
#define SET_SEEN(SET_SEEN449,14379
#define SEEN(SEEN450,14436
recognized_macro 453,14496
recognized_extern 499,16048
recognized_function 522,16750
check_macro_names 597,18856
read_scan_file 610,19080
write_rbrac 731,22755
xstrdup 860,26595
#define INF_GET(INF_GET875,26856
#define INF_UNGET(INF_UNGET876,26933
inf_skip_spaces 879,26983
inf_read_upto 918,27548
inf_scan_ident 936,27809
check_protection 962,28337
main 1067,30486
cpp_file_line_for_message 1310,36028
cpp_print_containing_files 1324,36326
void cpp_message 1331,36455
fatal 1350,36866
cpp_fatal 1360,37053
cpp_pfatal_with_name 1368,37157

floatlib.c,857
#define D_PHANTOM_BIT 57,2432
#define EXCESS	58,2467
#define SIGNBIT	59,2487
#define HIDDEN	60,2515
#define SIGN(SIGN61,2541
#define EXP(EXP62,2575
#define MANT(MANT63,2614
#define PACK(PACK64,2660
#define EXCESSD	67,2767
#define HIDDEND	68,2789
#define EXPD(EXPD69,2816
#define SIGND(SIGND70,2864
#define MANTD(MANTD71,2907
union double_longdouble_long75,3068
union float_longfloat_long91,3269
   struct _ieee _ieee97,3321
   union _doubleu _doubleu111,3617
__addsf3 130,3892
__subsf3 220,5322
__cmpsf2 241,5638
__mulsf3 263,5959
__divsf3 313,6884
__floatsidf 380,8015
__negsf2 421,8590
__negdf2 436,8762
__extendsfdf2 452,8979
__truncdfsf2 478,9427
__cmpdf2 516,10054
__fixdfsi 542,10512
long __fixunsdfsi 571,11008
__adddf3 602,11613
__subdf3 610,11721
__muldf3 618,11829
__dcmp 666,13110
__divdf3 689,13445

flow.c,1668
#define obstack_chunk_alloc 123,5106
#define obstack_chunk_free 124,5142
extern struct obstack *function_obstack;131,5418
extern rtx forced_labels;134,5510
static int max_uid_for_flow;142,5753
#define BLOCK_NUM(BLOCK_NUM144,5783
static int *uid_block_number;150,6000
#define INSN_VOLATILE(INSN_VOLATILE154,6106
static char *uid_volatile;155,6164
int n_basic_blocks;159,6248
int max_regno;163,6334
int max_scratch;168,6435
static int num_scratch;172,6507
reg_info *reg_n_info;176,6589
static rtx *reg_next_use;182,6835
int regset_bytes;187,6947
int regset_size;188,6965
rtx *basic_block_head;193,7092
rtx *basic_block_end;198,7224
regset *basic_block_live_at_start;204,7400
regset regs_live_at_setjmp;208,7510
rtx regs_may_share;214,7743
static char *basic_block_drops_in;219,7895
static short *basic_block_loop_depth;224,8043
static char *block_live_static;229,8198
static int loop_depth;234,8380
static int cc0_live;238,8482
static rtx last_mem_set;243,8645
static HARD_REG_SET elim_reg_set;248,8780
flow_analysis 278,10076
find_basic_blocks 369,12750
mark_label_ref 749,25376
flow_delete_insn 805,26821
life_analysis 823,27485
allocate_for_life_analysis 1222,41223
init_regset_vector 1251,42232
free_regset_vector 1269,42668
propagate_block 1299,43676
insn_dead_p 1618,53751
libcall_dead_p 1721,56942
regno_uninitialized 1777,58402
regno_clobbered_at_setjmp 1793,58829
mark_set_regs 1814,59478
mark_set_1 1840,60072
find_auto_inc 2044,66859
mark_used_regs 2239,73306
try_pre_increment_1 2586,82731
try_pre_increment 2631,84257
find_use_as_address 2719,86816
dump_flow_info 2781,88321
print_rtl_with_bb 2863,90975

fold-const.c,1711
static jmp_buf float_error;52,1954
#define BRANCH_COST 97,4187
#define overflow_sum_sign(overflow_sum_sign105,4597
#define LOWPART(LOWPART111,4904
#define HIGHPART(HIGHPART113,5000
#define BASE 115,5083
encode 122,5324
decode 137,5703
force_fit_type 156,6261
add_double 237,8444
neg_double 257,8971
mul_double 282,9536
lshift_double 339,11177
rshift_double 375,12141
lrotate_double 412,13211
rrotate_double 434,13784
div_and_round_double 461,14600
real_value_truncate 722,22192
target_isinf 734,22439
target_isnan 774,23303
target_negative 814,24160
target_isinf 851,24923
target_isnan 860,25099
target_negative 869,25284
exact_real_inverse 880,25515
#define K 902,26123
#define K 905,26183
#define K 907,26201
split_tree 980,28377
int_const_binop 1061,31047
const_binop 1253,36105
size_int 1425,40038
size_binop 1459,40985
fold_convert 1489,41929
non_lvalue 1633,46327
int pedantic_lvalues;1665,47221
pedantic_non_lvalue 1671,47369
invert_tree_comparison 1685,47704
swap_tree_comparison 1711,48206
truth_value_p 1735,48625
operand_equal_p 1753,49334
operand_equal_for_comparison_p 1890,53901
twoval_comparison_p 1945,55686
eval_subst 2044,58436
omit_one_operand 2130,60785
pedantic_omit_one_operand 2144,61094
invert_truthvalue 2162,61527
distribute_bit_expr 2276,65160
make_bit_field_ref 2325,66594
optimize_bit_field_compare 2360,67859
decode_field_reference 2552,74216
all_ones_mask_p 2615,76042
simple_operand_p 2639,76627
range_binop 2700,79224
make_range 2756,80978
build_range_check 2986,87845
merge_ranges 3034,89181
fold_range_test 3170,93581
unextend 3240,96181
fold_truthop 3304,98685
strip_compound_expr 3619,110065
fold 3660,111615

fp-test.c,410
int i1,67,2594
int i1, i2 67,2594
volatile signed char sc;69,2611
volatile unsigned char uc;70,2636
volatile signed short ss;72,2664
volatile unsigned short us;73,2690
volatile signed int si;75,2719
volatile unsigned int ui;76,2743
volatile signed long sl;78,2770
volatile unsigned long ul;79,2795
volatile float f1 81,2823
volatile double d1 82,2868
volatile long double D1 83,2914
main 86,2970

frame.c,1106
typedef          int  sword __attribute__ __attribute__50,1785
typedef unsigned int  uword __attribute__ __attribute__51,1842
typedef unsigned int  uaddr __attribute__ __attribute__52,1899
typedef          int  saddr __attribute__ __attribute__53,1961
typedef unsigned char ubyte;ubyte54,2023
struct dwarf_cie dwarf_cie60,2264
struct dwarf_fde dwarf_fde69,2457
typedef struct dwarf_fde fde;fde76,2608
struct object object82,2861
static struct object *objects;91,2992
struct cie_info cie_info95,3074
struct frame_state_internalframe_state_internal105,3270
decode_uleb128 115,3511
decode_sleb128 136,3924
union unaligned unaligned159,4349
read_pointer 166,4556
read_1byte 169,4645
read_2byte 172,4721
read_4byte 175,4809
read_8byte 178,4902
fde_compare 185,5099
next_fde 193,5250
fde_insert 204,5643
count_fdes 217,5896
add_fdes 234,6201
frame_init 265,7036
find_fde 305,7817
get_cie 339,8397
extract_cie_info 348,8581
execute_cfa_insn 392,9710
__register_frame 515,12767
__register_frame_table 534,13180
__deregister_frame 551,13515
__frame_state_for 579,14119

function.c,5940
#define TRAMPOLINE_ALIGNMENT 62,2217
#define NAME__MAIN 70,2562
#define SYMBOL__MAIN 71,2590
#define FLOOR_ROUND(FLOOR_ROUND77,2828
#define CEIL_ROUND(CEIL_ROUND81,2972
#define NEED_SEPARATE_AP90,3410
int current_function_pops_args;97,3628
int current_function_returns_struct;102,3770
int current_function_returns_pcc_struct;107,3921
int current_function_needs_context;111,4041
int current_function_calls_setjmp;115,4138
int current_function_calls_longjmp;119,4235
int current_function_has_nonlocal_label;124,4365
int current_function_has_nonlocal_goto;129,4492
int current_function_contains_functions;133,4603
int current_function_is_thunk;138,4845
int current_function_calls_alloca;143,4975
int current_function_returns_pointer;147,5073
rtx current_function_epilogue_delay_list;152,5231
int current_function_args_size;158,5439
int current_function_pretend_args_size;163,5630
int current_function_outgoing_args_size;168,5801
rtx current_function_arg_offset_rtx;173,5968
int current_function_varargs;178,6113
int current_function_stdarg;183,6251
CUMULATIVE_ARGS current_function_args_info;188,6371
char *current_function_name;192,6461
rtx current_function_return_rtx;199,6750
int current_function_uses_const_pool;203,6848
int current_function_uses_pic_offset_table;206,6953
rtx current_function_internal_arg_pointer;209,7076
tree inline_function_decl;212,7194
int function_call_count;216,7288
tree nonlocal_labels;222,7479
rtx nonlocal_goto_handler_slot;227,7633
rtx nonlocal_goto_stack_level;233,7816
rtx cleanup_label;239,8043
rtx return_label;245,8241
rtx save_expr_regs;249,8395
rtx stack_slot_list;253,8528
tree rtl_expr_chain;256,8605
rtx tail_recursion_label;260,8733
rtx tail_recursion_reentry;263,8836
rtx arg_pointer_save_area;270,9120
HOST_WIDE_INT frame_offset;275,9342
static tree context_display;280,9552
static tree trampoline_list;288,9908
static rtx parm_birth_insn;291,10013
static int invalid_stack_slot;297,10256
static rtx last_parm_insn;301,10374
int max_parm_reg;305,10509
rtx *parm_reg_stack_loc;311,10794
static int virtuals_instantiated;315,10953
extern int rtx_equal_function_value_matters;327,11428
extern tree sequence_rtl_expr;328,11473
struct temp_slottemp_slot348,12567
struct temp_slot *temp_slots;379,13671
int temp_slot_level;383,13749
static tree this_function_decl;386,13828
static rtx this_function_callinfo;389,13911
static char *this_function_bytecode;393,14036
static rtx this_function_calldesc;396,14135
int local_vars_size;399,14242
int stack_depth;402,14319
int max_stack_depth;405,14400
static int stmt_expr_depth;408,14469
struct fixup_replacementfixup_replacement415,14792
struct function *outer_function_chain;457,16562
find_function_data 463,16717
push_function_context_to 479,17153
push_function_context 549,19911
pop_function_context_from 558,20127
void pop_function_context 641,23340
get_frame_size 653,23695
assign_stack_local 673,24178
assign_outer_stack_local 742,26193
assign_stack_temp 816,28379
assign_temp 942,32362
combine_temp_slots 985,33721
find_temp_slot_from_address 1042,35138
update_temp_slot_address 1074,35920
mark_temp_addr_taken 1097,36474
preserve_temp_slots 1125,37227
preserve_rtl_expr_result 1194,39260
free_temp_slots 1224,40138
free_temps_for_rtl_expr 1239,40423
mark_all_temps_used 1255,40734
push_temp_slots 1269,40989
pop_temp_slots 1278,41131
init_temp_slots 1294,41397
put_var_into_stack 1306,41694
put_reg_into_stack 1430,46128
fixup_var_refs 1498,48178
find_fixup_replacement 1541,49562
fixup_var_refs_insns 1568,50210
fixup_var_refs_1 1751,56396
fixup_memory_subreg 2289,73026
walk_fixup_memory_subreg 2328,74357
fixup_stack_1 2370,75479
optimize_bit_field 2436,77376
static int in_arg_offset;2590,82541
static int var_offset;2591,82567
static int dynamic_offset;2592,82590
static int out_arg_offset;2593,82617
#define STACK_POINTER_OFFSET	2599,82772
#define STACK_DYNAMIC_OFFSET(STACK_DYNAMIC_OFFSET2618,83643
#define STACK_DYNAMIC_OFFSET(STACK_DYNAMIC_OFFSET2623,83787
#define STACK_DYNAMIC_OFFSET(STACK_DYNAMIC_OFFSET2628,83903
gen_mem_addressof 2638,84260
flush_addressof 2661,84836
put_addressof_into_stack 2675,85294
purge_addressof_1 2694,85770
purge_addressof 2770,87539
instantiate_virtual_regs 2788,88029
instantiate_decls 2842,89880
instantiate_decls_1 2885,91434
instantiate_decl 2907,92059
instantiate_virtual_regs_1 2980,94329
delete_handlers 3372,106340
nonlocal_label_rtx_list 3415,107513
use_variable 3431,107882
use_variable_after 3450,108504
max_parm_reg_num 3466,109055
get_first_nonparm_insn 3474,109182
get_first_block_beg 3485,109395
aggregate_value_p 3505,110051
assign_parms 3553,111585
#define STACK_BYTES 4378,139831
promoted_input_arg 4424,141428
locate_and_pad_parm 4485,143523
pad_to_arg_alignment 4592,147035
pad_below 4623,147671
round_down 4651,148471
uninitialized_vars_warning 4666,148901
setjmp_args_warning 4698,150074
setjmp_protect 4713,150545
setjmp_protect_args 4746,151662
lookup_static_chain 4772,152375
fix_lexical_addr 4801,153254
trampoline_address 4890,155925
#define TRAMPOLINE_REAL_SIZE 4933,157288
#define TRAMPOLINE_REAL_SIZE 4936,157390
round_trampoline_addr 4975,158588
identify_blocks 5004,159675
reorder_blocks 5054,160960
blocks_nreverse 5104,162436
all_blocks 5122,162824
bc_build_calldesc 5150,163354
init_function_start 5196,164721
mark_varargs 5350,169191
#define HAS_INIT_SECTION5359,169405
expand_main_function 5363,169443
extern struct obstack permanent_obstack;5376,169728
bc_expand_function_start 5382,169877
bc_expand_function_end 5431,171289
expand_function_start 5465,172352
expand_function_end 5701,180504
static int *prologue;5993,189896
static int *epilogue;5994,189918
record_insns 6000,190055
contains 6025,190548
thread_prologue_and_epilogue_insns 6055,191263
reposition_prologue_and_epilogue_notes 6156,194168

gcc.c,7691
#define R_OK 57,1840
#define W_OK 58,1855
#define X_OK 59,1870
#define PEXECUTE_FIRST 68,2194
#define PEXECUTE_LAST 69,2221
#define PEXECUTE_SEARCH 70,2248
#define PEXECUTE_VERBOSE 71,2275
#define WIFSIGNALED(WIFSIGNALED74,2323
#define WTERMSIG(WTERMSIG77,2414
#define WIFEXITED(WIFEXITED80,2472
#define WEXITSTATUS(WEXITSTATUS83,2540
#define exit 87,2604
#define O_RDONLY 92,2718
#define vfork 96,2756
#define S_ISREG(S_ISREG101,2852
#define S_ISDIR(S_ISDIR106,2964
#define HAVE_EXECUTABLE_SUFFIX111,3106
#define EXECUTABLE_SUFFIX 113,3143
#define HAVE_OBJECT_SUFFIX118,3257
#define OBJECT_SUFFIX 120,3290
#define PATH_SEPARATOR 125,3406
#define DIR_SEPARATOR 129,3463
static char dir_separator_str[132,3497
#define obstack_chunk_alloc 134,3552
#define obstack_chunk_free 135,3588
extern int errno;143,3727
extern int sys_nerr;147,3775
extern char *sys_errlist[148,3796
#define MIN_FATAL_STATUS 156,3962
static int print_search_dirs;161,4100
static char *print_file_name 166,4239
static char *print_prog_name 170,4337
static int print_multi_directory;175,4485
static int print_multi_lib;180,4638
static int verbose_flag;184,4740
static int save_temps_flag;189,4893
static char *compiler_version;193,4952
static char *spec_version 197,5028
static char *spec_machine 201,5127
static char *cross_compile 207,5296
static char *cross_compile 209,5336
static int error_count 214,5481
static struct obstack obstack;218,5577
static struct obstack collect_obstack;225,5838
extern char *version_string;227,5878
#define ASM_SPEC 410,15019
#define ASM_FINAL_SPEC 416,15168
#define CPP_SPEC 422,15332
#define CC1_SPEC 428,15487
#define CC1PLUS_SPEC 434,15642
#define LINK_SPEC 440,15798
#define LIB_SPEC 445,15915
#define LIBGCC_SPEC 453,16221
#define LIBGCC_SPEC 455,16260
#define STARTFILE_SPEC 461,16404
#define SWITCHES_NEED_SPACES 468,16661
#define ENDFILE_SPEC 473,16798
#define SIGNED_CHAR_SPEC 481,17041
#define SIGNED_CHAR_SPEC 483,17112
static char *cpp_spec 487,17191
static char *cpp_predefines 488,17225
static char *cc1_spec 489,17271
static char *cc1plus_spec 490,17305
static char *signed_char_spec 491,17347
static char *asm_spec 492,17397
static char *asm_final_spec 493,17431
static char *link_spec 494,17477
static char *lib_spec 495,17513
static char *libgcc_spec 496,17547
static char *endfile_spec 497,17587
static char *startfile_spec 498,17629
static char *switches_need_spaces 499,17675
static struct obstack multilib_obstack;504,17895
static char *multilib_select;505,17935
static char *multilib_matches;506,17965
static char *multilib_defaults;507,17996
#define MULTILIB_DEFAULTS 513,18144
static char *multilib_defaults_raw[516,18185
struct user_specs user_specs518,18244
static struct user_specs *user_specs_head,523,18313
static struct user_specs *user_specs_head, *user_specs_tail;523,18313
#define DEFAULT_SWITCH_TAKES_ARG(DEFAULT_SWITCH_TAKES_ARG527,18433
#define SWITCH_TAKES_ARG(SWITCH_TAKES_ARG534,18708
#define DEFAULT_WORD_SWITCH_TAKES_ARG(DEFAULT_WORD_SWITCH_TAKES_ARG539,18843
#define WORD_SWITCH_TAKES_ARG(WORD_SWITCH_TAKES_ARG548,19284
struct compilercompiler553,19433
static struct compiler *compilers;571,20033
static int n_compilers;575,20145
static struct compiler default_compilers[579,20246
static int n_default_compilers697,25789
static char *link_command_spec 710,26357
static char *link_command_spec 722,26727
static int n_linker_options;737,27229
static char **linker_options;738,27258
static int n_assembler_options;743,27438
static char **assembler_options;744,27470
static int n_preprocessor_options;749,27659
static char **preprocessor_options;750,27694
struct option_mapoption_map755,27833
struct option_map option_map[772,28361
translate_options 852,31202
my_strerror(1009,34883
skip_whitespace 1031,35171
struct spec_listspec_list1058,35733
#define INIT_STATIC_SPEC(INIT_STATIC_SPEC1073,36235
static struct spec_list static_specs[1077,36379
static struct spec_list extra_specs[1100,37450
static struct spec_list *specs 1105,37590
init_spec 1111,37707
set_spec 1150,38581
static char **argbuf;1212,40090
static int argbuf_length;1216,40161
static int argbuf_index;1220,40261
static struct temp_name temp_name1225,40410
} *temp_names;1232,40715
static int execution_count;1236,40775
static int signal_count;1240,40858
static char *programname;1244,40934
struct prefix_listprefix_list1248,41038
struct path_prefixpath_prefix1257,41401
static struct path_prefix exec_prefixes 1266,41693
static struct path_prefix startfile_prefixes 1270,41825
static struct path_prefix include_prefixes 1274,41960
static char *machine_suffix 1279,42129
static char *just_machine_suffix 1284,42254
static char *gcc_exec_prefix;1288,42343
#define STANDARD_EXEC_PREFIX 1299,42618
static char *standard_exec_prefix 1302,42717
static char *standard_exec_prefix_1 1303,42775
static char *md_exec_prefix 1305,42852
#define STANDARD_STARTFILE_PREFIX 1309,42940
static char *md_startfile_prefix 1313,43068
static char *md_startfile_prefix_1 1316,43160
static char *standard_startfile_prefix 1318,43227
static char *standard_startfile_prefix_1 1319,43295
static char *standard_startfile_prefix_2 1320,43347
#define TOOLDIR_BASE_PREFIX 1323,43432
static char *tooldir_base_prefix 1325,43481
static char *tooldir_prefix;1326,43537
static char *multilib_dir;1331,43681
clear_args 1336,43794
store_arg 1349,44178
read_specs 1376,45006
static char *temp_filename;1634,51744
static int temp_filename_length;1638,51803
struct temp_filetemp_file1642,51891
static struct temp_file *always_delete_queue;1649,52024
static struct temp_file *failure_delete_queue;1651,52129
record_temp_file 1660,52462
delete_if_ordinary 1703,53522
delete_temp_files 1726,53957
delete_failure_queue 1738,54208
clear_failure_queue 1747,54383
putenv 1763,54902
build_search_list 1814,56060
putenv_from_prefixes 1875,57727
find_a_file 1887,58070
add_prefix 2027,61644
unused_prefix_warnings 2071,62658
free_path_prefix 2097,63228
execute 2121,63761
struct switchstrswitchstr2281,68179
static struct switchstr *switches;2289,68262
static int n_switches;2291,68298
struct infileinfile2293,68322
static struct infile *infiles;2301,68422
static int n_infiles;2303,68454
static char **outfiles;2307,68546
static int warn_B;2310,68626
static int warn_std;2313,68722
static int *warn_std_ptr 2316,68818
convert_filename 2325,69069
process_command 2371,70232
static char *input_filename;3039,89341
static int input_file_number;3040,89370
static int input_filename_length;3041,89400
static int basename_length;3042,89434
static char *input_basename;3043,89462
static char *input_suffix;3044,89491
static int arg_going;3050,89680
static int delete_this_arg;3054,89807
static int this_is_output_file;3058,89953
static int this_is_library_file;3063,90142
static int input_from_pipe;3066,90251
do_spec 3072,90427
do_spec_1 3113,91502
handle_braces 3934,111382
check_live_switch 4123,115888
give_switch 4202,118166
find_file 4233,118916
is_directory 4266,119800
fatal_error 4310,120992
main 4322,121239
lookup_compiler 4784,134930
xmalloc 4848,136643
xrealloc 4858,136813
concat VPROTO(4871,137074
save_string 4923,137955
pfatal_with_name 4935,138129
perror_with_name 4942,138234
pfatal_pexecute 4949,138339
fancy_abort 4968,138842
fatal VPROTO(4978,138969
error VPROTO(5000,139309
fatal 5023,139644
error 5032,139778
validate_all_switches 5044,139986
validate_switches 5085,140961
used_arg 5131,141872
default_arg 5219,143856
set_multilib_dir 5253,144703
print_multilib_info 5354,146883

gcov.c,1645
char gcov_version_string[84,3846
#define STRING_SIZE 88,3976
struct sourcefilesourcefile93,4098
struct sourcefile *sources;102,4246
struct adj_list adj_list107,4367
struct bb_info bb_info126,4819
struct arcdataarcdata143,5197
struct bb_info_list bb_info_list152,5333
static struct bb_info_list *bb_graph_list 161,5567
static char *bbg_file_name;165,5690
static FILE *bbg_file;166,5718
static char *da_file_name;170,5814
static FILE *da_file;171,5841
static char *bb_file_name;175,5945
static FILE *bb_file;176,5972
static char *bb_data;180,6062
static long bb_data_size;184,6125
static char *gcov_file_name;188,6202
static FILE *gcov_file;189,6231
static char *input_file_name 193,6312
static int output_branch_probs 197,6392
static int output_gcov_file 202,6540
static int output_long_names 209,6846
static int output_function_summary 213,6928
static char *object_directory 218,7087
main 229,7325
xmalloc 247,7514
fancy_abort 263,7878
print_usage 272,8022
process_args 281,8184
open_files 320,8963
init_arc 428,11793
reverse_arcs 455,12398
create_program_flow_graph 476,12771
solve_program_flow_graph 560,15113
read_files 684,18762
scan_for_source_files 751,20584
static int function_source_lines;827,22478
static int function_source_lines_executed;828,22512
static int function_branches;829,22555
static int function_branches_executed;830,22585
static int function_branches_taken;831,22624
static int function_calls;832,22660
static int function_calls_executed;833,22687
static char *function_name;834,22723
calculate_branch_probs 840,22864
function_summary 901,24360
output_data 937,25607

gen-protos.c,224
int verbose 25,922
char *progname;26,939
#define HASH_SIZE 28,956
int hash_tab[29,993
int next_index;30,1018
hashf 33,1046
add_hash 47,1266
parse_fn_proto 78,1909
main 142,3260
fancy_abort 207,4747
fatal 213,4784

genattr.c,412
static struct obstack obstack;28,978
struct obstack *rtl_obstack 29,1009
#define obstack_chunk_alloc 31,1050
#define obstack_chunk_free 32,1086
struct rangerange43,1306
struct function_unitfunction_unit52,1439
extend_range 64,1875
init_range 74,2061
write_upcase 82,2165
gen_attr 93,2349
write_units 143,3731
xmalloc 195,5805
xrealloc 206,5970
fatal 217,6164
fancy_abort 230,6457
main 236,6515

genattrtab.c,5351
static struct obstack obstack,120,5257
static struct obstack obstack, obstack1,120,5257
static struct obstack obstack, obstack1, obstack2;120,5257
struct obstack *rtl_obstack 121,5308
struct obstack *hash_obstack 122,5348
struct obstack *temp_obstack 123,5390
#define obstack_chunk_alloc 125,5433
#define obstack_chunk_free 126,5469
char **insn_name_ptr 129,5580
#define MAX_DIGITS 138,5749
struct insn_definsn_def147,6102
struct insn_entinsn_ent161,6602
struct attr_valueattr_value172,6929
struct attr_descattr_desc183,7289
#define NULL_ATTR 196,7856
struct rangerange200,7928
struct delay_descdelay_desc208,8010
struct function_unit_opfunction_unit_op217,8251
struct function_unitfunction_unit231,8826
#define MAX_ATTRS_INDEX 253,9904
static struct attr_desc *attrs[254,9932
static struct insn_def *defs;255,9981
static struct delay_desc *delays;256,10011
static struct function_unit *units;257,10045
struct dimension dimension294,11949
static int insn_code_number;304,12238
static int insn_index_number;305,12267
static int got_define_asm_attributes;306,12297
static int must_extract;307,12335
static int must_constrain;308,12360
static int address_used;309,12387
static int length_used;310,12412
static int num_delays;311,12436
static int have_annul_true,312,12459
static int have_annul_true, have_annul_false;312,12459
static int num_units;313,12505
static int num_insn_ents;314,12527
enum operator operator318,12596
enum operator {PLUS_OP,318,12596
enum operator {PLUS_OP, MINUS_OP,318,12596
enum operator {PLUS_OP, MINUS_OP, POS_MINUS_OP,318,12596
enum operator {PLUS_OP, MINUS_OP, POS_MINUS_OP, EQ_OP,318,12596
enum operator {PLUS_OP, MINUS_OP, POS_MINUS_OP, EQ_OP, OR_OP,318,12596
enum operator {PLUS_OP, MINUS_OP, POS_MINUS_OP, EQ_OP, OR_OP, MAX_OP,318,12596
enum operator {PLUS_OP, MINUS_OP, POS_MINUS_OP, EQ_OP, OR_OP, MAX_OP, MIN_OP,318,12596
enum operator {PLUS_OP, MINUS_OP, POS_MINUS_OP, EQ_OP, OR_OP, MAX_OP, MIN_OP, RANGE_OP}318,12596
static int *insn_n_alternatives;322,12761
static int *insn_alternatives;327,12891
static char *current_alternative_string;333,13085
static rtx true_rtx,337,13165
static rtx true_rtx, false_rtx;337,13165
static char *alternative_name;341,13238
#define SIMPLIFY_TEST_EXP(SIMPLIFY_TEST_EXP345,13362
#define SIMPLIFY_ALTERNATIVE(SIMPLIFY_ALTERNATIVE351,13633
rtx frame_pointer_rtx,361,14008
rtx frame_pointer_rtx, hard_frame_pointer_rtx,361,14008
rtx frame_pointer_rtx, hard_frame_pointer_rtx, stack_pointer_rtx;361,14008
rtx arg_pointer_rtx;362,14074
#define oballoc(oballoc454,18515
struct attr_hashattr_hash463,18796
#define RTL_HASH_SIZE 481,19435
struct attr_hash *attr_hash_table[482,19462
#define RTL_HASH(RTL_HASH486,19590
rtx pc_rtx;488,19647
attr_hash_add_rtx 493,19744
attr_hash_add_string 510,20175
attr_rtx VPROTO(536,20882
attr_printf VPROTO(735,25765
attr_printf 762,26229
attr_eq 778,26575
attr_numeral 786,26740
attr_string 796,26952
attr_equal_p 832,28019
attr_copy_rtx 844,28295
check_attr_test 940,30494
check_attr_value 1087,34421
convert_set_attr_alternative 1176,36745
convert_set_attr 1217,37942
check_defs 1252,38895
convert_const_symbol_ref 1305,40246
make_canonical 1358,41671
copy_boolean 1439,43672
get_attr_value 1458,44378
expand_delays 1507,45880
operate_exp 1598,48805
expand_units 1799,54608
simplify_knowing 2136,66120
encode_units_mask 2154,66696
fill_attr 2220,68102
substitute_address 2265,69511
make_length_attrs 2339,71686
identity_fn 2389,73298
zero_fn 2396,73360
one_fn 2403,73437
max_fn 2410,73513
simplify_cond 2425,73949
remove_insn_ent 2544,77108
insert_insn_ent 2569,77573
insert_right_side 2592,78260
compute_alternative_mask 2658,80077
make_alternative_compare 2688,80870
evaluate_eq_attr 2714,81658
simplify_and_tree 2817,84663
simplify_or_tree 2936,87720
simplify_test_exp 3013,90155
optimize_attrs 3305,98860
simplify_by_alternatives 3415,102002
simplify_by_exploding 3452,103143
find_and_mark_used_attributes 3600,107664
unmark_used_attributes 3650,108829
add_values_to_cover 3673,109342
increment_current_value 3737,111018
test_for_current_value 3757,111444
simplify_with_current_value 3777,111975
simplify_with_current_value_aux 3810,112664
clear_struct_flag 3888,114727
count_sub_rtxs 3945,115765
gen_attr 4004,116766
count_alternatives 4057,118369
compares_alternatives_p 4095,119092
contained_in_p 4127,119703
gen_insn 4160,120306
gen_delay 4207,121431
gen_unit 4238,122196
write_test_expr 4318,124822
max_attr_value 4547,130176
walk_attr_value 4596,131248
write_attr_get 4663,132545
eliminate_known_true 4720,134334
write_attr_set 4751,135171
write_attr_case 4848,137664
write_attr_valueq 4924,139454
write_attr_value 4944,139819
write_upcase 4955,140012
write_indent 4966,140192
write_eligible_delay 4989,140918
write_function_unit_info 5108,144502
write_complex_function 5177,146480
n_comma_elts 5269,149154
next_comma_elt 5289,149535
find_attr 5315,150036
make_internal_attr 5353,151089
find_most_used 5375,151587
find_single_value 5396,151999
make_numeric_value 5418,152352
extend_range 5441,152675
xrealloc 5451,152856
xmalloc 5462,153044
copy_rtx_unchanging 5473,153213
fatal 5512,153893
fancy_abort 5526,154209
write_const_num_delay_slots 5535,154414
main 5571,155201

gencodes.c,288
static struct obstack obstack;30,993
struct obstack *rtl_obstack 31,1024
#define obstack_chunk_alloc 33,1065
#define obstack_chunk_free 34,1101
static int insn_code_number;43,1242
gen_insn 46,1284
xmalloc 58,1619
xrealloc 69,1784
fatal 80,1977
fancy_abort 93,2271
main 99,2329

genconfig.c,745
static struct obstack obstack;28,919
struct obstack *rtl_obstack 29,950
#define obstack_chunk_alloc 31,991
#define obstack_chunk_free 32,1027
static int max_recog_operands;38,1183
static int max_dup_operands;39,1251
static int max_clobbers_per_insn;40,1331
static int register_constraint_flag;41,1365
static int have_cc0_flag;42,1402
static int have_cmove_flag;43,1428
static int have_lo_sum_flag;44,1456
static int max_insns_per_split 47,1534
static int clobbers_seen_this_insn;49,1571
static int dup_operands_seen_this_insn;50,1607
walk_insn_part 63,1985
gen_insn 167,4455
gen_expand 188,5021
gen_split 215,5711
gen_peephole 230,6120
xmalloc 242,6365
xrealloc 254,6531
fatal 265,6724
fancy_abort 278,7019
main 284,7077

genemit.c,735
static struct obstack obstack;27,916
struct obstack *rtl_obstack 28,947
#define obstack_chunk_alloc 30,988
#define obstack_chunk_free 31,1024
static int max_opno;40,1165
static int max_dup_opno;41,1186
static int register_constraints;42,1211
static int insn_code_number;43,1244
static int insn_index_number;44,1273
struct clobber_patclobber_pat50,1495
} *clobber_list;56,1609
struct clobber_entclobber_ent60,1680
max_operand_1 67,1791
max_operand_vec 106,2739
print_code 123,3010
gen_exp 140,3352
gen_insn 267,6016
gen_expand 384,9240
gen_split 511,13666
output_add_clobbers 603,16799
output_init_mov_optab 641,17780
xmalloc 672,18592
xrealloc 684,18758
fatal 695,18951
fancy_abort 708,19244
main 714,19302

genextract.c,705
static struct obstack obstack;28,959
struct obstack *rtl_obstack 29,990
#define obstack_chunk_alloc 31,1031
#define obstack_chunk_free 32,1067
char **insn_name_ptr;38,1212
struct extractionextraction50,1795
struct code_ptrcode_ptr63,2073
static struct extraction *extractions;69,2137
static int insn_code_number;73,2251
static int op_count;77,2336
static char *oplocs[82,2447
static int dup_count;87,2597
static char *duplocs[91,2676
static int dupnums[95,2770
static struct code_ptr *peepholes;99,2862
gen_insn 111,3093
walk_rtx 191,4929
print_path 313,7527
xmalloc 346,8220
xrealloc 357,8385
fatal 368,8578
fancy_abort 381,8874
copystr 387,8941
mybzero 402,9118
main 411,9239

genflags.c,486
static struct obstack obstack;30,983
struct obstack *rtl_obstack 31,1014
#define obstack_chunk_alloc 33,1055
#define obstack_chunk_free 34,1091
char **insn_name_ptr;44,1298
static struct obstack call_obstack,47,1373
static struct obstack call_obstack, normal_obstack;47,1373
static int max_id_len;50,1464
num_operands 55,1550
gen_proto 93,2202
gen_nonproto 115,2560
gen_insn 122,2666
xmalloc 176,4056
xrealloc 188,4222
fatal 199,4415
fancy_abort 212,4709
main 218,4767

genopinit.c,314
static struct obstack obstack;28,937
struct obstack *rtl_obstack 29,968
#define obstack_chunk_alloc 31,1009
#define obstack_chunk_free 32,1045
char *optabs[70,2788
char **insn_name_ptr;129,6692
gen_insn 132,6727
xmalloc 287,10212
xrealloc 299,10378
fatal 310,10571
fancy_abort 323,10866
main 329,10924

genoutput.c,1143
#define MAX_MAX_OPERANDS 102,4340
static struct obstack obstack;104,4369
struct obstack *rtl_obstack 105,4400
#define obstack_chunk_alloc 107,4441
#define obstack_chunk_free 108,4477
static int next_code_number;125,4914
static int next_index_number;130,5031
struct datadata135,5176
struct data *insn_data;157,5946
struct data *end_of_insn_data;162,6062
int have_constraints;168,6242
static int have_error;173,6397
output_prologue 176,6434
output_epilogue 200,7146
static int max_opno;404,12351
static int num_dups;405,12372
static char *constraints[406,12393
static int op_n_alternatives[407,12437
static char *predicates[408,12485
static char address_p[409,12528
static enum machine_mode modes[410,12569
static char strict_low[411,12619
static char seen[412,12661
scan_operands 415,12710
process_template 544,16054
validate_insn_alternatives 625,17957
gen_insn 650,18769
gen_peephole 706,20391
gen_expand 759,21972
gen_split 820,23670
xmalloc 873,25098
xrealloc 884,25263
mybzero 895,25456
mybcopy 904,25584
fatal 914,25747
fancy_abort 927,26058
error 933,26123
main 944,26276
n_occurrences 1003,27333

genpeep.c,446
static struct obstack obstack;27,925
struct obstack *rtl_obstack 28,956
#define obstack_chunk_alloc 30,997
#define obstack_chunk_free 31,1033
struct linklink42,1407
static int max_opno;54,1559
static int n_operands;58,1645
static int insn_code_number 63,1814
gen_peephole 69,1916
match_rtx 153,4353
print_path 357,9289
print_code 377,9650
xmalloc 391,9869
xrealloc 402,10034
fatal 413,10227
fancy_abort 426,10520
main 432,10578

genrecog.c,1249
static struct obstack obstack;54,2290
struct obstack *rtl_obstack 55,2321
#define obstack_chunk_alloc 57,2362
#define obstack_chunk_free 58,2398
struct decision_head decision_head67,2664
struct decisiondecision72,2807
#define SUBROUTINE_THRESHOLD 105,4542
static int next_subroutine_number;107,4575
enum routine_type routine_type112,4753
enum routine_type {RECOG,112,4753
enum routine_type {RECOG, SPLIT}112,4753
static int next_number;116,4839
static int next_insn_code;120,4908
static int next_index;125,5024
static int max_depth;130,5167
static struct pred_tablepred_table138,5551
} preds[142,5624
#define NUM_KNOWN_PREDS 166,6654
make_insn_sequence 206,8452
add_to_sequence 293,10680
not_both_true 571,18470
position_merit 678,22221
merge_trees 734,24170
break_out_subroutines 956,31106
write_subroutine 980,31685
static char *indents[1022,32783
write_tree_1 1049,34102
print_code 1483,47026
same_codes 1497,47253
clear_codes 1509,47438
same_modes 1517,47553
clear_modes 1529,47773
write_tree 1545,48182
change_state 1592,49519
copystr 1621,50170
mybzero 1636,50347
mybcopy 1645,50475
concat 1654,50624
xrealloc 1673,50890
xmalloc 1684,51078
fatal 1695,51248
fancy_abort 1709,51584
main 1715,51642

getopt.c,1157
#define _NO_PROTO30,1259
#define const41,1476
#define GETOPT_INTERFACE_VERSION 55,2039
#define ELIDE_CODE59,2224
#define getpid(getpid85,2797
# define _(_93,3025
# define _(_95,3065
char *optarg 121,4056
int optind 136,4614
int __getopt_initialized 142,4786
static char *nextchar;151,5099
int opterr 156,5213
int optopt 162,5396
  REQUIRE_ORDER,195,6820
  REQUIRE_ORDER, PERMUTE,195,6820
  REQUIRE_ORDER, PERMUTE, RETURN_IN_ORDER195,6820
} ordering;196,6862
static char *posixly_correct;199,6929
#define	my_index	207,7206
my_index 216,7356
static int first_nonopt;249,8290
static int last_nonopt;250,8315
extern char *__getopt_nonoption_flags;257,8521
static int nonoption_flags_max_len;259,8561
static int nonoption_flags_len;260,8597
static int original_argc;262,8630
static char *const *original_argv;263,8656
extern pid_t __libc_pid;265,8692
__attribute__ 271,8924
# define SWAP_FLAGS(SWAP_FLAGS283,9305
# define SWAP_FLAGS(SWAP_FLAGS291,9621
exchange 308,10207
_getopt_initialize 393,12660
_getopt_internal 515,17055
#define NONOPTION_P 538,17801
#define NONOPTION_P 542,17985
getopt 969,28767
main 988,29135

getopt1.c,175
#define const32,1198
#define GETOPT_INTERFACE_VERSION 46,1761
#define ELIDE_CODE50,1946
#define NULL 64,2154
getopt_long 68,2181
getopt_long_only 84,2684
main 102,3026

getpwd.c,202
extern int errno;10,144
#define getcwd(getcwd20,496
#define GUESSPATHLEN 22,549
#define GUESSPATHLEN 24,593
#define GUESSPATHLEN 29,756
getpwd 43,1128
#define MAXPATHLEN 86,1973
getpwd 90,2011

global.c,2013
static int max_allocno;73,2920
int *reg_allocno;78,3071
static int *allocno_reg;82,3140
static int *allocno_order;87,3279
static int *allocno_size;92,3415
static int *reg_may_share;98,3648
#define INT_BITS 104,3835
#define INT_TYPE 105,3875
static INT_TYPE *conflicts;114,4173
static int allocno_row_words;119,4306
#define CONFLICTP(CONFLICTP123,4405
#define SET_CONFLICT(SET_CONFLICT127,4528
static HARD_REG_SET hard_regs_live;133,4723
static HARD_REG_SET *hard_reg_conflicts;137,4827
static HARD_REG_SET *hard_reg_preferences;143,5059
static HARD_REG_SET *hard_reg_copy_preferences;150,5375
static HARD_REG_SET *hard_reg_full_preferences;156,5644
static HARD_REG_SET *regs_someone_prefers;161,5786
static HARD_REG_SET no_global_alloc_regs;165,5896
static HARD_REG_SET regs_used_so_far;169,5977
static int *allocno_calls_crossed;173,6065
static int *allocno_n_refs;177,6152
static int *allocno_live_length;182,6288
static int local_reg_n_refs[187,6474
static int local_reg_live_length[192,6668
#define REGBITP(REGBITP197,6835
#define SET_REGBIT(SET_REGBIT201,6975
static INT_TYPE *allocnos_live;205,7105
#define ALLOCNO_LIVE_P(ALLOCNO_LIVE_P210,7232
#define SET_ALLOCNO_LIVE(SET_ALLOCNO_LIVE213,7332
#define CLEAR_ALLOCNO_LIVE(CLEAR_ALLOCNO_LIVE216,7435
#define NUM_NO_CONFLICT_PAIRS 237,8595
int n_no_conflict_pairs;239,8671
  no_conflict_pairs[241,8737
static rtx *regs_set;247,8920
static int n_regs_set;248,8942
static HARD_REG_SET eliminable_regset;252,9012
global_alloc 277,10030
allocno_compare 594,21153
global_conflicts 623,22138
expand_preferences 776,26749
prune_preferences 829,28578
find_reg 900,31109
retry_global_alloc 1206,40725
record_one_conflict 1239,41748
record_conflicts 1282,43051
mark_reg_store 1320,44350
mark_reg_clobber 1384,45933
mark_reg_conflicts 1441,47322
mark_reg_death 1480,48250
mark_reg_live_nc 1516,49379
set_preference 1538,50104
mark_elimination 1630,52779
dump_conflicts 1647,53225
dump_global_regs 1695,54635

gmon.c,190
static char sccsid[35,1839
extern mcount(48,2015
#define		SCALE_1_TO_1	70,2535
#define	MSG 72,2567
_mcleanup(151,4579
mcount(191,5671
#   define	TOLIMIT	306,8364
moncontrol(315,8568

halfpic.c,642
#define obstack_chunk_alloc 40,1405
#define obstack_chunk_free 41,1441
int flag_half_pic	49,1625
int half_pic_number_ptrs	50,1678
int half_pic_number_refs	51,1740
static struct obstack half_pic_obstack;55,1897
struct all_refs all_refs59,1990
static struct all_refs *half_pic_names;70,2430
static char *half_pic_prefix;72,2471
static int   half_pic_prefix_len;73,2501
#define MAX_HASH_TABLE 83,2869
#define HASHBITS 86,2905
half_pic_hash 89,2951
half_pic_init 164,4494
half_pic_finish 176,4720
half_pic_encode 200,5146
half_pic_declare 251,6225
half_pic_external 275,6600
half_pic_address_p 299,6969
half_pic_ptr 366,8304

integrate.c,1588
#define	obstack_chunk_alloc	41,1213
#define	obstack_chunk_free	42,1249
extern struct obstack *function_maybepermanent_obstack;44,1282
#define CEIL_ROUND(CEIL_ROUND51,1473
#define INTEGRATE_THRESHOLD(INTEGRATE_THRESHOLD56,1692
function_cannot_inline_p 86,2976
static rtx *reg_map;202,7520
static rtx *label_map;208,7784
static rtx *insn_map;213,7986
static tree *parmdecl_map;218,8193
extern int max_parm_reg;221,8293
extern rtx *parm_reg_stack_loc;222,8318
static rtvec orig_asm_operands_vector;227,8519
static rtvec copy_asm_operands_vector;232,8725
static rtvec copy_asm_constraints_vector;235,8821
static int in_nonparm_insns;238,8938
initialize_for_inline 244,9137
finish_inline 357,13342
adjust_copied_decl_tree 371,13727
save_for_inline_copying 408,15032
copy_decl_list 673,24373
copy_decl_tree 703,24995
copy_decl_rtls 733,25832
save_for_inline_nocopy 767,27147
save_constants 854,30189
note_modified_parmregs 930,31974
copy_for_inline 955,32860
rtx *global_const_equiv_map;1197,39955
int global_const_equiv_map_size;1198,39984
#define FIXED_BASE_PLUS_P(FIXED_BASE_PLUS_P1200,40019
expand_inline_function 1220,40805
integrate_parm_decls 2054,70213
integrate_decl_tree 2099,71915
save_constants_in_decl_trees 2157,73320
copy_rtx_and_substitute 2182,74009
try_constants 2650,89431
subst_constants 2710,91387
mark_stores 2974,99018
restore_constants 3016,100395
set_block_origin_self 3101,102818
set_decl_origin_self 3140,104131
set_block_abstract_flags 3165,104885
set_decl_abstract_flags 3192,105767
output_inline_function 3214,106437

jump.c,1434
static rtx *jump_chain;88,3476
rtx forced_labels;92,3585
static int max_jump_chain;96,3642
int can_reach_end;100,3765
static int cross_jump_death_matters 108,4082
jump_optimize 141,5448
duplicate_loop_exit_test 2271,77813
squeeze_notes 2462,83730
find_cross_jump 2513,85332
do_cross_jump 2691,90868
get_label_before 2743,92449
get_label_after 2766,92915
jump_back_p 2789,93467
can_reverse_comparison_p 2831,94660
reverse_condition 2891,96614
swap_condition 2936,97205
unsigned_condition 2980,97824
signed_condition 3013,98243
comparison_dominates_p 3047,98704
simplejump_p 3090,99380
condjump_p 3103,99693
condjump_in_parallel_p 3130,100394
sets_cc0_p 3165,101305
follow_jumps 3202,102241
tension_vector_labels 3256,103846
mark_jump_label 3295,105225
delete_jump 3428,108819
delete_computation 3451,109590
delete_insn 3560,112609
next_nondeleted_insn 3708,117184
delete_for_peephole 3722,117535
invert_jump 3761,118397
invert_exp 3802,119638
redirect_jump 3864,121293
delete_from_jump_chain 3905,122327
redirect_exp 3950,123495
redirect_tablejump 4010,125068
delete_labelref_insn 4040,125926
rtx_renumbered_equal_p 4080,126702
true_regnum 4254,130896
static int *same_regs;4302,132238
static int num_same_regs;4304,132262
static char *modified_regs;4309,132414
static int modified_mem;4313,132482
mark_modified_reg 4319,132663
thread_jumps 4345,133162
rtx_equal_for_thread_p 4536,139064

libgcc1-test.c,191
main_without__main 12,373
discard 68,1340
ddiscard 72,1368
foo 76,1400
dfoo 85,1501
extern void start(96,1802
void _start(101,1939
void __start(102,1956
void mainCRTStartup(103,1974

libgcc1.c,2723
#define perform_mulsi3(perform_mulsi357,2575
#define perform_divsi3(perform_divsi361,2648
#define perform_udivsi3(perform_udivsi365,2722
#define perform_modsi3(perform_modsi369,2796
#define perform_umodsi3(perform_umodsi373,2870
#define perform_lshrsi3(perform_lshrsi377,2945
#define perform_ashrsi3(perform_ashrsi381,3021
#define perform_ashlsi3(perform_ashlsi385,3097
#define perform_adddf3(perform_adddf389,3172
#define perform_subdf3(perform_subdf393,3245
#define perform_muldf3(perform_muldf397,3318
#define perform_divdf3(perform_divdf3101,3391
#define perform_addsf3(perform_addsf3105,3464
#define perform_subsf3(perform_subsf3109,3546
#define perform_mulsf3(perform_mulsf3113,3628
#define perform_divsf3(perform_divsf3117,3710
#define perform_negdf2(perform_negdf2121,3792
#define perform_negsf2(perform_negsf2125,3859
#define perform_fixdfsi(perform_fixdfsi129,3936
#define perform_fixsfsi(perform_fixsfsi133,4022
#define perform_floatsidf(perform_floatsidf137,4109
#define perform_floatsisf(perform_floatsisf141,4190
#define perform_extendsfdf2(perform_extendsfdf2145,4282
#define perform_truncdfsf2(perform_truncdfsf2149,4358
#define perform_eqdf2(perform_eqdf2158,4615
#define perform_nedf2(perform_nedf2162,4690
#define perform_gtdf2(perform_gtdf2166,4762
#define perform_gedf2(perform_gedf2170,4833
#define perform_ltdf2(perform_ltdf2174,4911
#define perform_ledf2(perform_ledf2178,4985
#define perform_eqsf2(perform_eqsf2182,5063
#define perform_nesf2(perform_nesf2186,5138
#define perform_gtsf2(perform_gtsf2190,5210
#define perform_gesf2(perform_gesf2194,5281
#define perform_ltsf2(perform_ltsf2198,5359
#define perform_lesf2(perform_lesf2202,5433
#define nongcc_SI_type 208,5573
#define nongcc_word_type 213,5699
#define FLOAT_VALUE_TYPE 222,5998
#define INTIFY(INTIFY226,6050
#define FLOATIFY(FLOATIFY230,6135
#define FLOAT_ARG_TYPE 234,6205
union flt_or_value flt_or_value237,6253
union flt_or_int flt_or_int239,6307
__mulsi3 244,6378
__udivsi3 253,6489
__divsi3 262,6610
__umodsi3 271,6721
__modsi3 280,6842
__lshrsi3 289,6953
__ashrsi3 298,7075
__ashlsi3 307,7188
__divdf3 316,7293
__muldf3 325,7387
__negdf2 334,7481
__adddf3 343,7566
__subdf3 352,7660
__eqdf2 366,7941
__nedf2 376,8074
__gtdf2 386,8207
__gedf2 396,8338
__ltdf2 406,8471
__ledf2 416,8602
__fixdfsi 426,8736
__fixsfsi 435,8832
__floatsidf 445,8970
__floatsisf 454,9082
__addsf3 464,9221
__negsf2 474,9384
__subsf3 484,9527
__eqsf2 494,9689
__nesf2 505,9879
__gtsf2 516,10069
__gesf2 527,10257
__ltsf2 538,10447
__lesf2 549,10635
__mulsf3 560,10826
__divsf3 570,10989
__truncdfsf2 580,11156
__extendsfdf2 590,11283

libgcc2.c,7107
#define WEAK_ALIAS46,1757
#define LIBGCC2_WORDS_BIG_ENDIAN 54,1978
typedef unsigned int UQItype	__attribute__ __attribute__66,2600
typedef 	 int SItype	__attribute__ __attribute__67,2658
typedef unsigned int USItype	__attribute__ __attribute__68,2708
typedef		 int DItype	__attribute__ __attribute__69,2766
typedef unsigned int UDItype	__attribute__ __attribute__70,2816
typedef 	float SFtype	__attribute__ __attribute__72,2875
typedef		float DFtype	__attribute__ __attribute__73,2926
typedef		float XFtype	__attribute__ __attribute__76,3010
typedef		float TFtype	__attribute__ __attribute__79,3101
typedef int word_type __attribute__ __attribute__82,3160
#define char 90,3558
#define short 91,3582
#define int 92,3607
#define long 93,3630
#define unsigned 94,3654
#define float 95,3682
#define double 96,3707
#define SI_TYPE_SIZE 98,3734
  struct DIstruct DIstruct104,3920
  struct DIstruct DIstruct106,3965
} DIunion;DIunion117,4278
__negdi2 141,4898
__lshrdi3 159,5233
__ashldi3 189,5705
__ashrdi3 219,6175
__ffsdi2 250,6714
__muldi3 270,7026
__udiv_w_sdiv 289,7350
__udiv_w_sdiv 387,9189
#define L_udivmoddi4394,9371
static const UQItype __clz_tab[398,9420
__udivmoddi4 415,10126
__divdi3 636,13838
__moddi3 663,14226
__umoddi3 689,14596
__udivdi3 702,14752
__cmpdi2 710,14869
__ucmpdi2 730,15212
#define WORD_SIZE 749,15630
#define HIGH_WORD_COEFF 750,15682
__fixunstfdi 753,15743
__fixtfdi 782,16454
#define WORD_SIZE 791,16618
#define HIGH_WORD_COEFF 792,16670
__fixunsxfdi 795,16731
__fixxfdi 824,17441
#define WORD_SIZE 833,17566
#define HIGH_WORD_COEFF 834,17618
__fixunsdfdi 837,17679
__fixdfdi 866,18350
#define WORD_SIZE 875,18475
#define HIGH_WORD_COEFF 876,18527
__fixunssfdi 879,18588
__fixsfdi 912,19513
#define WORD_SIZE 921,19676
#define HIGH_HALFWORD_COEFF 922,19728
#define HIGH_WORD_COEFF 923,19791
__floatdixf 926,19852
#define WORD_SIZE 944,20183
#define HIGH_HALFWORD_COEFF 945,20235
#define HIGH_WORD_COEFF 946,20298
__floatditf 949,20359
#define WORD_SIZE 967,20650
#define HIGH_HALFWORD_COEFF 968,20702
#define HIGH_WORD_COEFF 969,20765
__floatdidf 972,20826
#define WORD_SIZE 990,21117
#define HIGH_HALFWORD_COEFF 991,21169
#define HIGH_WORD_COEFF 992,21232
#define DI_SIZE 993,21285
#define UNKNOWN_FLOAT_FORMAT 998,21445
#define IEEE_FLOAT_FORMAT 999,21476
#define VAX_FLOAT_FORMAT 1000,21504
#define IBM_FLOAT_FORMAT 1001,21531
#define	HOST_FLOAT_FORMAT	1005,21661
#define DF_SIZE 1009,21756
#define SF_SIZE 1010,21775
#define DF_SIZE 1014,21844
#define SF_SIZE 1015,21863
#define DF_SIZE 1019,21932
#define SF_SIZE 1020,21951
__floatdisf 1024,21985
#define REP_BIT 1044,22651
__fixunsxfsi 1074,23258
__fixunsdfsi 1096,23619
__fixunssfsi 1118,23980
#define SItype 1128,24180
#define USItype 1129,24206
#define DItype 1130,24233
#define UDItype 1131,24259
#define SFtype 1132,24286
#define DFtype 1133,24312
__gcc_bcmp 1150,24606
__dummy 1166,24843
__builtin_saveregs 1379,30884
__eprintf 1396,31187
struct bbbb1410,31429
static struct bb *bb_head;1443,32106
/* __inline__ */ static int num_digits 1446,32192
__bb_exit_func 1463,32446
__bb_init_func 1692,38000
#define MACHINE_STATE_SAVE(MACHINE_STATE_SAVE1713,38404
#define MACHINE_STATE_RESTORE(MACHINE_STATE_RESTORE1716,38472
#define BB_BUCKETS 1723,38600
#define BBINBUFSIZE 1727,38672
#define BBINBUFSIZESTR 1732,38831
struct bb_edgebb_edge1734,38861
enum bb_func_modebb_func_mode1742,38981
  TRACE_KEEP 1744,39001
  TRACE_KEEP = 0, TRACE_ON 1744,39001
  TRACE_KEEP = 0, TRACE_ON = 1, TRACE_OFF 1744,39001
struct bb_funcbb_func1747,39051
} __bb;1762,39336
static unsigned long bb_src 1767,39427
static unsigned long bb_dst 1768,39460
static FILE *bb_tracefile 1770,39494
static struct bb_edge **bb_hashbuckets 1771,39534
static struct bb_func *bb_func_head 1772,39598
static unsigned long bb_callcount 1773,39658
static int bb_mode 1774,39697
static unsigned long *bb_stack 1776,39722
static size_t bb_stacksize 1777,39776
static int reported 1779,39809
#define GOPENDECOMPRESS 1798,40362
#define GOPENCOMPRESS 1799,40398
gopen 1806,40632
gclose 1854,41708
__bb_exit_trace_func 1873,41974
__bb_init_prg 2069,47010
__bb_trace_func 2177,49529
__bb_trace_func_ret 2250,51129
__bb_init_file 2311,52476
__bb_trace_ret 2348,53291
__bb_init_trace_func 2372,53660
typedef void (*vfp)vfp2446,55302
extern vfp __new_handler;2447,55329
void * __builtin_new 2451,55416
void * __builtin_vec_new 2484,56120
#define write(write2510,56919
typedef void (*vfp)vfp2514,57005
vfp __new_handler 2517,57068
set_new_handler 2520,57102
#define MESSAGE 2530,57293
__default_new_handler 2533,57352
void __builtin_delete 2553,58000
void __builtin_vec_delete 2575,58462
unsigned int __shtab[2591,58756
#define INSN_CACHE_PLANE_SIZE 2606,59277
__clear_cache 2609,59350
long getpagesize(2723,62449
extern int VirtualProtect 2733,62543
__enable_execute_stack 2777,63310
__enable_execute_stack 2812,64112
__enable_execute_stack 2839,64662
__enable_execute_stack 2875,65491
cacheflush 2901,66060
#define NAME__MAIN 2922,66640
#define SYMBOL__MAIN 2923,66668
#define HAS_INIT_SECTION2928,66755
__do_global_dtors 2935,66922
#define ON_EXIT(ON_EXIT2954,67223
extern int _exit_dummy_decl;2960,67429
int *_exit_dummy_ref 2961,67458
__do_global_ctors 2965,67527
SYMBOL__MAIN 2982,68059
func_ptr __CTOR_LIST__[3010,68905
func_ptr __DTOR_LIST__[3011,68941
func_ptr __CTOR_LIST__[3013,68983
func_ptr __DTOR_LIST__[3014,69010
int _exit_dummy_decl 3027,69240
static func_ptr *atexit_chain 3035,69372
static long atexit_chain_length 3036,69407
static volatile long last_atexit_chain_slot 3037,69444
int atexit 3039,69495
extern void _exit 3070,70368
int _exit_dummy_decl 3103,70986
void *__eh_info;3114,71271
__default_terminate 3117,71294
__terminate 3125,71390
__throw_type_match 3131,71442
__empty 3143,71726
static void *top_elt[3155,71999
void **__dynamic_handler_chain 3156,72024
__get_dynamic_handler_chain 3164,72213
__sjthrow 3179,72705
__sjpopnthrow 3254,74545
void *__eh_pc;3312,75753
typedef struct exception_table exception_table3320,75817
} exception_table;exception_table3324,75905
find_exception_handler 3335,76329
typedef struct exception_table_node exception_table_node3371,77307
} exception_table_node;exception_table_node3376,77436
static struct exception_table_node *exception_table_list;3378,77461
__find_first_exception_table_match 3381,77527
__register_exceptions 3395,77813
__throw 3428,78628
void **__eh_pcnthrow 3435,78702
__unwind_function(3445,78827
__unwind_function(3468,79402
__unwind_function(3484,79787
__unwind_function(3500,80135
__unwind_function(3516,80620
typedef int ptr_type __attribute__ __attribute__3532,81050
get_reg 3538,81228
put_reg 3552,81668
copy_reg 3566,82082
get_return_addr 3581,82553
put_return_addr 3590,82797
next_stack_level 3600,83085
in_reg_window 3623,83835
__throw 3645,84445
#define write(write3806,89143
#define MESSAGE 3810,89229
__pure_virtual 3813,89282

local-alloc.c,2254
static int next_qty;75,3148
static short *qty_phys_reg;82,3327
static HARD_REG_SET *qty_phys_copy_sugg;95,3868
static HARD_REG_SET *qty_phys_sugg;100,4013
static short *qty_phys_num_copy_sugg;104,4128
static short *qty_phys_num_sugg;108,4240
static int *qty_n_refs;112,4329
static enum reg_class *qty_min_class;118,4553
static int *qty_birth;123,4714
static int *qty_death;131,5056
static int *qty_size;141,5501
static enum machine_mode *qty_mode;146,5661
static int *qty_n_calls_crossed;150,5768
static enum reg_class *qty_alternate_class;155,5896
static rtx *qty_scratch_rtx;160,6078
static char *qty_changes_size;165,6206
static int *qty_first_reg;171,6453
static int *reg_next_in_qty;177,6699
static int *reg_qty;194,7397
static char *reg_offset;200,7587
short *reg_renumber;209,7909
static HARD_REG_SET regs_live;214,8040
static HARD_REG_SET *regs_live_at;226,8623
int *scratch_block;228,8659
rtx *scratch_list;229,8679
int scratch_list_length;230,8698
static int scratch_index;231,8723
static int this_insn_number;235,8878
static rtx this_insn;236,8907
static rtx *reg_equiv_replacement;243,9186
alloc_qty 280,10991
alloc_qty_for_scratch 307,11755
local_alloc 395,14077
#define CLEAR(CLEAR507,18514
static int loop_depth;527,18916
static rtx equiv_mem;531,19067
static int equiv_mem_modified;534,19135
validate_equiv_mem_from_store 540,19288
validate_equiv_mem 559,19834
contains_replace_regs 608,21101
memref_referenced_p 655,22005
memref_used_between_p 725,23501
optimize_reg_copy_1 753,24300
optimize_reg_copy_2 933,30054
update_equiv_regs 1007,32160
block_alloc 1276,41657
#define EXCHANGE(EXCHANGE1586,52586
#define EXCHANGE(EXCHANGE1635,54039
#define QTY_CMP_PRI(QTY_CMP_PRI1727,56766
qty_compare 1732,56931
qty_compare_1 1739,57031
#define QTY_CMP_SUGG(QTY_CMP_SUGG1761,57803
qty_sugg_compare 1767,57960
qty_sugg_compare_1 1779,58161
combine_regs 1825,59649
reg_meets_class_p 1996,65623
reg_classes_overlap_p 2009,65992
update_qty_class 2031,66499
reg_is_set 2057,67222
reg_is_born 2079,67926
wipe_dead_reg 2116,69005
find_free_reg 2176,71078
mark_life 2330,76148
post_mark_life 2349,76663
no_conflict_p 2388,77602
requires_inout 2431,78901
dump_local_alloc 2484,80005

loop.c,3168
int *uid_luid;56,1991
int *uid_loop_num;61,2121
int max_uid_for_loop;65,2178
static int max_luid;69,2232
static int max_loop_num;74,2350
static rtx *loop_number_loop_starts,78,2455
static rtx *loop_number_loop_starts, *loop_number_loop_ends;78,2455
int *loop_outer_loop;82,2586
static char *loop_invalid;87,2748
rtx *loop_number_exit_labels;99,3308
int *loop_number_exit_count;104,3479
unsigned HOST_WIDE_INT loop_n_iterations;112,3841
static int loop_has_call;117,4010
static int loop_has_volatile;122,4117
static rtx loop_continue;128,4311
static int *n_times_set;142,4939
static int *n_times_used;148,5147
static char *may_not_optimize;153,5278
static char *moved_once;158,5432
#define NUM_STORES 163,5589
static rtx loop_store_mems[164,5611
static int loop_store_mems_idx;167,5705
static int unknown_address_altered;173,5958
static int num_movables;176,6073
static int num_mem_sets;179,6165
static int loops_enclosed;182,6266
int max_reg_before_loop;186,6434
static struct obstack temp_obstack;193,6687
extern struct obstack *rtl_obstack;197,6803
#define obstack_chunk_alloc 199,6840
#define obstack_chunk_free 200,6876
struct movablemovable208,7119
FILE *loop_dump_stream;246,8912
int add_cost;294,10373
int shift_cost;296,10393
int mult_cost;297,10409
int copy_cost;302,10583
init_loop 305,10604
loop_optimize 331,11414
scan_loop 461,15922
record_excess_regs 985,35588
libcall_other_reg 1041,36770
reg_in_basic_block_p 1066,37365
libcall_benefit 1116,38483
skip_consec_insns 1140,39054
ignore_some_movables 1168,39765
force_movables 1200,40851
combine_movables 1239,42024
regs_match_p 1352,45859
rtx_equal_for_loop_p 1381,46535
add_label_notes 1493,49247
move_movables 1538,50511
replace_call_address 2015,65039
count_nonfixed_reads 2078,66297
constant_high_bytes 2134,67422
prescan_loop 2173,68458
find_and_verify_loops 2237,69837
mark_loop_jump 2534,79108
labels_in_range_p 2674,82831
note_addr_stored 2691,83112
invariant_p 2738,84372
consec_sets_invariant_p 2872,87731
all_sets_invariant_p 2946,89554
find_single_use_in_loop 2976,90328
count_loop_regs_set 3028,92091
loop_reg_used_before_p 3145,96026
enum iv_mode *reg_iv_type;3177,97015
struct induction **reg_iv_info;3183,97216
struct iv_class **reg_biv_class;3190,97479
struct iv_class *loop_iv_list;3195,97622
static rtx note_insn;3199,97716
static rtx addr_placeholder;3203,97813
strength_reduce 3253,100332
valid_initial_value_p 4292,135663
find_mem_givs 4328,136678
record_biv 4419,139106
record_giv 4515,141839
check_final_value 4728,148259
update_giv_derive 4872,152949
basic_induction_var 4998,157898
general_induction_var 5133,161878
simplify_giv_expr 5239,164811
consec_sets_giv 5505,172080
express_from 5602,174823
combine_givs_p 5641,176050
giv_sort 5676,176987
combine_givs 5691,177417
emit_iv_add_mult 5775,180061
product_cheap_p 5808,181000
check_dbra_loop 5895,183676
maybe_eliminate_biv 6221,194568
maybe_eliminate_biv_1 6273,196054
last_use_this_basic_block 6665,208653
record_initial 6684,209091
update_reg_last_use 6711,209766
get_condition 6758,211672
get_condition_for_loop 6979,217821

mips-tdump.c,2302
#define CODE_MASK 49,1530
#define MIPS_IS_STAB(MIPS_IS_STAB50,1556
#define MIPS_MARK_STAB(MIPS_MARK_STAB51,1622
#define MIPS_UNMARK_STAB(MIPS_UNMARK_STAB52,1670
typedef void *PTR_T;PTR_T56,1744
typedef const void *CPTR_T;CPTR_T57,1765
#define __proto(__proto58,1793
typedef void *PTR_T;PTR_T62,1891
typedef void *CPTR_T;CPTR_T63,1912
typedef char *PTR_T;PTR_T66,1941
typedef char *CPTR_T;CPTR_T67,1983
#define __proto(__proto70,2013
#define const71,2035
#define uchar	74,2057
#define ushort	75,2085
#define uint	76,2115
#define ulong	77,2141
#define size_t	85,2386
#define ptrdiff_t	86,2407
#define stStaParam	93,2537
#define btVoid	97,2614
typedef enum sc sc100,2663
} sc_t;sc_t125,4074
typedef enum st st129,4120
} st_t;st_t157,5278
typedef enum tq tq161,5328
} tq_t;tq_t169,5623
typedef enum bt bt173,5669
} bt_t;bt_t202,6930
typedef enum lang lang206,6983
} lang_t;lang_t216,7242
typedef enum glevel glevel220,7300
} glevel_t;glevel_t225,7413
typedef struct scope scope229,7468
} scope_t;scope_t234,7645
struct filehdr global_hdr;236,7657
int	 errors	238,7704
int	 want_aux	239,7740
int	 want_line	240,7781
int	 want_rfd	241,7826
int	 want_scope	242,7878
int	 tfile	243,7935
int	 tfile_fd;244,7980
off_t	 tfile_offset;245,8029
scope_t	*cur_scope	246,8083
scope_t	*free_scope	247,8135
HDRR	 sym_hdr;248,8187
char	*l_strings;249,8225
char	*e_strings;250,8263
SYMR	*l_symbols;251,8304
EXTR	*e_symbols;252,8342
LINER	*lines;253,8383
DNR	*dense_nums;254,8418
OPTR	*opt_symbols;255,8456
AUXU	*aux_symbols;256,8503
char	*aux_used;257,8547
FDR	*file_desc;258,8601
ulong	*rfile_desc;259,8636
PDR	*proc_desc;260,8683
extern char *optarg;284,9587
extern int   optind;285,9608
extern int   opterr;286,9629
#define __define_stab(__define_stab290,9723
struct {short code; char string[10];} stab_names[291,9786
read_seek 300,9966
lang_to_string 334,10791
sc_to_string(357,11267
st_to_string(395,12333
glevel_to_string 436,13410
type_to_string 454,13708
print_global_hdr 767,20987
print_sym_hdr 822,22427
print_symbol 896,24712
print_aux 1075,29044
emit_aggregate 1101,29484
print_file_desc 1141,30481
read_tfile __proto(1366,37017
main 1466,39365
fancy_abort 1593,42542
fatal(1600,42628
xmalloc 1610,42764

mips-tfile.c,9466
#define saber_stop(saber_stop611,22343
#define __LINE__ 615,22389
typedef void *PTR_T;PTR_T619,22432
typedef const void *CPTR_T;CPTR_T620,22453
#define __proto(__proto621,22481
#define PVPROTO(PVPROTO623,22517
#define VPROTO(VPROTO624,22545
#define VA_START(VA_START625,22582
typedef void *PTR_T;PTR_T630,22719
typedef void *CPTR_T;CPTR_T631,22740
typedef char *PTR_T;PTR_T634,22769
typedef char *CPTR_T;CPTR_T635,22811
#define __proto(__proto638,22841
#define const639,22863
#define PVPROTO(PVPROTO641,22892
#define VPROTO(VPROTO642,22918
#define VA_START(VA_START643,22968
#define Size_t	656,23521
#define Size_t	658,23561
#define Ptrdiff_t	660,23597
static int	 line_number;686,24326
static int	 cur_line_start;687,24351
static int	 debug;688,24379
static int	 had_errors;689,24398
static char	*progname;690,24422
static char	*input_name;691,24445
main 694,24475
#define STAB_CODE_TYPE 729,25224
#define STAB_CODE_TYPE 731,25276
#define HAS_STDLIB_H735,25330
#define HAS_UNISTD_H736,25351
extern int errno;748,25490
#define MALLOC_CHECK753,25596
#define IS_ASM_IDENT(IS_ASM_IDENT757,25632
typedef enum sc sc764,25810
} sc_t;sc_t789,27215
typedef enum st st793,27261
} st_t;st_t815,28234
typedef enum tq tq819,28284
} tq_t;tq_t827,28579
typedef enum bt bt831,28625
#define bt_Void	bt_Void862,29866
} bt_t;bt_t866,29938
enum coff_storage coff_storage871,29985
  C_EFCN	872,30005
  C_NULL	873,30020
  C_AUTO	874,30034
  C_EXT	875,30048
  C_STAT	876,30062
  C_REG	877,30076
  C_EXTDEF	878,30090
  C_LABEL	879,30106
  C_ULABEL	880,30121
  C_MOS	881,30137
  C_ARG	882,30151
  C_STRTAG	883,30165
  C_MOU	884,30182
  C_UNTAG	885,30197
  C_TPDEF	886,30213
  C_USTATIC	887,30229
  C_ENTAG	888,30247
  C_MOE	889,30263
  C_REGPARM	890,30278
  C_FIELD	891,30296
  C_BLOCK	892,30312
  C_FCN	893,30329
  C_EOS	894,30345
  C_FILE	895,30361
  C_LINE	896,30377
  C_ALIAS	897,30393
  C_HIDDEN	898,30410
  C_MAX	899,30428
typedef enum coff_type coff_type903,30500
} coff_type_t;coff_type_t921,30780
typedef enum coff_dt coff_dt924,30831
} coff_dt_t;coff_dt_t930,30923
#define N_BTMASK	932,30937
#define N_TMASK	933,30994
#define N_BT_SHIFT	934,31053
#define N_TQ_SHIFT	935,31112
#define	N_TQ	936,31169
typedef enum hash_state hash_state939,31260
} hash_state_t;hash_state_t943,31450
enum alloc_type alloc_type947,31521
  alloc_type_none,948,31539
  alloc_type_scope,949,31577
  alloc_type_vlinks,950,31630
  alloc_type_shash,951,31687
  alloc_type_thash,952,31734
  alloc_type_tag,953,31779
  alloc_type_forward,954,31829
  alloc_type_thead,955,31886
  alloc_type_varray,956,31936
  alloc_type_last	957,31990
#define WORD_ALIGN(WORD_ALIGN961,32053
#define DWORD_ALIGN(DWORD_ALIGN962,32130
#define PAGE_SIZE 976,32727
#define PAGE_USIZE 979,32786
#define MAX_CLUSTER_PAGES 984,32934
#define MAX_CLUSTER_PAGES 986,32969
typedef struct vlinks vlinks992,33071
} vlinks_t;vlinks_t997,33301
typedef struct varray varray1001,33344
} varray_t;varray_t1008,33726
#define OBJECTS_PER_PAGE(OBJECTS_PER_PAGE1011,33760
#define OBJECTS_PER_PAGE(OBJECTS_PER_PAGE1013,33825
#define INIT_VARRAY(INIT_VARRAY1016,33902
typedef unsigned long symint_t;symint_t1026,34278
typedef struct scope scope1030,34389
} scope_t;scope_t1036,34637
typedef struct forward forward1040,34722
} forward_t;forward_t1046,35013
typedef struct tag tag1051,35137
} tag_t;tag_t1060,35635
typedef struct thead thead1064,35692
} thead_t;thead_t1068,35864
typedef union small_free small_free1072,35959
} small_free_t;small_free_t1077,36171
#define SHASH_SIZE 1084,36298
#define HASH_LEN_MAX 1087,36330
typedef struct shash shash1089,36398
} shash_t;shash_t1099,36834
#define THASH_SIZE 1108,37113
typedef struct thash thash1111,37144
} thash_t;thash_t1115,37305
typedef struct efdr efdr1120,37435
} efdr_t;efdr_t1138,38227
static efdr_t init_file 1141,38286
static efdr_t *first_file;1194,40534
static efdr_t **last_file_ptr 1195,40591
typedef union page page1199,40720
} page_t;page_t1216,41478
typedef struct alloc_info alloc_info1220,41566
} alloc_info_t;alloc_info_t1228,42012
typedef struct type_info type_info1231,42073
} type_info_t;type_info_t1245,42805
static type_info_t type_info_init 1248,42862
static varray_t file_desc	1291,43601
static varray_t dense_num	1292,43651
static varray_t tag_strings	1293,43698
static varray_t ext_strings	1294,43748
static varray_t ext_symbols	1295,43798
static shash_t	*orig_str_hash[1297,43849
static shash_t	*ext_str_hash 1298,43892
static shash_t	*tag_hash 1299,43935
static type_info_t int_type_info;1305,44191
static type_info_t void_type_info;1306,44225
static type_info_t last_func_type_info;1307,44260
static EXTR	  *last_func_eptr;1308,44300
static bt_t map_coff_types[1318,44721
static sc_t map_coff_storage[1338,45259
static st_t map_coff_sym_type[1449,48301
static tq_t map_coff_derived_type[1560,51357
static alloc_info_t alloc_counts[1569,51630
static struct filehdr orig_file_header;1573,51762
static HDRR	 orig_sym_hdr;1575,51836
static char	*orig_linenum;1576,51896
static DNR	*orig_dense;1577,51944
static PDR	*orig_procs;1578,51990
static SYMR	*orig_local_syms;1579,52033
static OPTR	*orig_opt_syms;1580,52084
static AUXU	*orig_aux_syms;1581,52141
static char	*orig_local_strs;1582,52195
static char	*orig_ext_strs;1583,52246
static FDR	*orig_files;1584,52299
static symint_t	*orig_rfds;1585,52348
static EXTR	*orig_ext_syms;1586,52405
#define CHECK(CHECK1590,52550
#define ORIG_LINENUM(ORIG_LINENUM1593,52672
#define ORIG_DENSE(ORIG_DENSE1594,52772
#define ORIG_PROCS(ORIG_PROCS1595,52868
#define ORIG_FILES(ORIG_FILES1596,52964
#define ORIG_LSYMS(ORIG_LSYMS1597,53060
#define ORIG_LSTRS(ORIG_LSTRS1598,53161
#define ORIG_ESYMS(ORIG_ESYMS1599,53262
#define ORIG_ESTRS(ORIG_ESTRS1600,53361
#define ORIG_OPT(ORIG_OPT1601,53460
#define ORIG_AUX(ORIG_AUX1602,53558
#define ORIG_RFDS(ORIG_RFDS1603,53656
static HDRR	symbolic_header;1606,53782
static efdr_t  *cur_file_ptr	1607,53834
static PDR     *cur_proc_ptr	1608,53911
static SYMR    *cur_oproc_begin	1609,53984
static SYMR    *cur_oproc_end	1610,54066
static PDR     *cur_oproc_ptr	1611,54144
static thead_t *cur_tag_head	1612,54219
static long	file_offset	1613,54287
static long	max_file_offset	1614,54343
static FILE    *object_stream	1615,54403
static FILE    *obj_in_stream	1616,54477
static char    *progname	1617,54550
static char    *input_name	1618,54619
static char    *object_name	1619,54682
static char    *obj_in_name	1620,54755
static char    *cur_line_start	1621,54829
static char    *cur_line_ptr	1622,54901
static unsigned	cur_line_nbytes	1623,54974
static unsigned	cur_line_alloc	1624,55043
static long	line_number	1625,55110
static int	debug	1626,55172
static int	version	1627,55219
static int	had_errors	1628,55268
static int	rename_output	1629,55328
static int	delete_input	1630,55391
static int	stabs_seen	1631,55459
#define STABS_SYMBOL 1636,55615
static char stabs_symbol[1639,55653
#define STATIC 1645,55793
extern char *optarg;1765,59169
extern int   optind;1766,59190
extern int   opterr;1767,59211
extern char *version_string;1768,59232
extern char *sys_siglist[1771,59313
#define	SEEK_SET 1776,59432
#define	SEEK_CUR 1777,59484
#define	SEEK_END 1778,59559
typedef struct _pseudo_ops _pseudo_ops1787,59862
} pseudo_ops_t;pseudo_ops_t1791,60054
static pseudo_ops_t pseudo_ops[1793,60071
add_varray_page 1811,60691
#define HASHBITS 1842,61459
hash_string 1845,61497
add_string 1881,62528
add_local_symbol 1934,63831
add_ext_symbol 2111,68814
add_aux_sym_symint 2165,70333
add_aux_sym_rndx 2185,70831
add_aux_sym_tir 2208,71393
get_tag 2370,76168
add_unknown_tag 2421,77480
add_procedure 2481,78881
add_file 2546,80792
add_bytes 2626,83243
sc_to_string(2665,84156
st_to_string(2703,85254
read_line __proto(2740,86351
parse_begin 2816,87964
parse_bend 2866,89195
parse_def 2924,90671
parse_end 3500,104609
parse_ent 3562,106188
parse_file 3600,106953
mark_stabs 3628,107557
parse_stabs_common 3673,108706
parse_stabs 3872,113271
parse_stabn 3888,113598
parse_input __proto(3899,113837
update_headers __proto(3962,115334
#define ALIGN_SYMTABLE_OFFSET(ALIGN_SYMTABLE_OFFSET4051,118349
write_varray 4148,121005
write_object __proto(4191,122166
read_seek 4410,128181
copy_object __proto(4479,129887
main 4853,141615
catch_signal 5072,147454
pfatal_with_name 5087,147769
out_of_bounds 5111,148332
allocate_cluster 5136,149111
allocate_cluster 5153,149443
static page_t	*cluster_ptr	5179,150074
static unsigned	 pages_left	5180,150109
allocate_multiple_pages 5188,150244
free_multiple_pages 5218,150813
allocate_page __proto(5249,151463
allocate_scope __proto(5271,151845
free_scope 5310,152853
allocate_vlinks __proto(5329,153217
allocate_shash __proto(5362,154060
allocate_thash __proto(5395,154886
allocate_tag __proto(5428,155734
free_tag 5467,156702
allocate_forward __proto(5486,157057
free_forward 5525,158105
allocate_thead __proto(5544,158470
free_thead 5583,159478
fatal VPROTO(5607,159895
error VPROTO(5637,160417
fatal 5669,160962
error 5677,161065
fancy_abort 5691,161396
botch 5701,161559
xmalloc 5710,161679
xcalloc 5726,161999
xrealloc 5743,162391
xfree 5759,162699
local_index 5773,162959
local_rindex 5789,163177

obstack.c,1245
#define OBSTACK_INTERFACE_VERSION 33,1319
#define ELIDE_CODE48,2169
#define POINTER 57,2260
#define POINTER 59,2289
struct fooalign fooalign63,2356
#define DEFAULT_ALIGNMENT 64,2393
union fooround fooround69,2703
#define DEFAULT_ROUNDING 70,2739
#define COPYING_UNIT 77,3044
#define EXIT_FAILURE 98,3699
int obstack_exit_failure 100,3729
struct obstack *_obstack;105,3876
#define CALL_CHUNKFUN(CALL_CHUNKFUN114,4286
#define CALL_FREEFUN(CALL_FREEFUN119,4465
#define CALL_CHUNKFUN(CALL_CHUNKFUN127,4688
#define CALL_FREEFUN(CALL_FREEFUN132,4863
_obstack_begin 152,5482
_obstack_begin_1 210,7306
_obstack_newchunk 276,9472
_obstack_allocated_p 346,11876
_obstack_free 374,12736
obstack_free 408,13728
_obstack_memory_used 440,14673
#   define _(_458,15011
#  define _(_461,15059
print_and_abort 466,15110
POINTER 486,15795
POINTER 492,15896
int (obstack_object_size)498,16007
int (obstack_room)504,16118
int (obstack_make_room)510,16215
void (obstack_grow)517,16355
void (obstack_grow0)525,16519
void (obstack_1grow)533,16685
void (obstack_blank)540,16820
void (obstack_1grow_fast)547,16946
void (obstack_blank_fast)554,17091
POINTER 561,17227
POINTER 567,17332
POINTER 574,17468
POINTER 582,17642

optabs.c,5341
optab add_optab;44,1380
optab sub_optab;45,1397
optab smul_optab;46,1414
optab smul_highpart_optab;47,1432
optab umul_highpart_optab;48,1459
optab smul_widen_optab;49,1486
optab umul_widen_optab;50,1510
optab sdiv_optab;51,1534
optab sdivmod_optab;52,1552
optab udiv_optab;53,1573
optab udivmod_optab;54,1591
optab smod_optab;55,1612
optab umod_optab;56,1630
optab flodiv_optab;57,1648
optab ftrunc_optab;58,1668
optab and_optab;59,1688
optab ior_optab;60,1705
optab xor_optab;61,1722
optab ashl_optab;62,1739
optab lshr_optab;63,1757
optab ashr_optab;64,1775
optab rotl_optab;65,1793
optab rotr_optab;66,1811
optab smin_optab;67,1829
optab smax_optab;68,1847
optab umin_optab;69,1865
optab umax_optab;70,1883
optab mov_optab;72,1902
optab movstrict_optab;73,1919
optab neg_optab;75,1943
optab abs_optab;76,1960
optab one_cmpl_optab;77,1977
optab ffs_optab;78,1999
optab sqrt_optab;79,2016
optab sin_optab;80,2034
optab cos_optab;81,2051
optab cmp_optab;83,2069
optab ucmp_optab;84,2086
optab tst_optab;85,2161
optab strlen_optab;87,2179
enum insn_code extendtab[90,2269
enum insn_code fixtab[93,2410
enum insn_code fixtrunctab[94,2474
enum insn_code floattab[95,2543
optab code_to_optab[98,2660
rtx extendsfdf2_libfunc;103,2801
rtx extendsfxf2_libfunc;104,2826
rtx extendsftf2_libfunc;105,2851
rtx extenddfxf2_libfunc;106,2876
rtx extenddftf2_libfunc;107,2901
rtx truncdfsf2_libfunc;109,2927
rtx truncxfsf2_libfunc;110,2951
rtx trunctfsf2_libfunc;111,2975
rtx truncxfdf2_libfunc;112,2999
rtx trunctfdf2_libfunc;113,3023
rtx memcpy_libfunc;115,3048
rtx bcopy_libfunc;116,3068
rtx memcmp_libfunc;117,3087
rtx bcmp_libfunc;118,3107
rtx memset_libfunc;119,3125
rtx bzero_libfunc;120,3145
rtx throw_libfunc;122,3165
rtx sjthrow_libfunc;123,3184
rtx sjpopnthrow_libfunc;124,3205
rtx terminate_libfunc;125,3230
rtx setjmp_libfunc;126,3253
rtx longjmp_libfunc;127,3273
rtx get_dynamic_handler_chain_libfunc;128,3294
rtx eqhf2_libfunc;130,3334
rtx nehf2_libfunc;131,3353
rtx gthf2_libfunc;132,3372
rtx gehf2_libfunc;133,3391
rtx lthf2_libfunc;134,3410
rtx lehf2_libfunc;135,3429
rtx eqsf2_libfunc;137,3449
rtx nesf2_libfunc;138,3468
rtx gtsf2_libfunc;139,3487
rtx gesf2_libfunc;140,3506
rtx ltsf2_libfunc;141,3525
rtx lesf2_libfunc;142,3544
rtx eqdf2_libfunc;144,3564
rtx nedf2_libfunc;145,3583
rtx gtdf2_libfunc;146,3602
rtx gedf2_libfunc;147,3621
rtx ltdf2_libfunc;148,3640
rtx ledf2_libfunc;149,3659
rtx eqxf2_libfunc;151,3679
rtx nexf2_libfunc;152,3698
rtx gtxf2_libfunc;153,3717
rtx gexf2_libfunc;154,3736
rtx ltxf2_libfunc;155,3755
rtx lexf2_libfunc;156,3774
rtx eqtf2_libfunc;158,3794
rtx netf2_libfunc;159,3813
rtx gttf2_libfunc;160,3832
rtx getf2_libfunc;161,3851
rtx lttf2_libfunc;162,3870
rtx letf2_libfunc;163,3889
rtx floatsisf_libfunc;165,3909
rtx floatdisf_libfunc;166,3932
rtx floattisf_libfunc;167,3955
rtx floatsidf_libfunc;169,3979
rtx floatdidf_libfunc;170,4002
rtx floattidf_libfunc;171,4025
rtx floatsixf_libfunc;173,4049
rtx floatdixf_libfunc;174,4072
rtx floattixf_libfunc;175,4095
rtx floatsitf_libfunc;177,4119
rtx floatditf_libfunc;178,4142
rtx floattitf_libfunc;179,4165
rtx fixsfsi_libfunc;181,4189
rtx fixsfdi_libfunc;182,4210
rtx fixsfti_libfunc;183,4231
rtx fixdfsi_libfunc;185,4253
rtx fixdfdi_libfunc;186,4274
rtx fixdfti_libfunc;187,4295
rtx fixxfsi_libfunc;189,4317
rtx fixxfdi_libfunc;190,4338
rtx fixxfti_libfunc;191,4359
rtx fixtfsi_libfunc;193,4381
rtx fixtfdi_libfunc;194,4402
rtx fixtfti_libfunc;195,4423
rtx fixunssfsi_libfunc;197,4445
rtx fixunssfdi_libfunc;198,4469
rtx fixunssfti_libfunc;199,4493
rtx fixunsdfsi_libfunc;201,4518
rtx fixunsdfdi_libfunc;202,4542
rtx fixunsdfti_libfunc;203,4566
rtx fixunsxfsi_libfunc;205,4591
rtx fixunsxfdi_libfunc;206,4615
rtx fixunsxfti_libfunc;207,4639
rtx fixunstfsi_libfunc;209,4664
rtx fixunstfdi_libfunc;210,4688
rtx fixunstfti_libfunc;211,4712
rtx chkr_check_addr_libfunc;213,4737
rtx chkr_set_right_libfunc;214,4766
rtx chkr_copy_bitmap_libfunc;215,4794
rtx chkr_check_exec_libfunc;216,4824
rtx chkr_check_str_libfunc;217,4853
rtxfun bcc_gen_fctn[222,5016
enum insn_code setcc_gen_code[228,5200
enum insn_code movcc_gen_code[236,5570
add_equal_note 264,6782
widen_operand 314,8539
expand_binop 356,9952
sign_expand_binop 1640,48749
expand_twoval_binop 1702,50932
expand_unop 1832,54850
expand_abs 2104,62106
expand_complex_abs 2195,64789
emit_unop_insn 2390,69971
emit_no_conflict_block 2459,72265
emit_libcall_block 2584,76078
emit_clr_insn 2655,78006
emit_0_to_1_insn 2665,78159
emit_cmp_insn 2686,78797
can_compare_p 2913,85830
emit_float_lib_cmp 2930,86212
emit_indirect_jump 3129,89459
emit_conditional_move 3157,90325
can_conditionally_move_p 3271,93481
gen_add2_insn 3292,93978
have_add2_insn 3306,94387
gen_sub2_insn 3315,94582
have_sub2_insn 3329,94991
gen_move_insn 3339,95236
can_extend_p 3423,97730
gen_extend_insn 3434,98048
can_fix_p 3452,98672
can_float_p 3470,99198
expand_float 3484,99621
ftruncify 3743,107229
expand_fix 3751,107369
init_optab 3968,114042
init_libfuncs 4004,115217
init_integral_libfuncs 4044,116407
init_floating_libfuncs 4058,116858
init_complex_libfuncs 4072,117311
init_optabs 4084,117621
#define INT_TYPE_SIZE 4274,124060
ldexp(4412,130660

pexecute.c,754
#define PEXECUTE_FIRST 36,1283
#define PEXECUTE_LAST 37,1310
#define PEXECUTE_ONE 38,1337
#define PEXECUTE_SEARCH 39,1395
#define PEXECUTE_VERBOSE 40,1422
#define STDIN_FILE_NO 46,1512
#define STDOUT_FILE_NO 49,1564
#define READ_PORT 52,1638
#define WRITE_PORT 55,1707
static char *install_error_msg 57,1729
static int last_pid 119,4254
static int last_status 120,4279
static int last_reaped 121,4307
pexecute 124,4340
pwait 200,6006
#define fix_argv(fix_argv231,6668
fix_argv 239,6882
pexecute 275,7594
pwait 299,8141
pexecute 318,8469
pwait 342,9032
static int first_time 372,9795
pexecute 375,9827
pwait 470,12404
pfinish 483,12624
#define vfork(vfork495,12873
#define vfork 499,13019
pexecute 507,13101
pwait 623,15939

prefix.c,166
static HKEY reg_key 85,3116
get_key_value 93,3261
concat VPROTO(116,3638
save_string 170,4586
lookup_key 186,4834
translate_name 234,5863
update_path 289,6932

print-rtl.c,450
#define DEBUG_PRINT_REG(DEBUG_PRINT_REG32,1028
static char *reg_names[39,1222
static char *reg_names[41,1277
static FILE *outfile;44,1328
char spaces[46,1351
static int sawclose 48,1532
static int indent;50,1558
extern char **insn_name_ptr;54,1653
print_rtx 59,1771
print_inline_rtx 231,5559
debug_rtx 249,5863
int debug_rtx_count 260,6085
debug_rtx_list 269,6422
debug_rtx_find 297,7043
print_rtl 322,7553
print_rtl_single 357,8155

print-tree.c,249
extern char **tree_code_name;26,894
extern char *mode_name[28,925
#define HASH_SIZE 36,1110
struct bucketbucket38,1132
static struct bucket **table;44,1188
debug_tree 51,1375
print_node_brief 67,1771
indent_to 162,4203
print_node 179,4546

profile.c,1460
struct adj_listadj_list61,2434
#define ARC_TARGET(ARC_TARGET75,2698
#define ARC_SOURCE(ARC_SOURCE76,2742
#define ARC_COUNT(ARC_COUNT77,2786
struct bb_infobb_info82,2953
static int *label_to_bb;97,3244
static int label_to_bb_size;101,3328
static struct bb_info *bb_graph;105,3419
static char *bbg_file_name;109,3529
static FILE *bbg_file;110,3557
static char *da_file_name;114,3653
static FILE *da_file;115,3680
static FILE *bb_file;118,3773
static char *last_bb_file_name;122,3845
static int ignore_next_note;128,4048
int count_instrumented_arcs;133,4191
int return_label_execution_count;137,4272
static int total_num_blocks;142,4397
static int total_num_arcs;143,4426
static int total_num_arcs_instrumented;144,4453
static int total_num_blocks_created;145,4493
static int total_num_passes;146,4530
static int total_num_times_called;147,4559
static int total_hist_br_prob[148,4594
static int total_num_never_executed;149,4629
static int total_num_branches;150,4666
#define LONG_TYPE_SIZE 161,5048
static int need_func_profiler 166,5183
instrument_arcs 176,5453
output_gcov_string 394,12442
branch_prob 439,13885
init_arc 1194,37217
find_spanning_tree 1225,38171
fill_spanning_tree 1319,41173
expand_spanning_tree 1339,41656
init_branch_prob 1359,42238
end_branch_prob 1427,44173
static rtx profiler_label;1485,45993
init_arc_profiler 1490,46072
output_arc_profiler 1501,46378
output_func_start_profiler 1585,49446

protoize.c,6286
#define __STDC__ 26,1056
#define VOLATILE 30,1176
#define VOLATILE32,1208
#define const36,1250
#define volatile37,1264
#define POSIX47,1574
#define _POSIX_SOURCE57,1929
#define getopt 82,2559
extern int errno;87,2636
extern int sys_nerr;91,2684
extern char *sys_errlist[92,2705
extern char *version_string;97,2772
#define my_access(my_access106,3177
#define my_stat(my_stat107,3233
#define my_link(my_link108,3283
#define my_unlink(my_unlink109,3348
#define my_open(my_open110,3394
#define my_chmod(my_chmod111,3459
#define PEXECUTE_FIRST 121,3784
#define PEXECUTE_LAST 122,3810
#define PEXECUTE_SEARCH 123,3836
typedef void * pointer_type;pointer_type130,4043
typedef const void * const_pointer_type;const_pointer_type131,4072
typedef char * pointer_type;pointer_type133,4119
typedef char * const_pointer_type;const_pointer_type134,4148
#define R_OK 147,4342
#define W_OK 148,4397
#define X_OK 149,4453
#define F_OK 150,4511
#define O_RDONLY 153,4586
#define O_WRONLY 157,4637
#define WIFSIGNALED(WIFSIGNALED161,4691
#define WTERMSIG(WTERMSIG164,4782
#define WIFEXITED(WIFEXITED167,4840
#define WEXITSTATUS(WEXITSTATUS170,4908
typedef void voidfn voidfn177,5084
extern VOLATILE voidfn abort;178,5108
#define fork 210,5930
extern size_t   strlen 204,5772
#define NONCONST219,6132
#define STRINGIFY(STRINGIFY224,6239
#define STRINGIFY(STRINGIFY226,6279
#define STD_PROTO_DIR 232,6404
struct unexpansion_struct unexpansion_struct264,7333
typedef struct unexpansion_struct unexpansion;unexpansion268,7414
static const unexpansion unexpansions[277,7775
#define HASH_TABLE_SIZE	286,8050
static const int hash_mask 290,8137
#define STANDARD_INCLUDE_DIR 296,8311
#define LOCAL_INCLUDE_DIR 300,8389
struct default_include default_include303,8444
struct default_include { const char *fname; int x1, x2; } include_defaults[303,8444
struct string_liststring_list340,9838
struct string_list *directory_list;348,9969
struct string_list *exclude_list;354,10167
static const char * const other_var_style 366,10652
static const char * const other_var_style 368,10740
static const char *varargs_style_indicator 371,10920
typedef struct hash_table_entry_struct hash_table_entry;hash_table_entry382,11556
typedef struct def_dec_info_struct def_dec_info;def_dec_info386,11689
typedef struct file_info_struct file_info;file_info387,11738
typedef struct f_list_chain_item_struct f_list_chain_item;f_list_chain_item388,11781
struct hash_table_entry_struct hash_table_entry_struct402,12636
#define ddip 410,12868
#define fip 411,12893
typedef hash_table_entry hash_table[hash_table415,12977
struct file_info_struct file_info_struct420,13170
struct f_list_chain_item_struct f_list_chain_item_struct443,14288
struct def_dec_info_struct def_dec_info_struct455,14868
static const char *pname;480,16202
static int errors 485,16333
static const char *compiler_file_name 493,16572
static int version_flag 495,16620
static int quiet_flag 496,16683
static int nochange_flag 497,16749
static int nosave_flag 499,16855
static int keep_flag 500,16919
static const char ** compile_params 501,16980
static const char *indent_string 503,17069
static int local_flag 506,17206
static int global_flag 507,17273
static int cplusplus_flag 508,17325
static const char *nondefault_syscalls_dir 509,17395
static int input_file_name_index 517,17741
static int aux_info_file_name_index 521,17916
static int n_base_source_files 525,18031
static const char **base_source_filenames;530,18205
static int current_aux_info_lineno;536,18434
static const char *convert_filename;540,18545
static const char *invocation_filename;546,18781
static const char *orig_text_base;551,18949
static const char *orig_text_limit;556,19132
static const char *clean_text_base;561,19295
static const char *clean_text_limit;566,19478
static const char * clean_read_ptr;571,19664
static char *repl_text_base;576,19832
static char *repl_text_limit;581,20013
static char * repl_write_ptr;587,20205
static const char *last_known_line_start;593,20434
static int last_known_line_number;599,20654
static hash_table filename_primary;603,20724
static hash_table function_name_primary;607,20800
static jmp_buf source_confusion_recovery;612,20996
static char *cwd_buffer;616,21110
static const char * saved_clean_read_ptr;621,21250
static char * saved_repl_write_ptr;626,21408
my_strerror(633,21516
xmalloc 658,21917
xrealloc 677,22308
xfree 699,22837
savestring 709,22994
savestring2 721,23238
fancy_abort 737,23660
dupnstr 747,23866
substr 762,24205
safe_read 786,24653
safe_write 814,25141
save_pointers 840,25655
restore_pointers 850,25904
is_id_char 859,26098
usage 869,26311
in_system_include_dir 886,26834
file_could_be_converted 907,27346
file_normally_convertible 941,28389
is_syscalls_file 993,29544
needs_to_be_converted 1013,30274
directory_specified_p 1052,31194
file_excluded_p 1079,31729
string_list_cons 1097,32158
visit_each_hash_node 1119,32832
add_symbol 1142,33507
lookup 1159,33962
free_def_dec 1192,34836
unexpand_if_needed 1219,35389
abspath 1302,37888
shortpath 1409,41101
find_file 1497,43516
aux_info_corrupted 1538,44628
check_aux_info 1549,44954
find_corresponding_lparen 1561,45240
referenced_file_is_newer 1588,45878
save_def_or_dec 1636,47509
munge_compile_params 2023,59838
gen_aux_info_file 2098,62070
process_aux_info_file 2165,63895
rename_c_file 2465,72390
reverse_def_dec_list 2513,74085
find_extern_def 2555,75498
find_static_definition 2718,82135
connect_defs_and_decs 2768,83913
identify_lineno 2893,89945
declare_source_confusing 2908,90255
check_source 2929,90909
seek_to_line 2953,91897
forward_to_next_token_char 2973,92401
output_bytes 2986,92772
output_string 3007,93372
output_up_to 3033,94318
other_variable_style_function 3053,94913
edit_fn_declaration 3092,95942
edit_formals_lists 3308,104050
find_rightmost_formals_list 3418,107458
add_local_decl 3536,111601
add_global_decls 3644,115669
edit_fn_definition 3735,118623
do_cleaning 3879,123451
careful_find_l_paren 3983,126540
scan_for_missed_items 4022,127725
edit_file 4137,131842
do_processing 4445,141454
static struct option longopts[4535,144733
main 4560,145241

pself.c,10
main(1,0

pself1.c,0

pself2.c,10
main(1,0

pself3.c,10
main(1,0

real.c,6792
extern int errno;29,1063
#define DEC 114,4908
#define IBM 118,5018
#define IEEE121,5110
#define UNK 125,5247
#define REAL_WORDS_BIG_ENDIAN 130,5326
#define DEC 140,5750
#define IBM 144,5858
#define IEEE147,5948
#define UNK 150,6018
#define REAL_WORDS_BIG_ENDIAN 155,6097
#define INFINITY162,6335
#define NANS163,6352
#define INFINITY169,6455
#define EMUSHORT 177,6639
#define EMUSHORT_SIZE 178,6661
#define EMULONG_SIZE 179,6702
#define EMUSHORT 182,6784
#define EMUSHORT_SIZE 183,6807
#define EMULONG_SIZE 184,6849
#define EMUSHORT 187,6930
#define EMUSHORT_SIZE 188,6951
#define EMULONG_SIZE 189,6991
#define EMUSHORT 192,7071
#define EMUSHORT_SIZE 193,7093
#define EMULONG_SIZE 194,7134
#define EMU_NON_COMPILE197,7260
#define EMULONG 204,7353
#define EMULONG 207,7419
#define EMULONG 210,7484
#define EMULONG 213,7554
#define EMU_NON_COMPILE216,7664
#define EMU_NON_COMPILE225,7807
#define NE 238,8206
#define MAXDECEXP 239,8219
#define MINDECEXP 240,8242
#define GET_REAL(GET_REAL241,8266
#define PUT_REAL(PUT_REAL242,8325
#define NE 245,8439
#define MAXDECEXP 246,8453
#define MINDECEXP 247,8476
#define GET_REAL(GET_REAL248,8500
#define PUT_REAL(PUT_REAL249,8559
#define NE 251,8624
#define MAXDECEXP 252,8637
#define MINDECEXP 253,8660
#define GET_REAL(GET_REAL258,8797
#define PUT_REAL(PUT_REAL273,9221
#define GET_REAL(GET_REAL291,9714
#define PUT_REAL(PUT_REAL292,9776
#define NI 300,9969
#define E 303,10019
#define M 306,10070
#define NBITS 309,10117
#define NDEC 314,10224
#define EXONE 317,10277
extern int extra_warnings;319,10301
extern unsigned EMUSHORT ezero[320,10328
extern unsigned EMUSHORT ezero[], ehalf[320,10328
extern unsigned EMUSHORT ezero[], ehalf[], eone[320,10328
extern unsigned EMUSHORT ezero[], ehalf[], eone[], etwo[320,10328
extern unsigned EMUSHORT elog2[321,10387
extern unsigned EMUSHORT elog2[], esqrt2[321,10387
endian 434,16534
earith 540,18556
etrunci 619,19931
etruncui 642,20343
ereal_atof 666,20838
ereal_negate 703,21435
efixi 720,21694
efixui 743,22110
ereal_from_int 765,22432
ereal_from_uint 832,23720
ereal_to_int 886,24768
ereal_ldexp 930,25635
target_isinf 955,26076
target_isnan 971,26293
target_negative 989,26572
real_value_truncate 999,26769
exact_real_inverse 1054,27762
debug_real 1118,29343
etartdouble 1143,30049
etarldouble 1159,30377
etardouble 1174,30690
etarsingle 1189,30952
ereal_to_decimal 1207,31345
ereal_cmp 1221,31586
ereal_isneg 1234,31806
#define DOMAIN	1403,38527
#define SING	1404,38573
#define OVERFLOW	1405,38616
#define UNDERFLOW	1406,38662
#define TLOSS	1407,38710
#define PLOSS	1408,38757
#define INVALID	1409,38806
unsigned EMUSHORT ezero[1415,38962
extern unsigned EMUSHORT ezero[1418,39078
unsigned EMUSHORT ehalf[1421,39126
extern unsigned EMUSHORT ehalf[1424,39242
unsigned EMUSHORT eone[1427,39289
extern unsigned EMUSHORT eone[1430,39404
unsigned EMUSHORT etwo[1433,39450
extern unsigned EMUSHORT etwo[1436,39565
unsigned EMUSHORT e32[1439,39611
extern unsigned EMUSHORT e32[1442,39725
unsigned EMUSHORT elog2[1445,39820
extern unsigned EMUSHORT elog2[1448,39939
unsigned EMUSHORT esqrt2[1451,40035
extern unsigned EMUSHORT esqrt2[1454,40155
unsigned EMUSHORT epi[1457,40252
extern unsigned EMUSHORT epi[1460,40370
unsigned EMUSHORT ezero[1464,40455
unsigned EMUSHORT ehalf[1466,40537
unsigned EMUSHORT eone[1468,40618
unsigned EMUSHORT etwo[1470,40698
unsigned EMUSHORT e32[1472,40779
unsigned EMUSHORT elog2[1474,40859
unsigned EMUSHORT esqrt2[1476,40944
unsigned EMUSHORT epi[1478,41030
int rndprc 1485,41247
extern int rndprc;1486,41267
eclear 1491,41343
emov 1503,41508
eabs 1516,41678
eneg 1526,41850
eisneg 1536,42026
eisinf 1549,42215
eisnan 1567,42532
einfin 1591,42951
enan 1634,43613
emovi 1649,43880
emovo 1696,44708
ecleaz 1735,45337
ecleazs 1747,45529
emovz 1760,45719
einan 1776,46023
eiisnan 1788,46185
eiisneg 1807,46451
eiinfin 1818,46639
eiisinf 1829,46785
ecmpm 1851,47137
eshdn1 1875,47500
eshup1 1899,47876
eshdn8 1924,48227
eshup8 1945,48565
eshup6 1967,48910
eshdn6 1985,49169
eaddm 2003,49445
esubm 2029,49912
static unsigned EMUSHORT equot[2053,50281
edivm 2063,50420
emulm 2161,51902
m16m 2213,52805
edivm 2257,53647
emulm 2322,55003
static int rlast 2389,56811
static int rw 2390,56834
static unsigned EMUSHORT rmsk 2391,56853
static unsigned EMUSHORT rmbit 2392,56888
static unsigned EMUSHORT rebit 2393,56924
static int re 2394,56960
static unsigned EMUSHORT rbit[2395,56979
emdnorm 2398,57028
static int subflg 2595,60483
esub 2598,60520
eadd 2630,61049
eadd1 2663,61632
ediv 2774,63650
emul 2878,65596
e53toe 2974,67276
e64toe 3076,69117
e113toe 3198,71593
e24toe 3283,72848
etoe113 3378,74538
toe113 3411,75140
etoe64 3469,76071
toe64 3503,76700
etoe53 3619,78589
toe53 3629,78802
etoe53 3640,78950
toe53 3650,79148
etoe53 3661,79316
toe53 3695,79948
etoe24 3791,81443
toe24 3801,81639
etoe24 3811,81811
toe24 3845,82440
ecmp 3942,83947
eround 4004,84913
ltoe 4014,85061
ultoe 4056,86229
eifrac 4096,87495
euifrac 4179,89377
eshift 4248,90842
enormlz 4314,91666
#define NTEN 4381,92769
#define MAXP 4382,92785
static unsigned EMUSHORT etens[4385,92837
static unsigned EMUSHORT emtens[4415,94076
static unsigned EMUSHORT etens[4446,95370
static unsigned EMUSHORT emtens[4463,96154
e24toasc 4485,97060
e53toasc 4500,97342
e64toasc 4515,97633
e113toasc 4530,97928
static char wstring[4544,98194
etoasc 4547,98272
asctoe24 4863,104449
asctoe53 4874,104607
asctoe64 4889,104832
asctoe113 4899,104986
asctoe 4909,105129
asctoeg 4920,105326
static unsigned EMUSHORT bmask[5243,111273
efloor 5265,111497
efrexp 5315,112391
eldexp 5339,112829
eremain 5361,113214
eiremain 5397,113858
#define NMSGS 5443,115031
static char *ermsg[5444,115047
int merror 5456,115296
extern int merror;5457,115312
mtherr 5460,115345
dectoe 5483,115911
etodec 5523,117054
todec 5545,117525
ibmtoe 5591,118190
etoibm 5635,119456
toibm 5654,119861
TFMODE_NAN;5713,120843
unsigned EMUSHORT TFbignan[5716,120873
unsigned EMUSHORT TFlittlenan[5718,120972
XFMODE_NAN;5723,121076
unsigned EMUSHORT XFbignan[5726,121106
unsigned EMUSHORT XFlittlenan[5728,121189
DFMODE_NAN;5733,121287
unsigned EMUSHORT DFbignan[5736,121317
unsigned EMUSHORT DFlittlenan[5737,121383
SFMODE_NAN;5742,121470
unsigned EMUSHORT SFbignan[5745,121500
unsigned EMUSHORT SFlittlenan[5746,121550
make_nan 5752,121626
ereal_from_float 5811,122829
ereal_from_double 5848,123888
uditoe 5897,125311
ditoe 5926,125977
etoudi 5975,126977
etodi 6058,128197
static int esqinited 6156,129746
static unsigned short sqrndbit[6157,129772
esqrt 6160,129822
significand_size 6269,132009

recog.c,1597
#define STACK_PUSH_CODE 37,1136
#define STACK_PUSH_CODE 39,1174
int volatile_ok;56,1707
int which_alternative;61,1815
int reload_completed;67,1959
init_recog_no_volatile 74,2162
init_recog 80,2217
recog_memoized 95,2649
check_asm_operands 107,2935
#define MAX_CHANGE_LOCS	136,3620
static rtx change_objects[138,3670
static int change_old_codes[139,3714
static rtx *change_locs[140,3760
static rtx change_olds[141,3802
static int num_changes 143,3844
validate_change 164,4801
apply_change_group 209,5834
num_validated_changes 303,8589
cancel_changes 311,8695
validate_replace_rtx_1 331,9204
validate_replace_rtx 527,15499
next_insn_tests_no_inequality 540,15834
next_insns_test_no_inequality 560,16385
find_single_use_1 590,17192
find_single_use 702,20284
general_operand 768,22010
address_operand 854,24391
register_operand 876,25207
scratch_operand 920,26663
immediate_operand 936,27071
const_int_operand 959,27716
const_double_operand 970,27945
nonimmediate_operand 989,28534
nonmemory_operand 999,28766
push_operand 1049,30351
memory_address_p 1070,30700
memory_operand 1091,31131
indirect_operand 1116,31820
comparison_operator 1155,33165
asm_noperands 1168,33504
decode_asm_operands 1246,36172
find_constant_term_loc 1383,40312
offsettable_memref_p 1437,41578
offsettable_nonstrict_memref_p 1448,41836
offsettable_address_p 1466,42388
mode_dependent_address_p 1527,44293
mode_independent_operand 1540,44525
adj_offsettable_operand 1566,45073
struct funny_matchfunny_match1634,47287
constrain_operands 1640,47335
reg_fits_class_p 1999,56696

reg-stack.c,1460
#define REG_STACK_SIZE 172,7252
typedef struct stack_defstack_def183,7666
} *stack;stack188,7851
static int max_uid 191,7892
static int blocks;194,7972
static rtx *block_begin;198,8100
static rtx *block_end;202,8233
static char *block_drops_in;205,8323
static stack block_stack_in;208,8411
static HARD_REG_SET *block_out_reg_set;211,8509
static int *block_number;218,8869
  FP_mode_reg[222,8973
#define FP_MODE_REG(FP_MODE_REG224,9047
#define BLOCK_NUM(BLOCK_NUM230,9257
extern rtx forced_labels;234,9371
mark_regs_pat 278,11262
straighten_stack 304,11802
stack_regs_mentioned_p 322,12244
reg_to_stack 360,13278
record_label_references 496,17090
get_true_reg 550,18379
constrain_asm_operands 594,19744
record_asm_reg_life 870,26651
record_reg_life_pat 1086,32874
get_asm_operand_lengths 1138,34138
record_reg_life 1175,35444
find_blocks 1293,39197
uses_reg_or_mem 1378,41274
stack_result 1411,41947
stack_reg_life_analysis 1462,43913
replace_reg 1611,48496
remove_regno_note 1633,48975
get_hard_regnum 1659,49607
delete_insn_for_stacker 1680,50091
emit_pop_insn 1696,50653
emit_swap_insn 1738,51914
move_for_stack_reg 1813,54166
swap_rtx_condition 1953,58289
compare_for_stack_reg 1989,59200
subst_stack_regs_pat 2111,62725
subst_asm_stack_regs 2413,71183
subst_stack_regs 2699,79484
change_stack 2839,84161
goto_block_pat 2943,87193
convert_regs 3061,90317
print_blocks 3155,93159
dump_stack_info 3193,93954

regclass.c,1969
#define REGISTER_MOVE_COST(REGISTER_MOVE_COST40,1316
#define MEMORY_MOVE_COST(MEMORY_MOVE_COST44,1384
#define FORBIDDEN_INC_DEC_CLASSES53,1740
char fixed_regs[64,2073
HARD_REG_SET fixed_reg_set;68,2151
static char initial_fixed_regs[72,2221
char call_used_regs[79,2499
HARD_REG_SET call_used_reg_set;83,2581
HARD_REG_SET losing_caller_save_reg_set;86,2679
static char initial_call_used_regs[90,2762
char call_fixed_regs[98,3145
HARD_REG_SET call_fixed_reg_set;102,3232
int n_non_fixed_regs;106,3305
char global_regs[113,3530
int reg_alloc_order[117,3672
HARD_REG_SET reg_class_contents[122,3819
#define N_REG_INTS 128,4092
static unsigned int_reg_class_contents[131,4189
int reg_class_size[136,4337
enum reg_class reg_class_superclasses[140,4443
enum reg_class reg_class_subclasses[144,4588
enum reg_class reg_class_subunion[149,4743
enum reg_class reg_class_superunion[154,4897
char *reg_names[158,5015
enum machine_mode reg_raw_mode[165,5292
static int move_cost[170,5473
static int may_move_cost[175,5656
static int forbidden_inc_dec_class[182,5850
static char *in_inc_dec;187,5994
init_reg_sets 195,6195
init_reg_sets_1 359,10747
init_reg_modes 401,11790
init_regs 424,12502
choose_hard_reg_mode 438,12877
fix_register 481,14119
globalize_reg 511,14707
struct costscosts544,15573
static struct costs *costs;552,15690
static struct costs op_costs[558,15889
static char *prefclass;563,16068
static char *altclass;575,16574
static int loop_depth;579,16648
static int loop_cost;584,16805
reg_preferred_class 599,17437
reg_alternate_class 608,17592
regclass_init 620,17803
regclass 631,18113
record_reg_classes 1013,30618
copy_cost 1409,41224
record_address_regs 1472,43226
auto_inc_dec_reg_p 1621,47648
allocate_reg_info 1659,48668
int max_parallel;1751,51164
reg_scan 1754,51188
reg_scan_mark_refs 1783,51932
reg_class_subset_p 1906,55641
reg_classes_intersect_p 1924,55996
regset_release_memory 1951,56513

reload.c,2967
#define REG_OK_STRICT88,3893
#define REGISTER_MOVE_COST(REGISTER_MOVE_COST105,4207
#define REGNO_MODE_OK_FOR_BASE_P(REGNO_MODE_OK_FOR_BASE_P109,4283
#define REG_MODE_OK_FOR_BASE_P(REG_MODE_OK_FOR_BASE_P113,4396
int n_reloads;169,7074
rtx reload_in[171,7090
rtx reload_out[172,7118
enum reg_class reload_reg_class[173,7147
enum machine_mode reload_inmode[174,7193
enum machine_mode reload_outmode[175,7239
rtx reload_reg_rtx[176,7286
char reload_optional[177,7319
int reload_inc[178,7354
rtx reload_in_reg[179,7383
char reload_nocombine[180,7415
int reload_opnum[181,7451
enum reload_type reload_when_needed[182,7482
int reload_secondary_p[183,7532
int reload_secondary_in_reload[184,7569
int reload_secondary_out_reload[185,7614
enum insn_code reload_secondary_in_icode[186,7660
enum insn_code reload_secondary_out_icode[187,7715
int n_earlyclobbers;191,7853
rtx reload_earlyclobbers[192,7874
int reload_n_operands;194,7921
static int replace_reloads;204,8250
struct replacementreplacement207,8343
static struct replacement replacements[216,8601
static int n_replacements;219,8747
struct decompositiondecomposition222,8828
static rtx memlocs[233,9260
static int n_memlocs;234,9335
static rtx secondary_memlocs[246,9785
static rtx secondary_memlocs_elim[247,9834
static rtx this_insn;252,10014
static int this_insn_is_asm;255,10111
static int hard_regs_live_known;260,10292
static short *static_reload_reg_p;266,10502
static int subst_reg_equivs_changed;269,10598
static int output_reloadnum;273,10775
#define MATCHES(MATCHES276,10833
#define MERGABLE_RELOADS(MERGABLE_RELOADS283,11122
#define MERGE_TO_OTHER(MERGE_TO_OTHER293,11620
#define ADDR_TYPE(ADDR_TYPE302,11937
push_secondary_reload 351,14174
get_secondary_mem 631,24503
clear_secondary_mem 703,26937
find_valid_class 713,27224
push_reload 775,29347
push_replacement 1457,55022
transfer_replacements 1476,55428
combine_reloads 1499,56200
find_dummy_reload 1683,63812
earlyclobber_operand_p 1830,68375
hard_reg_set_here_p 1848,68783
strict_memory_address_p 1882,69641
operands_match_p 1909,70496
n_occurrences 2035,73966
decompose 2054,74505
immune_p 2178,77504
safe_from_earlyclobber 2224,78713
find_reloads 2253,79755
alternative_allows_memconst 4030,141916
find_reloads_toplev 4065,143028
make_memloc 4212,147888
find_reloads_address 4267,149928
subst_reg_equivs 4579,161180
form_sum 4636,162406
subst_indexed_address 4691,164084
find_reloads_address_1 4763,166368
find_reloads_address_part 5187,179870
subst_reloads 5229,181212
copy_replacements 5275,182643
find_replacement 5316,183726
refers_to_regno_for_reload_p 5375,185523
reg_overlap_mentioned_for_reload_p 5500,188978
refers_to_mem_for_reload_p 5547,190157
find_equiv_reg 5598,191765
find_inc_amount 6033,205602
regno_clobbered_p 6078,206551
static char *reload_when_needed_name[6102,207090
static char *reg_class_names[6117,207439
debug_reload 6122,207569

reload1.c,5406
#define REGISTER_MOVE_COST(REGISTER_MOVE_COST74,2896
#define MEMORY_MOVE_COST(MEMORY_MOVE_COST78,2964
static rtx *reg_last_reload_reg;83,3150
static char *reg_has_output_reload;87,3305
static HARD_REG_SET reg_is_output_reload;91,3441
rtx *reg_equiv_constant;97,3719
rtx *reg_equiv_memory_loc;103,4029
rtx *reg_equiv_address;108,4264
rtx *reg_equiv_mem;112,4425
static int *reg_max_ref_width;115,4520
static rtx *reg_equiv_init;119,4652
static int reg_reloaded_contents[126,5037
static rtx reg_reloaded_insn[132,5339
static int n_spills;135,5469
static rtx spill_reg_rtx[141,5717
static rtx spill_reg_store[146,5948
static short spill_reg_order[152,6192
HARD_REG_SET forbidden_regs;157,6454
static HARD_REG_SET bad_spill_regs;166,6865
static short spill_regs[171,7086
HARD_REG_SET used_spill_regs;178,7390
static int last_spill_reg;183,7524
static short potential_reload_regs[190,7829
static char regs_explicitly_used[195,8068
static HARD_REG_SET counted_for_groups;199,8253
static HARD_REG_SET counted_for_nongroups;205,8539
static char *cannot_omit_stores;211,8827
static char spill_indirect_levels;220,9252
char indirect_symref_ok;226,9509
char double_reg_address_ok;230,9612
static rtx spill_stack_slot[234,9703
static int spill_stack_slot_width[238,9808
char *basic_block_needs[245,10110
int reload_first_uid;249,10245
int caller_save_needed;254,10377
enum reg_class reload_address_base_reg_class;260,10620
enum reg_class reload_address_index_reg_class;266,10888
int reload_in_progress 271,11062
enum insn_code reload_in_optab[277,11273
enum insn_code reload_out_optab[278,11324
struct obstack reload_obstack;284,11540
char *reload_firstobj;285,11571
#define obstack_chunk_alloc 287,11595
#define obstack_chunk_free 288,11631
extern rtx forced_labels;291,11714
extern int *reg_allocno;294,11805
static struct elim_tableelim_table301,12130
} reg_eliminate[319,13075
  {{ FRAME_POINTER_REGNUM,328,13328
  {{ FRAME_POINTER_REGNUM, STACK_POINTER_REGNUM}328,13328
#define NUM_ELIMINABLE_REGS 331,13387
static int num_not_at_initial_offset;336,13660
static int num_eliminable;339,13770
static char *offsets_known_at;348,14218
static int (*offsets_at)349,14249
static int num_labels;353,14347
struct hard_reg_n_uses hard_reg_n_uses355,14371
init_reload 412,17274
reload 537,21255
possible_group_p 2188,78715
count_possible_groups 2249,80546
modes_equiv_for_class_p 2323,83141
spill_failure 2342,83705
new_spill_reg 2361,84417
delete_dead_insn 2436,86935
alter_reg 2464,87831
mark_home_live 2583,92007
mark_scratch_live 2598,92304
set_label_offsets 2620,92875
static struct rtvec_def *old_asm_operands_vec,2774,97487
static struct rtvec_def *old_asm_operands_vec, *new_asm_operands_vec;2774,97487
eliminate_regs 2805,98931
eliminate_regs_in_insn 3376,118232
mark_not_eliminable 3626,127213
spill_hard_reg 3667,128565
scan_paradoxical_subregs 3763,131161
hard_reg_use_compare 3815,132264
order_regs_for_reload 3833,132874
compare_spill_regs 3952,136529
reload_as_needed 3970,137131
forget_old_reloads_1 4246,146290
static enum machine_mode reload_mode[4299,147817
static int reload_nregs[4302,147942
reload_reg_class_lower 4308,148126
static HARD_REG_SET reload_reg_used;4345,149278
static HARD_REG_SET reload_reg_used_in_input_addr[4347,149392
static HARD_REG_SET reload_reg_used_in_inpaddr_addr[4349,149542
static HARD_REG_SET reload_reg_used_in_output_addr[4351,149693
static HARD_REG_SET reload_reg_used_in_outaddr_addr[4353,149844
static HARD_REG_SET reload_reg_used_in_input[4355,149986
static HARD_REG_SET reload_reg_used_in_output[4357,150122
static HARD_REG_SET reload_reg_used_in_op_addr;4359,150254
static HARD_REG_SET reload_reg_used_in_op_addr_reload;4361,150363
static HARD_REG_SET reload_reg_used_in_insn;4363,150472
static HARD_REG_SET reload_reg_used_in_other_addr;4365,150580
static HARD_REG_SET reload_reg_used_at_all;4368,150696
static HARD_REG_SET reload_reg_used_for_inherit;4372,150836
mark_reload_reg_in_use 4379,151058
clear_reload_reg_in_use 4444,152547
reload_reg_free_p 4508,154041
reload_reg_free_before_p 4667,159475
reload_reg_reaches_end_p 4794,164325
reloads_conflict 4923,168915
short reload_order[4996,171328
char reload_inherited[5000,171449
rtx reload_inheritance_insn[5004,171607
rtx reload_override_in[5008,171750
int reload_spill_index[5012,171936
allocate_reload_reg 5024,172322
choose_reload_regs 5221,178876
merge_assigned_reloads 5893,203130
emit_reload_insns 5970,205685
gen_reload 7063,243171
delete_output_reload 7267,250778
inc_for_reload 7369,253962
constraint_accepts_reg_p 7460,256781
count_occurrences 7505,257856
static rtx *reg_values;7578,259499
static rtx invalidate_regno_rtx;7584,259716
static HARD_REG_SET no_longer_dead_regs;7591,260031
reload_cse_invalidate_regno 7603,260569
reload_cse_mem_conflict_p 7683,262714
reload_cse_invalidate_mem 7746,263956
reload_cse_invalidate_rtx 7779,264712
reload_cse_delete_death_notes 7799,265273
reload_cse_no_longer_dead 7831,265979
reload_cse_regs 7862,267014
reload_cse_regno_equal_p 8042,272210
reload_cse_noop_set_p 8077,273172
reload_cse_simplify_set 8171,275493
reload_cse_simplify_operands 8236,277357
static int reload_cse_check_clobbered;8459,283909
static rtx reload_cse_check_src;8460,283948
reload_cse_check_clobber 8467,284199
reload_cse_record_set 8479,284511

reorg.c,2628
extern HARD_REG_SET used_spill_regs;134,6332
extern int max_label_num_after_reload;137,6433
#define obstack_chunk_alloc 142,6494
#define obstack_chunk_free 143,6530
#define eligible_for_annul_true(eligible_for_annul_true146,6590
#define eligible_for_annul_false(eligible_for_annul_false149,6686
static struct obstack unfilled_slots_obstack;154,6824
static rtx *unfilled_firstobj;155,6870
#define unfilled_slots_base	161,7085
#define unfilled_slots_next	164,7167
struct resourcesresources170,7360
#define CLEAR_RESOURCE(CLEAR_RESOURCE180,7740
static struct resources start_of_epilogue_needs;185,7979
static struct resources end_of_function_needs;188,8091
static rtx end_of_function_label;191,8198
struct target_infotarget_info198,8482
#define TARGET_HASH_PRIME 207,8795
static struct target_info **target_hash_table;210,8863
static int *bb_ticks;217,9133
static int *uid_to_ruid;221,9273
static int max_uid;224,9344
mark_referenced_resources 282,12058
mark_set_resources 504,18882
stop_search_p 684,23609
resource_conflicts_p 720,24391
insn_references_resource_p 752,25323
insn_sets_resource_p 770,25944
find_end_label 786,26394
emit_delay_sequence 863,28818
add_to_delay_list 968,32257
delete_from_delay_slot 1002,33170
delete_scheduled_jump 1056,34866
#define NUM_REORG_FUNCTIONS 1103,36279
#define MAX_DELAY_HISTOGRAM 1104,36309
#define MAX_REORG_PASSES 1105,36339
static int num_insns_needing_delays[1107,36367
static int num_filled_delays[1109,36444
static int reorg_pass_number;1111,36537
note_delay_statistics 1114,36580
optimize_skip 1158,37986
get_jump_flags 1239,40777
rare_destination 1303,42581
mostly_true_jump 1352,43907
get_branch_condition 1473,47674
condition_dominates_p 1516,48926
redirect_with_delay_slots_safe_p 1544,49796
redirect_with_delay_list_safe_p 1579,50858
steal_delay_list_from_target 1630,52742
steal_delay_list_from_fallthrough 1736,56406
try_merge_delay_insns 1813,58432
redundant_insn 1989,64520
own_thread_p 2195,70855
find_basic_block 2236,71946
update_block 2277,73197
reorg_redirect_jump 2302,73799
update_reg_dead_notes 2326,74635
fix_reg_dead_note 2360,75606
update_reg_unused_notes 2391,76409
static HARD_REG_SET current_live_regs;2413,76959
static HARD_REG_SET pending_dead_regs;2418,77126
update_live_status 2424,77322
next_insn_no_annul 2457,78148
find_dead_or_set_registers 2484,78908
mark_target_live_regs 2699,86211
fill_simple_delay_slots 2974,95510
fill_slots_from_thread 3453,111250
fill_eager_delay_slots 3844,123522
relax_delay_slots 3960,126842
make_return_insns 4279,137352
dbr_schedule 4399,141176

rtl.c,1072
#define	obstack_chunk_alloc	29,935
#define	obstack_chunk_free	30,971
extern struct obstack *rtl_obstack;38,1291
int rtx_length[48,1582
#define DEF_RTL_EXPR(DEF_RTL_EXPR52,1697
char *rtx_name[54,1755
#define DEF_MACHMODE(DEF_MACHMODE63,1983
char *mode_name[65,2049
#define DEF_MACHMODE(DEF_MACHMODE79,2292
enum mode_class mode_class[81,2359
#define DEF_MACHMODE(DEF_MACHMODE90,2564
int mode_size[92,2630
#define DEF_MACHMODE(DEF_MACHMODE101,2827
int mode_unit_size[103,2893
#define DEF_MACHMODE(DEF_MACHMODE113,3170
enum machine_mode mode_wider_mode[116,3261
enum machine_mode class_narrowest_mode[124,3485
char *rtx_format[130,3716
#define DEF_RTL_EXPR(DEF_RTL_EXPR153,4561
char rtx_class[161,4851
#define DEF_RTL_EXPR(DEF_RTL_EXPR162,4872
char *note_insn_name[169,5061
char *reg_note_name[179,5553
rtvec_alloc 190,5971
rtx_alloc 213,6384
rtx_free 253,7573
copy_rtx 264,7778
copy_most_rtx 366,10053
dump_and_abort 458,11815
read_skip_spaces 486,12534
read_name 522,13207
read_rtx 560,14007
init_rtl 793,19479
gcc_memset 853,21289

rtlanal.c,1437
int target_flags;36,1180
rtx_unstable_p 44,1439
rtx_varies_p 80,2315
rtx_addr_can_trap_p 128,3414
rtx_addr_varies_p 173,4694
get_integer_term 210,5486
get_related_value 230,5946
reg_mentioned_p 250,6444
no_labels_between_p 317,7779
reg_used_between_p 331,8087
reg_referenced_p 354,8767
reg_referenced_between_p 413,10381
reg_set_between_p 434,10944
static rtx reg_set_reg;451,11313
static int reg_set_flag;452,11337
reg_set_p_1 455,11375
reg_set_p 467,11623
modified_between_p 504,12759
modified_in_p 559,13917
single_set 614,14993
find_last_value 651,15926
refers_to_regno_p 699,17102
reg_overlap_mentioned_p 812,20358
static int reg_set_last_unknown;857,21378
static rtx reg_set_last_value;858,21411
static int reg_set_last_first_regno,859,21442
static int reg_set_last_first_regno, reg_set_last_last_regno;859,21442
reg_set_last_1 864,21567
reg_set_last 900,22568
int rtx_equal_function_value_matters;951,24048
rtx_equal_p 957,24202
note_stores 1067,27003
dead_or_set_p 1124,28909
dead_or_set_regno_p 1153,29529
find_reg_note 1241,31985
find_regno_note 1261,32563
find_reg_fusage 1287,33303
find_regno_fusage 1336,34469
remove_note 1370,35251
volatile_insn_p 1398,35903
volatile_refs_p 1464,37078
side_effects_p 1530,38219
may_trap_p 1604,39627
inequality_comparisons_p 1685,41353
replace_rtx 1747,42396
replace_regs 1786,43529
jmp_uses_reg_or_mem 1897,46595
computed_jump_p 1949,47691

scan-decls.c,208
int brace_nesting 25,924
int extern_C_braces_length 30,1107
char extern_C_braces[31,1139
#define in_extern_C_brace 32,1165
int current_extern_C 36,1313
skip_to_closing_brace 39,1352
scan_decls 78,2236

scan.c,231
int lineno 22,841
int source_lineno 23,857
sstring source_filename;24,880
make_sstring_space 27,911
sstring_append 47,1339
scan_ident 62,1611
scan_string 84,1940
skip_spaces 117,2436
read_upto 155,2970
get_token 174,3243

sched.c,4228
static int *sched_reg_n_calls_crossed;138,6518
static int *sched_reg_live_length;139,6557
static rtx *reg_last_uses;145,6811
static rtx *reg_last_sets;146,6838
static regset reg_pending_sets;147,6865
static int reg_pending_sets_all;148,6897
static int *insn_luid;151,7008
#define INSN_LUID(INSN_LUID152,7031
static int *insn_priority;155,7155
#define INSN_PRIORITY(INSN_PRIORITY156,7182
static short *insn_costs;158,7244
#define INSN_COST(INSN_COST159,7270
static short *insn_units;163,7407
#define INSN_UNIT(INSN_UNIT164,7433
static unsigned int *insn_blockage;168,7611
#define INSN_BLOCKAGE(INSN_BLOCKAGE169,7647
#define UNIT_BITS 170,7706
#define BLOCKAGE_MASK 171,7726
#define ENCODE_BLOCKAGE(ENCODE_BLOCKAGE172,7775
#define UNIT_BLOCKED(UNIT_BLOCKED176,7930
#define BLOCKAGE_RANGE(BLOCKAGE_RANGE177,7983
#define MIN_BLOCKAGE_COST(MIN_BLOCKAGE_COST182,8176
#define MAX_BLOCKAGE_COST(MAX_BLOCKAGE_COST183,8238
#define DONE_PRIORITY	185,8313
#define MAX_PRIORITY	186,8338
#define TAIL_PRIORITY	187,8370
#define LAUNCH_PRIORITY	188,8403
#define DONE_PRIORITY_P(DONE_PRIORITY_P189,8438
#define LOW_PRIORITY_P(LOW_PRIORITY_P190,8495
static int *insn_ref_count;193,8649
#define INSN_REF_COUNT(INSN_REF_COUNT194,8677
static rtx *line_note;199,8901
#define LINE_NOTE(LINE_NOTE200,8924
static rtx *line_note_head;204,9079
static rtx note_list;208,9215
static regset bb_dead_regs;213,9461
static regset bb_live_regs;214,9489
static regset old_live_regs;220,9784
static rtx dead_notes;226,10114
static rtx insn_queue[275,12531
static int q_ptr 276,12571
static int q_size 277,12593
#define NEXT_Q(NEXT_Q278,12616
#define NEXT_Q_AFTER(NEXT_Q_AFTER279,12666
static int *insn_tick;284,12900
#define INSN_TICK(INSN_TICK285,12923
struct sometimessometimes290,13074
#define SIZE_FOR_MODE(SIZE_FOR_MODE350,15618
static rtx *reg_known_value;354,15772
static char *reg_known_equiv_p;367,16537
static int reg_known_value_size;370,16631
canon_rtx 373,16676
init_alias_analysis 413,17961
rtx_equal_for_memref_p 461,19535
find_symbolic_term 575,22457
memrefs_conflict_p 628,23916
read_dependence 820,29648
true_dependence 830,29828
anti_dependence 862,31089
output_dependence 890,32055
add_dependence 916,32968
remove_dependence 986,35153
schedule_insns 1013,35581
#define __inline1019,35657
static rtx pending_read_insns;1034,36272
static rtx pending_read_mems;1037,36374
static rtx pending_write_insns;1040,36477
static rtx pending_write_mems;1043,36581
static int pending_lists_length;1050,36898
static rtx unused_insn_list;1054,37011
static rtx unused_expr_list;1058,37120
static rtx last_pending_memory_flush;1070,37658
static rtx last_function_call;1075,37822
static rtx sched_before_next_call;1082,38122
static rtx last_scheduled_insn;1088,38343
find_insn_list 1105,38883
insn_unit 1125,39383
blockage_range 1161,40501
static rtx unit_last_insn[1185,41232
static int unit_tick[1189,41440
static int unit_n_insns[1193,41610
clear_units 1198,41726
prepare_unit 1208,42004
actual_hazard_this_instance 1226,42380
schedule_unit 1263,43571
actual_hazard 1295,44447
potential_hazard 1344,45811
insn_cost 1389,46980
priority 1451,48495
free_pending_lists 1532,50963
add_insn_mem_dependence 1606,52458
flush_pending_lists 1641,53245
sched_analyze_1 1687,54575
sched_analyze_2 1823,58751
sched_analyze_insn 2043,65258
sched_analyze 2184,69576
sched_note_set 2314,73816
#define SCHED_SORT(SCHED_SORT2396,75859
rank_for_schedule 2408,76302
swap_sort 2457,77870
static int max_priority;2472,78074
queue_insn 2478,78231
birthing_insn_p 2492,78538
adjust_priority 2528,79317
schedule_insn 2581,80674
schedule_select 2640,82310
create_reg_dead_note 2734,84602
attach_deaths 2803,86766
attach_deaths_insn 2985,91952
unlink_notes 3039,93692
new_sometimes_live 3082,94965
finish_sometimes_live 3108,95730
reemit_notes 3132,96539
schedule_block 3168,97421
#define NEED_NOTHING	3177,97598
#define NEED_HEAD	3178,97621
#define NEED_TAIL	3179,97641
regno_use_in 4096,126183
split_hard_reg_notes 4130,127021
new_insn_dead_notes 4179,128363
update_n_sets 4280,131441
update_flow_info 4312,132241
schedule_insns 4779,145761

sdbout.c,3030
#define T_VOID 64,2375
#define PARM_PASSED_IN_MEMORY(PARM_PASSED_IN_MEMORY74,2559
#define DEBUGGER_AUTO_OFFSET(DEBUGGER_AUTO_OFFSET80,2788
#define DEBUGGER_ARG_OFFSET(DEBUGGER_ARG_OFFSET87,3045
int sdb_begin_function_line 93,3220
static int unnamed_struct_number 97,3327
extern FILE *asm_out_file;99,3366
extern tree current_function_decl;101,3394
#define CHAR_TYPE_SIZE 125,4209
#define SHORT_TYPE_SIZE 129,4278
#define INT_TYPE_SIZE 133,4384
#define LONG_TYPE_SIZE 137,4451
#define LONG_LONG_TYPE_SIZE 141,4524
#define FLOAT_TYPE_SIZE 145,4604
#define DOUBLE_TYPE_SIZE 149,4675
#define LONG_DOUBLE_TYPE_SIZE 153,4758
#define CONTIN159,4916
#define SDB_DELIM	163,4992
#define SDB_MAX_DIM 168,5104
#define PUT_SDB_SCL(PUT_SDB_SCL172,5154
#define PUT_SDB_INT_VAL(PUT_SDB_INT_VAL176,5263
#define PUT_SDB_VAL(PUT_SDB_VAL180,5373
#define PUT_SDB_DEF(PUT_SDB_DEF187,5548
#define PUT_SDB_PLAIN_DEF(PUT_SDB_PLAIN_DEF194,5752
#define PUT_SDB_ENDEF 198,5862
#define PUT_SDB_TYPE(PUT_SDB_TYPE202,5947
#define PUT_SDB_SIZE(PUT_SDB_SIZE206,6054
#define PUT_SDB_START_DIM 210,6165
#define PUT_SDB_NEXT_DIM(PUT_SDB_NEXT_DIM214,6258
#define PUT_SDB_LAST_DIM(PUT_SDB_LAST_DIM218,6351
#define PUT_SDB_TAG(PUT_SDB_TAG222,6451
#define PUT_SDB_BLOCK_START(PUT_SDB_BLOCK_START229,6656
#define PUT_SDB_BLOCK_END(PUT_SDB_BLOCK_END236,6882
#define PUT_SDB_FUNCTION_START(PUT_SDB_FUNCTION_START243,7113
#define PUT_SDB_FUNCTION_END(PUT_SDB_FUNCTION_END250,7345
#define PUT_SDB_EPILOGUE_END(PUT_SDB_EPILOGUE_END257,7575
#define SDB_GENERATE_FAKE(SDB_GENERATE_FAKE266,7876
#define KNOWN_TYPE_TAG(KNOWN_TYPE_TAG273,8096
#define SET_KNOWN_TYPE_TAG(SET_KNOWN_TYPE_TAG277,8214
#define TAG_NAME(TAG_NAME283,8436
#define MAKE_LINE_SAFE(MAKE_LINE_SAFE289,8669
#define PUT_SDB_SRC_FILE(PUT_SDB_SRC_FILE301,9162
struct sdb_filesdb_file312,9535
static struct sdb_file *current_file;320,9634
sdbout_init 327,9772
tag_of_ru_type 353,10363
gen_fake_label 369,10783
#define PUSH_DERIVED_LEVEL(PUSH_DERIVED_LEVEL397,11757
static int sdb_n_dims 403,11969
static int sdb_dims[406,12047
static int sdb_type_size 409,12140
plain_type 412,12183
template_name_p 443,12931
sdbout_record_type_name 454,13102
plain_type_1 504,14478
static int do_block 663,19004
static int next_block_number;665,19030
sdbout_block 668,19073
sdbout_syms 699,19751
sdbout_symbol 714,20039
sdbout_toplevel_data 962,27694
static tree anonymous_types;993,28304
sdbout_queue_anonymous_type 996,28346
sdbout_dequeue_anonymous_types 1003,28489
sdbout_types 1028,28983
sdbout_type 1042,29232
sdbout_field_types 1057,29647
sdbout_one_type 1076,30305
sdbout_parms 1277,35984
sdbout_reg_parms 1411,40656
sdbout_begin_block 1476,42994
sdbout_end_block 1516,44066
sdbout_mark_begin_function 1536,44610
sdbout_begin_function 1548,44946
sdbout_end_function 1561,45278
sdbout_end_epilogue 1579,45694
sdbout_label 1589,45933
sdbout_start_new_source_file 1602,46161
sdbout_resume_previous_source_file 1618,46480

stmt.c,5040
#define obstack_chunk_alloc 62,2044
#define obstack_chunk_free 63,2080
struct obstack stmt_obstack;64,2112
char *emit_filename;68,2242
int emit_lineno;69,2263
int expr_stmts_for_value;74,2422
static tree last_expr_type;79,2552
static rtx last_expr_value;80,2580
static rtx last_block_end_note;87,2902
int block_start_count;91,3003
extern int current_function_returns_pcc_struct;96,3140
extern rtx cleanup_label;102,3384
extern rtx return_label;108,3589
extern int frame_offset;113,3809
extern rtx tail_recursion_label;117,3941
extern rtx tail_recursion_reentry;120,4051
extern rtx arg_pointer_save_area;127,4341
extern tree rtl_expr_chain;130,4431
extern int target_temp_slot_level;133,4534
extern int temp_slot_level;135,4570
struct case_nodecase_node161,5787
typedef struct case_node case_node;case_node172,6194
typedef struct case_node *case_node_ptr;case_node_ptr173,6230
static short *cost_table;178,6418
static int use_cost_table;179,6444
struct nestingnesting206,7785
struct nesting *block_stack;330,12634
struct nesting *stack_block_stack;336,12825
struct nesting *cond_stack;339,12913
struct nesting *loop_stack;342,12977
struct nesting *case_stack;345,13061
struct nesting *nesting_stack;349,13176
int nesting_depth;352,13255
#define ALLOC_NESTING(ALLOC_NESTING356,13327
#define POPSTACK(POPSTACK364,13641
struct goto_fixupgoto_fixup391,14768
static struct goto_fixup *goto_fixup_chain;437,16406
struct label_chainlabel_chain442,16580
static int using_eh_for_cleanups_p 451,16738
using_eh_for_cleanups 498,18907
init_stmt 504,18973
init_stmt_for_function 511,19046
save_stmt_status 535,19520
restore_stmt_status 556,20118
emit_nop 579,20757
label_rtx 598,21130
emit_jump 613,21408
expand_computed_goto 625,21623
expand_label 666,22774
declare_nonlocal_label 698,23630
expand_goto 718,24235
expand_goto_internal 803,27258
bc_expand_goto_internal 878,29547
expand_fixup 962,32119
bc_expand_fixup 1078,36193
expand_fixups 1107,36933
fixup_gotos 1127,37709
bc_fixup_gotos 1312,44384
expand_asm 1363,45791
expand_asm_operands 1402,46949
expand_expr_stmt 1777,57929
warn_if_unused_value 1862,60523
clear_last_expr 1957,63410
expand_start_stmt_expr 1967,63634
expand_end_stmt_expr 2001,64691
expand_start_cond 2079,66887
expand_start_elseif 2109,67794
expand_start_else 2124,68254
expand_elseif 2144,68760
expand_end_cond 2155,69016
bc_expand_start_cond 2181,69695
bc_expand_end_cond 2203,70197
bc_expand_start_else 2214,70429
expand_start_loop 2238,71144
expand_start_loop_continue_elsewhere 2274,72227
expand_loop_continue_here 2288,72631
bc_expand_end_loop 2303,72966
expand_end_loop 2324,73444
expand_continue_loop 2449,77742
expand_exit_loop 2466,78169
expand_exit_loop_if_false 2483,78625
preserve_subexpressions_p 2528,79881
expand_exit_something 2556,80633
expand_null_return 2574,81017
expand_value_return 2598,81513
expand_null_return_1 2660,83417
expand_return 2698,84400
drop_through_at_end_p 3012,95170
tail_recursion_args 3027,95644
expand_start_bindings 3096,97663
expand_start_target_temps 3147,99577
expand_end_target_temps 3161,99952
mark_block_as_eh_region 3177,100505
conditional_context 3197,101198
mark_block_as_not_eh_region 3211,101749
is_eh_region 3220,101951
remember_end_note 3230,102209
expand_end_bindings 3247,102741
bc_expand_end_bindings 3527,112474
expand_decl 3551,113168
bc_expand_decl 3738,119403
expand_decl_init 3780,120431
bc_expand_variable_local_init 3839,122312
bc_expand_decl_init 3870,123335
expand_decl_cleanup 3923,124888
expand_decl_cleanup_no_eh 4023,127432
expand_dcc_cleanup 4046,128341
expand_dhc_cleanup 4087,129740
expand_anon_union_decl 4119,130664
expand_cleanups 4195,133038
start_cleanup_deferal 4248,134759
end_cleanup_deferal 4262,135266
move_cleanups_up 4277,135792
last_cleanup_this_contour 4289,136044
any_pending_cleanups 4302,136359
expand_start_case 4336,137327
bc_expand_start_case 4383,138678
expand_start_case_dummy 4411,139501
expand_end_case_dummy 4434,140108
case_index_expr_type 4444,140300
pushcase 4467,141142
pushcase_range 4550,143504
add_case_node 4625,145729
bc_pushcase 4859,150103
all_cases_count 4914,151779
#define BITARRAY_TEST(BITARRAY_TEST4984,153475
#define BITARRAY_SET(BITARRAY_SET4987,153623
mark_seen_cases 5000,154108
check_for_full_enumeration_handling 5131,157550
bc_check_for_full_enumeration_handling 5272,161788
expand_end_case 5312,162999
#define CASE_VALUES_THRESHOLD 5446,166932
#define CASE_VALUES_THRESHOLD 5451,167159
case_tree2list 5715,175552
bc_expand_end_case 5737,175950
bc_new_uid 5830,178770
do_jump_if_equal 5840,178913
estimate_case_costs 5884,180083
group_case_nodes 5946,181838
balance_case_nodes 5999,183464
node_has_low_bound 6118,186497
node_has_high_bound 6165,187978
node_is_bounded 6206,189166
emit_jump_if_reachable 6217,189435
emit_case_nodes 6251,190944
static tree *block_vector;6533,200727
find_loop_tree_blocks 6536,200760
unroll_block_trees 6544,200905

stor-layout.c,772
#define CEIL(CEIL30,951
tree sizetype;36,1130
tree size_zero_node;40,1211
tree size_one_node;44,1298
int maximum_field_alignment;48,1429
int set_alignment 52,1575
static tree pending_sizes;61,1851
int immediate_size_expand;66,1992
get_pending_sizes 69,2025
put_pending_sizes 82,2294
variable_size 95,2543
#define MAX_FIXED_MODE_SIZE 129,3552
mode_for_size 138,3855
smallest_mode_for_size 161,4473
round_up 180,4948
layout_decl 203,5764
layout_record 305,9305
layout_union 567,18283
layout_type 671,21812
#define SET_WORD_SIZE 963,30922
make_signed_type 1036,33271
make_unsigned_type 1083,34526
fixup_signed_type 1108,35107
fixup_unsigned_type 1141,36101
get_best_mode 1179,37412
save_storage_status 1236,39152
restore_storage_status 1249,39518

stupid.c,573
static int *uid_suid;57,2410
#define INSN_SUID(INSN_SUID61,2466
static int last_call_suid;66,2623
static int last_setjmp_suid;71,2763
static int *reg_where_dead;76,2936
static int *reg_where_born;80,3039
static int *reg_order;84,3140
static char *regs_live;89,3291
static char *regs_change_size;94,3409
static char *regs_crosses_setjmp;98,3505
static HARD_REG_SET *after_insn_hard_regs;102,3615
#define MARK_LIVE_AFTER(MARK_LIVE_AFTER106,3719
stupid_life_analysis 123,4494
stupid_reg_compare 306,10196
stupid_find_reg 343,11374
stupid_mark_refs 439,14091

toplev.c,8483
vms_fopen 74,2004
#define fopen 89,2521
#define DEFAULT_GDB_EXTENSIONS 93,2594
#define PREFERRED_DEBUGGING_TYPE 107,3286
#define PREFERRED_DEBUGGING_TYPE 110,3362
#define PREFERRED_DEBUGGING_TYPE 113,3440
#define PREFERRED_DEBUGGING_TYPE 116,3521
#define PREFERRED_DEBUGGING_TYPE 119,3602
#define PREFERRED_DEBUGGING_TYPE 126,3832
extern int rtx_equal_function_value_matters;129,3882
extern char **environ;132,3967
extern char *version_string,134,3997
extern char *version_string, *language_string;134,3997
extern int size_directive_output;139,4133
extern tree last_assemble_variable_decl;140,4167
#define MAX_LINE 182,5627
char *progname;190,5744
int save_argc;193,5795
char **save_argv;194,5810
char *input_filename;199,5955
char *main_input_filename;205,6188
FILE *finput;209,6279
int lineno;214,6350
struct file_stack *input_file_stack;218,6411
int input_file_stack_tick;221,6504
extern tree current_function_decl;225,6597
char *dump_base_name;229,6693
extern int target_flags;235,6920
int rtl_dump 239,7018
int rtl_dump_and_exit 240,7036
int jump_opt_dump 241,7063
int addressof_dump 242,7086
int cse_dump 243,7110
int loop_dump 244,7128
int cse2_dump 245,7147
int branch_prob_dump 246,7166
int flow_dump 247,7192
int combine_dump 248,7211
int sched_dump 249,7233
int local_reg_dump 250,7253
int global_reg_dump 251,7277
int sched2_dump 252,7302
int jump2_opt_dump 253,7323
int dbr_sched_dump 254,7347
int flag_print_asm_name 255,7371
int stack_reg_dump 256,7400
char *asm_file_name;260,7491
int g_switch_value;263,7581
int g_switch_set;264,7601
enum debug_info_type write_symbols 269,7783
enum debug_info_level debug_info_level 273,7957
int use_gnu_debug_info_extensions 279,8228
int optimize 288,8629
int errorcount 292,8710
int warningcount 293,8730
int sorrycount 294,8752
int output_bytecode 297,8831
int max_label_num_after_reload;320,9600
int profile_flag 324,9685
int profile_block_flag;328,9784
int profile_arc_flag 332,9880
int flag_test_coverage 336,9984
int flag_branch_probabilities 340,10093
int pedantic 345,10218
int in_system_header 350,10345
int obey_regdecls 355,10469
int quiet_flag 360,10607
int flag_signed_char;366,10694
int flag_short_enums;370,10789
int flag_caller_saves 377,11026
int flag_caller_saves 379,11059
#define DEFAULT_PCC_STRUCT_RETURN 388,11334
int flag_pcc_struct_return 393,11456
int flag_force_mem 398,11655
int flag_force_addr 403,11828
int flag_defer_pop 408,11992
int flag_float_store 413,12122
int flag_cse_follow_jumps;418,12242
int flag_cse_skip_blocks;422,12352
int flag_expensive_optimizations;426,12486
int flag_thread_jumps;431,12595
int flag_strength_reduce 435,12673
int flag_unroll_loops;442,12947
int flag_unroll_all_loops;447,13080
int flag_writable_strings 452,13215
int flag_no_function_cse 458,13428
int flag_omit_frame_pointer 463,13575
int flag_function_sections 468,13767
int flag_no_peephole 472,13869
int flag_fast_math 479,14153
int flag_volatile;483,14246
int flag_volatile_global;487,14337
int flag_syntax_only 491,14434
static int flag_rerun_cse_after_loop;496,14611
int flag_inline_functions;501,14755
int flag_keep_inline_functions;507,14934
int flag_no_inline;511,15025
int flag_keep_static_consts 516,15170
int flag_gen_aux_info 520,15279
static char *aux_info_file_name;524,15348
int flag_shared_data;528,15439
int flag_delayed_branch;532,15533
int flag_pic;539,15761
int flag_exceptions 544,15875
int flag_no_common;549,15994
int flag_pretend_float;555,16243
int flag_pedantic_errors 560,16400
int flag_schedule_insns 567,16605
int flag_schedule_insns_after_reload 568,16634
int flag_inhibit_size_directive 574,16877
int flag_verbose_asm 583,17351
int flag_debug_asm 592,17809
int flag_gnu_linker 598,18043
int flag_gnu_linker 600,18074
int flag_pack_struct 604,18159
int flag_stack_check;608,18293
int flag_check_memory_usage 613,18487
int flag_prefix_function_name 618,18690
struct { char *string; int *variable; int on_value;} f_options[626,19008
char *lang_options[682,21440
int inhibit_warnings 793,23595
int extra_warnings 797,23665
int warnings_are_errors 801,23734
int warn_unused;805,23818
int warn_uninitialized;809,23910
int warn_shadow;813,24007
int warn_switch;817,24104
int warn_return_type;822,24274
int warn_cast_align;828,24472
int warn_id_clash;833,24619
unsigned id_clash_len;834,24638
int warn_larger_than;840,24884
unsigned larger_than_size;841,24906
int warn_inline;845,24994
int warn_aggregate_return;850,25135
struct { char *string; int *variable; int on_value;} W_options[854,25188
FILE *asm_out_file;869,25645
FILE *aux_info_file;870,25665
FILE *rtl_dump_file;871,25686
FILE *jump_opt_dump_file;872,25707
FILE *addressof_dump_file;873,25733
FILE *cse_dump_file;874,25760
FILE *loop_dump_file;875,25781
FILE *cse2_dump_file;876,25803
FILE *branch_prob_dump_file;877,25825
FILE *flow_dump_file;878,25854
FILE *combine_dump_file;879,25876
FILE *sched_dump_file;880,25901
FILE *local_reg_dump_file;881,25924
FILE *global_reg_dump_file;882,25951
FILE *sched2_dump_file;883,25979
FILE *jump2_opt_dump_file;884,26003
FILE *dbr_sched_dump_file;885,26030
FILE *stack_reg_dump_file;886,26057
int parse_time;890,26161
int varconst_time;891,26177
int integration_time;892,26196
int jump_time;893,26218
int cse_time;894,26233
int loop_time;895,26247
int cse2_time;896,26262
int branch_prob_time;897,26277
int flow_time;898,26299
int combine_time;899,26314
int sched_time;900,26332
int local_alloc_time;901,26348
int global_alloc_time;902,26370
int sched2_time;903,26393
int dbr_sched_time;904,26410
int shorten_branch_time;905,26430
int stack_reg_time;906,26455
int final_time;907,26475
int symout_time;908,26491
int dump_time;909,26508
get_run_time 914,26579
#define TIMEVAR(TIMEVAR958,27392
print_time 962,27514
count_error 974,27750
pfatal_with_name 1001,28260
fatal_io_error 1010,28392
fatal_insn 1021,28624
fatal_insn_not_found 1074,29961
decl_name 1086,30260
static int need_error_newline;1093,30378
static tree last_error_function 1098,30570
static int last_error_tick;1101,30689
announce_function 1107,30849
default_print_error_function 1126,31293
report_error_function 1160,32226
vmessage 1192,32922
v_message_with_file_and_line 1216,33437
v_message_with_decl 1235,33802
file_and_line_for_asm 1297,35067
v_error_with_file_and_line 1334,35978
error_with_file_and_line VPROTO(1346,36215
v_error_with_decl 1372,36741
error_with_decl VPROTO(1383,36951
v_error_for_asm 1407,37414
error_for_asm VPROTO(1422,37690
verror 1444,38016
error VPROTO(1452,38134
vfatal 1472,38393
fatal VPROTO(1481,38493
v_warning_with_file_and_line 1501,38747
warning_with_file_and_line VPROTO(1515,39007
v_warning_with_decl 1541,39538
warning_with_decl VPROTO(1554,39771
v_warning_for_asm 1578,40239
warning_for_asm VPROTO(1595,40550
vwarning 1617,40881
warning VPROTO(1625,41003
vpedwarn 1646,41299
pedwarn VPROTO(1657,41434
v_pedwarn_with_decl 1675,41640
pedwarn_with_decl VPROTO(1697,42326
v_pedwarn_with_file_and_line 1717,42611
pedwarn_with_file_and_line VPROTO(1730,42874
vsorry 1754,43289
sorry VPROTO(1768,43557
v_really_sorry 1788,43823
really_sorry VPROTO(1802,44099
fancy_abort 1828,44627
do_abort 1837,44819
botch 1846,44960
xmalloc 1854,45060
xrealloc 1867,45378
xstrdup 1882,45668
exact_log2_wide 1899,46037
floor_log2_wide 1917,46421
static int float_handler_set;1927,46566
int float_handled;1928,46596
jmp_buf float_handler;1929,46615
float_signal 1934,46687
set_float_handler 1952,47168
push_float_handler 1971,47699
pop_float_handler 1989,48170
pipe_closed 2001,48413
strip_off_ending 2014,48800
output_quoted_string 2029,49107
output_file_directive 2052,49528
output_lang_identify 2083,50190
open_dump_file 2095,50506
compile_file 2114,50966
rest_of_decl_compilation 2811,71474
#define ASM_FINISH_DECLARE_OBJECT(ASM_FINISH_DECLARE_OBJECT2822,71849
rest_of_type_compilation 2878,73781
rest_of_compilation 2899,74471
main 3644,96585
struct {char *name; int value;} target_switches 4308,113414
struct {char *prefix; char ** variable;} target_options 4314,113579
set_target_switch 4321,113705
print_version 4359,114576
#define __VERSION__ 4368,114828
print_single_switch 4381,115189
print_switch_values 4412,116031
debug_start_source_file 4490,118163
debug_end_source_file 4517,118970
debug_define 4545,119868
debug_undef 4566,120565

tree.c,6487
#define obstack_chunk_alloc 50,1713
#define obstack_chunk_free 51,1749
struct obstack permanent_obstack;57,1968
struct obstack *function_maybepermanent_obstack;65,2313
struct obstack maybepermanent_obstack;69,2440
struct simple_obstack_stack *toplev_inline_obstacks;74,2635
struct simple_obstack_stack *extra_inline_obstacks;78,2764
struct simple_obstack_stack *inline_obstacks;84,2997
struct obstack *function_obstack;91,3287
struct obstack temporary_obstack;95,3389
struct obstack momentary_obstack;100,3546
static struct obstack temp_decl_obstack;106,3712
struct obstack *saveable_obstack;111,3853
struct obstack *rtl_obstack;117,4091
struct obstack *current_obstack;121,4202
struct obstack *expression_obstack;126,4341
struct obstack_stackobstack_stack130,4450
struct obstack_stack *obstack_stack;139,4615
static struct obstack obstack_stack_obstack;143,4714
char *maybepermanent_firstobj;147,4858
char *temporary_firstobj;148,4889
char *momentary_firstobj;149,4915
char *temp_decl_firstobj;150,4941
char *momentary_function_firstobj;154,5112
int all_types_permanent;158,5222
struct momentary_levelmomentary_level162,5317
struct momentary_level *momentary_stack;172,5583
#define DEFTREECODE(DEFTREECODE178,5808
char *standard_tree_code_type[180,5860
#define DEFTREECODE(DEFTREECODE189,6091
int standard_tree_code_length[191,6145
#define DEFTREECODE(DEFTREECODE198,6311
char *standard_tree_code_name[200,6360
char **tree_code_type;209,6622
int *tree_code_length;215,6798
char **tree_code_name;219,6896
} tree_node_kind;tree_node_kind240,7161
int tree_node_counts[242,7180
int tree_node_sizes[243,7218
int id_string_size 244,7255
char *tree_node_kind_names[246,7280
#define MAX_HASH_TABLE 266,7606
static tree hash_table[267,7634
static int do_identifier_warnings;270,7743
static int next_decl_uid;273,7819
static int next_type_uid 275,7885
#define TYPE_HASH(TYPE_HASH279,8001
extern char *mode_name[281,8061
init_obstacks 288,8158
gcc_obstack_init 315,9128
#define OBSTACK_CHUNK_SIZE 320,9276
#define OBSTACK_CHUNK_ALLOC 324,9400
#define OBSTACK_CHUNK_FREE 327,9470
save_tree_status 341,9925
restore_tree_status 420,12566
temporary_allocation 483,14850
end_temporary_allocation 499,15409
resume_temporary_allocation 510,15687
saveable_allocation 523,16089
push_obstacks 535,16514
push_obstacks_nochange 557,17089
pop_obstacks 574,17484
allocation_temporary_p 591,17866
permanent_allocation 604,18215
preserve_data 638,19306
preserve_initializer 645,19426
rtl_in_current_obstack 668,20073
rtl_in_saveable_obstack 677,20258
oballoc 687,20480
obfree 698,20738
permalloc 708,20904
perm_calloc 719,21164
savealloc 732,21438
expralloc 742,21627
print_obstack_name 751,21779
debug_obstack 820,23743
object_permanent_p 832,24021
push_momentary 844,24357
preserve_momentary 860,24841
clear_momentary 869,25067
pop_momentary 880,25371
pop_momentary_nofree 895,25873
suspend_momentary 907,26218
resume_momentary 920,26575
init_tree_codes 931,26799
make_node 952,27635
copy_node 1145,33195
copy_list 1235,36002
#define HASHBITS 1255,36327
get_identifier 1262,36542
maybe_get_identifier 1325,38401
start_identifier_warnings 1363,39386
set_identifier_size 1374,39671
build_int_2_wide 1388,40040
build_real 1401,40329
real_value_from_int_cst 1427,41005
build_real_from_int_cst 1470,42407
build_string 1519,43416
build_complex 1539,44103
make_tree_vec 1557,44597
integer_zerop 1587,45274
integer_onep 1605,45729
integer_all_onesp 1623,46235
integer_pow2p 1674,47723
tree_log2 1720,48860
real_zerop 1758,49759
real_onep 1774,50166
real_twop 1790,50547
really_constant_p 1806,50940
value_member 1821,51330
purpose_member 1837,51616
binfo_member 1853,51904
chain_member 1868,52150
chain_member_value 1888,52581
chain_member_purpose 1908,53033
list_length 1926,53398
chainon 1943,53729
tree_last 1966,54177
nreverse 1980,54454
listify 1997,54764
build_tree_list 2022,55237
build_decl_list 2034,55461
build_expr_list 2048,55794
tree_cons 2064,56206
decl_tree_cons 2094,56958
expr_tree_cons 2108,57314
perm_tree_cons 2122,57673
temp_tree_cons 2137,58047
saveable_tree_cons 2152,58430
size_in_bytes 2171,59018
int_size_in_bytes 2195,59544
array_type_nelts 2223,60352
staticp 2266,61466
save_expr 2334,63745
unsave_expr 2380,65543
unsave_expr_now 2398,65961
contains_placeholder_p 2485,67943
substitute_in_expr 2576,70389
stabilize_reference 2743,74625
stabilize_reference_1 2837,77516
build VPROTO(2914,79930
build1 2985,81591
build_nt VPROTO(3038,82694
build_parse_node VPROTO(3068,83210
build_op_identifier 3102,83888
build_decl 3119,84314
build_block 3149,85137
build_decl_attribute_variant 3165,85592
build_type_attribute_variant 3178,85895
valid_machine_attribute 3237,87550
is_attribute_p 3336,90399
lookup_attribute 3381,91419
merge_attributes 3401,91788
build_type_variant 3450,93179
build_type_copy 3482,94047
struct type_hashtype_hash3508,94696
#define TYPE_HASH_SIZE 3522,95287
struct type_hash *type_hash_table[3523,95313
type_hash_list 3530,95536
type_hash_lookup 3544,95882
type_hash_add 3577,97029
int debug_no_type_hash 3602,97932
type_hash_canon 3605,97966
attribute_hash_list 3637,98728
attribute_list_equal 3652,99098
attribute_list_contained 3668,99665
type_list_equal 3708,100624
tree_int_cst_equal 3728,101143
tree_int_cst_lt 3747,101625
tree_int_cst_sgn 3763,102015
simple_cst_list_equal 3780,102390
simple_cst_equal 3802,102904
build_pointer_type 3932,106694
build_index_type 3970,107902
build_range_type 4007,109048
build_index_2_type 4041,110071
index_type_equal 4053,110432
build_array_type 4080,111271
build_function_type 4122,112334
build_reference_type 4151,113053
build_method_type 4189,114100
build_offset_type 4226,115084
build_complex_type 4251,115644
get_unwidened 4298,117392
get_narrower 4390,120631
type_precision 4476,123268
int_fits_type_p 4489,123597
decl_function_context 4514,124517
decl_type_context 4550,125431
print_inline_obstack_statistics 4577,126062
print_obstack_statistics 4602,126768
dump_tree_statistics 4626,127342
#define FILE_FUNCTION_PREFIX_LEN 4659,128669
#define FILE_FUNCTION_FORMAT 4662,128732
#define FILE_FUNCTION_FORMAT 4665,128832
#define FILE_FUNCTION_FORMAT 4667,128905
extern char * first_global_object_name;4671,129012
get_file_function_name 4677,129207
get_set_constructor_bits 4732,130852
get_set_constructor_bytes 4788,132531

unprotoize.c,0

unroll.c,1394
#define NUM_FACTORS 140,6714
struct _factor _factor142,6737
struct _factor { int factor, count; } factors[142,6737
enum unroll_types unroll_types147,6909
enum unroll_types { UNROLL_COMPLETELY,147,6909
enum unroll_types { UNROLL_COMPLETELY, UNROLL_MODULO,147,6909
enum unroll_types { UNROLL_COMPLETELY, UNROLL_MODULO, UNROLL_NAIVE 147,6909
#define MAX_UNROLLED_INSNS 164,7287
static struct induction **addr_combined_regs;173,7670
static rtx *splittable_regs;179,7897
static int *splittable_regs_updates;186,8213
static rtx loop_iteration_var;191,8390
static rtx loop_initial_value;192,8421
static rtx loop_increment;193,8452
static rtx loop_final_value;194,8479
static enum rtx_code loop_comparison_code;195,8508
unroll_loop 227,10006
precondition_loop_p 1275,46772
init_reg_map 1407,51014
calculate_giv_inc 1433,51874
initial_reg_note_copy 1543,55346
final_reg_note_copy 1571,55951
copy_loop_body 1586,56358
emit_unrolled_add 2115,73396
back_branch_in_range_p 2136,74090
fold_rtx_mult_add 2182,75473
biv_total_increment 2231,76884
iteration_info 2266,78046
approx_final_value 2364,81643
find_splittable_regs 2437,84202
verify_addresses 2596,89969
find_splittable_givs 2624,90804
reg_dead_after_loop 3024,104887
final_biv_value 3097,106940
final_giv_value 3172,109342
loop_iterations 3296,113457
remap_split_bivs 3540,121633
set_dominates_use 3608,123260

varasm.c,5366
#define TRAMPOLINE_ALIGNMENT 56,1635
#define ASM_STABS_OP 60,1711
#define CHKR_PREFIX 66,1870
#define CHKR_PREFIX 68,1934
#define CHKR_PREFIX 71,2002
#define CHKR_PREFIX_SIZE 73,2037
#define STRIP_NAME_ENCODING(STRIP_NAME_ENCODING79,2270
extern FILE *asm_out_file;85,2434
char *first_global_object_name;88,2535
extern struct obstack *current_obstack;90,2568
extern struct obstack *saveable_obstack;91,2608
extern struct obstack *rtl_obstack;92,2649
extern struct obstack permanent_obstack;93,2685
#define obstack_chunk_alloc 94,2726
int const_labelno;99,2849
int var_labelno;104,2960
int size_directive_output;109,3066
tree last_assemble_variable_decl;116,3268
struct weak_symsweak_syms122,3390
static struct weak_syms *weak_decls;129,3468
static int function_defined;134,3580
static enum in_section in_section169,5111
static enum in_section { no_section,169,5111
static enum in_section { no_section, in_text,169,5111
static enum in_section { no_section, in_text, in_data,169,5111
static enum in_section { no_section, in_text, in_data, in_named169,5111
  , in_bss171,5201
  , in_eh_frame174,5250
  , EXTRA_SECTIONS177,5295
} in_section 179,5321
#define IN_NAMED_SECTION(IN_NAMED_SECTION182,5413
static char *in_named_name;187,5622
text_section 197,5835
data_section 213,6086
readonly_data_section 241,6607
in_text_section 253,6819
in_data_section 261,6927
named_section 272,7200
#define UNIQUE_SECTION(UNIQUE_SECTION302,8045
#define UNIQUE_SECTION_P(UNIQUE_SECTION_P319,8533
bss_section 328,8670
asm_output_bss 356,9255
asm_output_aligned_bss 384,9965
eh_frame_section 409,10586
function_section 426,10960
variable_section 441,11249
exception_section 477,12220
make_function_rtl 498,12663
bc_make_decl_rtl 567,14834
strip_reg_name 603,15875
decode_reg_name 624,16513
make_decl_rtl 684,17910
make_var_volatile 858,23849
assemble_constant_align 870,24066
assemble_asm 889,24520
#define ASM_OUTPUT_CONSTRUCTOR(ASM_OUTPUT_CONSTRUCTOR912,25136
#define ASM_OUTPUT_DESTRUCTOR(ASM_OUTPUT_DESTRUCTOR915,25216
assemble_destructor 928,25556
assemble_constructor 948,26078
assemble_gc_entry 969,26683
#define CONSTANT_POOL_BEFORE_FUNCTION 992,27411
assemble_start_function 1001,27716
assemble_end_function 1094,30155
assemble_zeros 1114,30648
assemble_align 1167,31754
assemble_string 1177,31981
bc_output_ascii 1212,32537
assemble_variable 1231,33200
#define MAX_OFILE_ALIGNMENT 1582,44073
contains_pointers_p 1662,46467
bc_output_constructor 1699,47336
bc_output_data_constructor 1728,47847
assemble_external 1750,48408
assemble_external_libcall 1776,49007
assemble_global 1795,49380
assemble_label 1804,49511
assemble_name 1820,49999
assemble_static_space 1856,50737
assemble_trampoline_template 1911,52169
assemble_integer 1952,53232
assemble_real 2043,55082
static rtx const_double_chain;2117,56821
immed_double_const 2125,57119
immed_real_const_1 2233,61030
immed_real_const 2309,63701
clear_const_double_mem 2320,64047
struct addr_constaddr_const2343,64638
decode_addr_const 2350,64710
struct constant_descriptorconstant_descriptor2430,66684
#define HASHBITS 2437,66788
#define MAX_HASH_TABLE 2438,66808
static struct constant_descriptor *const_hash_table[2439,66836
const_hash 2444,66972
compare_constant 2558,69961
compare_constant_1 2575,70556
record_constant 2746,74408
record_constant_1 2767,75105
struct deferred_constantdeferred_constant2892,78471
static struct deferred_constant *deferred_constants;2900,78576
static struct deferred_constant *after_function_constants;2904,78709
static int defer_addressed_constants_flag;2908,78887
defer_addressed_constants 2913,78984
output_deferred_addressed_constants 2922,79159
output_after_function_constants 2944,79601
copy_constant 2963,80049
output_constant_def 3032,82023
output_constant_def_contents 3153,85388
#define MAX_RTX_HASH_TABLE 3216,87105
static struct constant_descriptor **const_rtx_hash_table;3217,87135
struct pool_constantpool_constant3224,87463
static struct pool_constant *first_pool,3238,87705
static struct pool_constant *first_pool, *last_pool;3238,87705
static int pool_offset;3243,87849
struct pool_sympool_sym3248,87978
static struct pool_sym **const_rtx_sym_hash_table;3255,88070
#define SYMHASH(SYMHASH3260,88226
init_const_rtx_hash_table 3266,88396
save_varasm_status 3286,89001
restore_varasm_status 3303,89463
enum kind kind3314,89764
enum kind { RTX_DOUBLE,3314,89764
enum kind { RTX_DOUBLE, RTX_INT 3314,89764
struct rtx_constrtx_const3316,89800
decode_rtx_const 3337,90249
simplify_subtraction 3424,92115
const_hash_rtx 3440,92492
compare_constant_rtx 3463,92999
record_constant_rtx 3489,93617
force_const_mem 3515,94439
find_pool_constant 3666,99252
get_pool_constant 3682,99580
get_pool_mode 3691,99725
get_pool_offset 3700,99871
get_pool_size 3709,100010
output_constant_pool 3717,100114
mark_constant_pool 3809,102693
mark_constants 3832,103221
output_addressed_constants 3904,104876
output_constant 3975,107009
bc_assemble_integer 4098,110179
output_constructor 4202,112977
handle_pragma_weak 4486,121530
declare_weak 4518,122266
weak_finish 4532,122623
assemble_alias 4549,122912
#define SUPPORTS_ONE_ONLY 4591,123989
#define SUPPORTS_ONE_ONLY 4593,124023
supports_one_only 4603,124365
make_decl_one_only 4614,124586

version.c,26
char *version_string 1,0

xcoffout.c,1166
#define N_CATCH 47,1461
static int xcoff_begin_function_line 54,1618
static int xcoff_inlining 55,1661
char *xcoff_current_include_file;59,1735
static char *xcoff_current_function_file;66,1992
char *xcoff_bss_section_name;71,2135
char *xcoff_private_data_section_name;72,2165
char *xcoff_read_only_section_name;73,2204
char *xcoff_lastfile;77,2297
#define ABS_OR_RELATIVE_LINENO(ABS_OR_RELATIVE_LINENO81,2359
#define ASM_OUTPUT_SOURCE_LINE(ASM_OUTPUT_SOURCE_LINE85,2539
#define ASM_OUTPUT_LFB(ASM_OUTPUT_LFB91,2733
#define ASM_OUTPUT_LFE(ASM_OUTPUT_LFE103,3085
#define ASM_OUTPUT_LBB(ASM_OUTPUT_LBB109,3240
#define ASM_OUTPUT_LBE(ASM_OUTPUT_LBE112,3355
assign_type_number 121,3673
xcoff_output_standard_types 141,4115
#define UNKNOWN_STAB(UNKNOWN_STAB172,5345
stab_to_sclass 181,5564
xcoffout_source_file 322,7823
xcoffout_source_line 356,8689
static int do_block 372,9142
static int next_block_number;374,9168
xcoffout_block 377,9211
xcoffout_begin_block 421,10514
xcoffout_end_block 442,10992
xcoffout_declare_function 455,11235
xcoffout_begin_function 491,12153
xcoffout_end_function 504,12480
xcoffout_end_epilogue 515,12714
