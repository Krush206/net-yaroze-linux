Sun Mar 31 05:10:10 1996  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* stor-layout.c (layout_decl): Don't make a bitfield an integral mode
	if the mode of the field type is not MODE_INT.

	* sched.c (schedule_block): CALL_INSNs don't affect fixed regs.

	* flow.c (propagate_block): CALL_INSNs don't kill fixed regs.

Sat Mar 30 03:32:48 1996  Torbjorn Granlund  <tege@noisy.tmg.se>

	* expmed.c (expand_divmod, case TRUNC_DIV_EXPR): Move some code
	to avoid shifting by a too large count.

Fri Mar 29 15:45:51 1996  Doug Evans  <dje@cygnus.com>

	* configure (i[3456]86-*-sunos5*): Delete, config.sub converts
	sunos5 to solaris2.
	(sparc-*-sunos5*): Likewise.
	(sparc64-*-{solaris2*,sunos5*}): Delete.  Stick with sparc-*-solaris2*.

	* sparc.h (FUNCTION_PROFILER): Save/restore %g2 around mcount call.

Fri Mar 29 14:20:31 1996  Stan Cox  <coxs@dg-rtp.dg.com>

	* i386.c (notice_update_cc): Clear cc_status if ref modified MEM.

Fri Mar 29 09:37:52 1996  Jeffrey A. Law  <law@cygnus.com>

	* calls.c (expand_call): Remove current_call_is_indirect nonsense.
	Add additional argument to INIT_CUMULATIVE_ARGS.
	(emit_library_call): Likewise.
	(emit_library_call_value): Likewise.
	* expr.c (expand_builtin): Likewise.
	* function.c (assign_parms): Likewise.
	* config/pa/pa.h (hppa_args): New field "indirect".
	(INIT_CUMULATIVE_ARGS): Initialize "indirect" field.
	(FUNCTION_ARG): Check "indirect" field, rather than
	"current_call_is_indirect".
	* a29k.h (INIT_CUMULATIVE_ARGS):New arg, INDIRECT.
	* alpha.h (INIT_CUMULATIVE_ARGS): Likewise.
	* arm.h (INIT_CUMULATIVE_ARGS): Likewise.
	* clipper.h (INIT_CUMULATIVE_ARGS): Likewise.
	* convex.h (INIT_CUMULATIVE_ARGS): Likewise.
	* dsp16xx.h (INIT_CUMULATIVE_ARGS): Likewise.
	* elxsi.h (INIT_CUMULATIVE_ARGS): Likewise.
	* fx80.h (INIT_CUMULATIVE_ARGS): Likewise.
	* gmicro.h (INIT_CUMULATIVE_ARGS): Likewise.
	* h8300.h (INIT_CUMULATIVE_ARGS): Likewise.
	* i370/mvs.h (INIT_CUMULATIVE_ARGS): Likewise.
	* i386.h (INIT_CUMULATIVE_ARGS): Likewise.
	* i860.h (INIT_CUMULATIVE_ARGS): Likewise.
	* i960.h (INIT_CUMULATIVE_ARGS): Likewise.
	* m68k.h (INIT_CUMULATIVE_ARGS): Likewise.
	* m68k/mot3300.h (INIT_CUMULATIVE_ARGS): Likewise.
	* m88k.h (INIT_CUMULATIVE_ARGS): Likewise.
	* mips.h (INIT_CUMULATIVE_ARGS): Likewise.
	* ns32k.h (INIT_CUMULATIVE_ARGS): Likewise.
	* pdp11.h (INIT_CUMULATIVE_ARGS): Likewise.
	* pyr.h (INIT_CUMULATIVE_ARGS): Likewise.
	* romp.h (INIT_CUMULATIVE_ARGS): Likewise.
	* rs6000.h (INIT_CUMULATIVE_ARGS): Likewise.
	* sh.h (INIT_CUMULATIVE_ARGS): Likewise.
	* sparc.h (INIT_CUMULATIVE_ARGS): Likewise.
	* spur.h (INIT_CUMULATIVE_ARGS): Likewise.
	* tahoe.h (INIT_CUMULATIVE_ARGS): Likewise.
	* vax.h (INIT_CUMULATIVE_ARGS): Likewise.
	* we32k.h (INIT_CUMULATIVE_ARGS): Likewise.
	* mips.c (mips_expand_prologue): Add extra arg to
	INIT_CUMULATIVE_ARGS call.

Thu Mar 28 18:45:49 1996  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>

	* alpha.c (summarize_insn): Fix three "off-by-one" bugs in loop bounds.

Thu Mar 28 16:50:10 1996  Doug Evans  <dje@cygnus.com>

	* ginclude/inl-sparc.h: Deleted.

Thu Mar 28 12:07:31 1996  Jeffrey A. Law  <law@cygnus.com>

	* ginclude/va-h8300.h (va_arg): Don't assume sizeof (int) == 4.

	* pa.c (hppa_legitimize_address): Don't lose for
	(plus (plus (mult (A) (shadd_const)) (B)) (C)) if
	B + C isn't a valid address for indexing.
	(basereg_operand): Only accept base registers after
	cse has completed.  Don't accept the frame pointer if
	it's likely to be eliminated.
	* pa.md (unscaled indexing patterns): Add variants with
	basereg and index register reversed.
	(HImode and QImode loads): Add zero extended variants.

Wed Mar 27 07:45:27 1996  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>

	* expmed.c (negate_rtx): Fix typo in previous change.

Tue Mar 26 13:50:43 1996  Jim Wilson  <wilson@mole.gnu.ai.mit.edu>

	* calls.c (expand_call): In convert_to_mode call, use word_mode
	not SImode.

Tue Mar 26 13:44:34 1996  Doug Evans  <dje@canuck.cygnus.com>

	* configure: Delete unnecessary special handling of --with-cpu.

Tue Mar 26 10:41:57 1996  Jeffrey A. Law  <law@cygnus.com>

	* expr.c (emit_push_insn): When doing a partial push, emit
	a CLOBBER so that flow doesn't think the entire register
	is live.

Tue Mar 26 10:00:52 1996  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>

	* alpha.c (summarize_insn, default case): Properly use format_ptr.

Tue Mar 26 09:51:09 1996  Philippe De Muyter (phdm@info.ucl.ac.be)

	* m68k.h (output_move_simode_const): New extern declaration.
	* m68k.c (output_move_simode_const): New function.
	(singlemove_string): Call it.
	* m68k.md (fullword move): Likewise.

Tue Mar 26 05:43:06 1996  Torbjorn Granlund  <tege@noisy.tmg.se>

	* vax.md (insv matcher): Call CC_STATUS_INIT.
	* vax.h (NOTICE_UPDATE_CC): Handle ZERO_EXTRACT destination.

Mon Mar 25 19:18:08 1996  Jason Merrill  <jason@yorick.cygnus.com>

	* function.c (expand_function_start): Don't set up context_display
	unless current_function_needs_context.

Mon Mar 25 18:48:18 1996  Philippe De Muyter  <phdm@info.ucl.ac.be>

	* fold-const.c (fold, case BIT_IOR_EXPR): Recognize rotates
	with variable count.

Mon Mar 25 18:05:28 1996  Jim Wilson  <wilson@cygnus.com>

	* Makefile.in (libgcc1-test): Undo Feb 12 change.

Mon Mar 25 08:09:59 1996  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* objc/thread-single.c (objc_mutex_unlock): Properly declare thread_id.

Mon Mar 25 08:02:50 1996  Philippe De Muyter  <phdm@info.ucl.ac.be>

	* configure (m68k-motorola-sysv*): Fixed indentation.

Sun Mar 24 08:16:42 1996  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* expmed.c (negate_rtx): Don't try to negate a constant ourself;
	instead call simplify_unary_operation.

Sun Mar 24 07:29:06 1996  Richard Henderson  <rth@tamu.edu>

	* gcc.c (process_command): Instead of hardcoding non-empty
	switches_need_spaces to turn on "o" and "L", make the string
	contain the switches that need the spaces.
	* m68k/ccur-GAS.h (SWITCHES_NEED_SPACES): Change definition
	correspondingly.

Sat Mar 23 18:34:44 1996  Harry Dolan  <dolan@ssd.intel.com>

	* i860/paragon.h (LIB_SPEC): Always output -lmach.

Sat Mar 23 18:25:39 1996  J"orn Rennecke (amylaar@meolyon.hanse.de)

	* c-typeck.c (set_init_index): Check for use outside an array
	initializer.

        * defaults.h (ASM_OUTPUT_ADDR_DIFF_ELT): Delete.
        * pdp11.h (ASM_OUTPUT_ADDR_DIFF_ELT): Don't define.

Sat Mar 23 15:55:35 1996  Doug Evans  <dje@canuck.cygnus.com>

	* combine.c (make_extraction): In BITS_BIG_ENDIAN correction of POS,
	need to treat MEM and REG differently.

	* sparc.h (SPARC_SIMM{10,11,13}_P): Define.
	(SMALL_INT): Use SPARC_SIMM13_P.
	(CONST_OK_FOR_LETTER_P): Support new letters L,M.
	* sparc.c (arith11_operand): Use SPARC_SIMM11_P.
	(arith10_operand): Use SPARC_SIMM10_P.
	* sparc.md (*mov{qi,hi,si,di}_cc_sp64): Fix constraints.
	(*mov{qi,hi,si,di}_cc_reg_sp64): Likewise.

Sat Mar 23 07:47:19 1996  Andreas Schwab  <schwab@issan.informatik.uni-dortmund.de>

	* m68k/linux.h (TRAMPOLINE_TEMPLATE): Correct first instruction.
	* m68k/m68kv4.h (TRAMPOLINE_TEMPLATE): Likewise.

Sat Mar 23 07:06:55 1996  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* bc-emit.c (bc_emit_instruction): Add missing va_end call.

	* c-typeck.c (build_array_ref): Give error if subscripting a function.

Fri Mar 22 09:11:45 1996  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* local-alloc.c (optimize_reg_copy_1): Only update reg_live_length
	if it is non-negative.

Thu Mar 21 14:42:26 1996  Doug Evans  <dje@cygnus.com>

	* sparc/splet.h (STARTFILE_SPEC,LINK_SPEC): Define.

Wed Mar 20 17:23:18 1996  Jim Wilson  <wilson@cygnus.com>

	* cse.c (note_mem_written): Delete obsolete code for handling
	(mem (scratch)).

	* mips.c (mips_expand_prologue): In initialization of fnargs, delete
	special treatment of METHOD_TYPE.

Wed Mar 20 17:07:45 1996  Doug Evans  <dje@cygnus.com>

	* sparc/sol2.h (ASM_CPU_SPEC): Recognize -mcpu=v8plus, not v9.
	Fix typo in ultrasparc entry.
	* sparc/sparc.h (CPP_CPU_SPEC): Add v8plus entry.
	(ASM_CPU_SPEC): Likewise.

	* sparc/sparc.c (fcc_reg_operand): Ensure correct mode.
	(icc_or_fcc_reg_operand): Likewise.
	(gen_v9_scc): IF_THEN_ELSE must have a mode.
	(print_operand): New operand code `x' for all condition codes.
	New operand codes `c,d' for reversed conditional moves.
	* sparc/sparc.md (movqicc,movhicc): New named patterns.
	(movdicc): if_then_else must have a mode.
	(movsicc,movsfcc,movdfcc,movtfcc): Likewise.
	Change condition to TARGET_V9, not TARGET_ARCH64.
	Fail if DImode compare and ! TARGET_ARCH64.
	(conditional move matchers): Rewrite.

Wed Mar 20 16:12:29 1996  Stan Cox  <coxs@wombat.gnu.ai.mit.edu>

	* i386.h (HARD_REGNO_MODE_OK): Relax QImode constraint to
	avoid a reload problem.

Wed Mar 20 13:12:22 1996  Jeffrey A. Law  <law@cygnus.com>

	* pa.c (hppa_legitimize_address): Don't lose for x[n-const]
	when n-const will not be shifted.  Don't pessimize code for
	x[n-const] when const is small.

Wed Mar 20 11:42:32 1996  Markus Theissinger  <Markus.Theissinger@gmd.de>

	* m68k/sun3.h (LIB_SPEC): Don't link /usr/lib/bb_link.o with `gcc -a'.
	(__bb_init_func): Deleted.
	(BLOCK_PROFILER_CODE): Don't set macro to nothing.

	* m68k/xm-sun3.h: New file.
	* configure (m68k-sun-sunos*): Use it.

	* xm-linux.h (HAVE_POPEN): New define.

Wed Mar 20 11:28:37 1996  Andreas Schwab  <schwab@issan.informatik.uni-dortmund.de>

	* m68k/linux.h (ASM_SPEC): Deleted.
	(STRUCT_VALUE_REGNUM): Redefine as register a0.
	(STATIC_CHAIN_REGNUM): Redefine as register a1.
	(TRAMPOLINE_TEMPLATE): Redefine to use the right register.

Wed Mar 20 08:04:34 1996  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* libgcc2.c (__dummy): New function.
	* Makefile.in (LIB2FUNCS): Add __dummy.
	* expr.c (expand_builtin, case BUILT_IN_SETJMP): Call "setjmp"
	pattern, if any.
	Call dummy function pointed to by static chain pointer.
	(expand_builtin, case BUILT_IN_LONJMP): Ignore second expression.
	Set address of __dummy into static chain pointer.
	Copy the label to return to into a pseudo earlier.

	* stupid.c (last_setjmp_suid, regs_crosses_setjmp): New variables.
	(stupid_life_analysis, stupid_mark_refs): Use them to track which
	regs are live over a setjmp; don't allocate such regs.

Tue Mar 19 22:02:07 1996  Jason Merrill  <jason@yorick.cygnus.com>

	* cplus-dem.c (demangle_template): Fix for non-mangled pointer
	arguments.

Tue Mar 19 13:54:06 1996  Jeffrey A. Law  <law@wombat.gnu.ai.mit.edu>

	* pa.c (compute_frame_size): Update comments to reflect reality.
	(hppa_expand_prologue): Don't save registers which aren't
	used, even if it creates holes.  Partially undoes changes from
	early March.
	(hppa_expand_epilogue): Likewise.

Tue Mar 19 08:25:17 1996  J"orn Rennecke (amylaar@meolyon.hanse.de)

	* stmt.c (struct case_node): New member balance.
	(add_case_node): New function.
	(pushcase, pushcase_range): Use it.
	(case_tree2list): New function.
	(expand_end_case): Use it.

Tue Mar 19 07:44:22 1996  Stephen L Moshier  (moshier@world.std.com)

	* regstack.c (move_for_stack_reg): Avoid stack overflow while
	storing XFmode from fp reg to memory.

Tue Mar 19 07:38:03 1996  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* m68k.h (MASK_*): New macros.
	(OVERRIDE_OPTIONS): Use them.
	(TARGET_SWITCHES): Likewise.
	Treat -m68332 like -m68000.

Mon Mar 18 20:04:13 1996  Richard Earnshaw (rearnsha@armltd.co.uk)

	* expmed.c (emit_store_flag): If expanding (GE X 0) will need two
	insns, don't use subtarget for the result of the first insn.
	Move a likely constant to the start of a condition.

Mon Mar 18 19:48:14 1996  Philippe De Muyter  <phdm@info.ucl.ac.be>

	* m68k.h (CONST_OK_FOR_LETTER_VALUE): New constraint 'M'.
	* m68k.c (output_function_epilogue): Restore registers using sp+
	instead of fp(n) in leaf functions.
	(USE_MOVQ, use_movq): Function replaced by macro.
	* m68k.md (pushexthisi_const, movsi_const0): New names.
	(andsi3, iorsi3): Allow only 'M', not 'K' constants, if dest is 'd'.

Mon Mar 18 19:33:20 1996  Fila Kolodny <fila@ibi.com>

	* i370/t-mvs: New file.
	* configure (i370-*-mvs*): Use it.
	* i370/mvs.h (FUNCTION_PROLOGUE): LE/370 takes 120 bytes for DSA.
	Have only one copy of timestamp and PPA2 per object module.
	Only have unnamed CSECT to match IBM C.

Mon Mar 18 19:26:21 1996  Paul Russell  (Rusty.Russell@adelaide.maptek.com.au)

	* combine.c (simplify_if_then_else): Allow for case that
	condition might no longer be a condition.

Mon Mar 18 19:14:42 1996  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* c-typeck.c (build_conditional_expr): If OP1 is null, set
	both OP1 and ORIG_OP1 to IFEXP.

	* c-iterate.c (iterator_loop_epilogue): Don't clear DECL_RTL
	for a static decl.

Mon Mar 18 08:02:25 1996  Stephen L Moshier <moshier@world.std.com>

	* alpha.c (summarize_insn, case SUBREG, CONST_*): New cases.

Sun Mar 17 16:55:00 1996  Doug Evans  <dje@cygnus.com>

	* combine.c (find_split_point): Handle NULL return from
	make_extraction.
	(make_field_assignment): Likewise.

Sat Mar 16 18:56:47 1996  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* tree.c (substitute_in_expr, case COMPONENT_REF): Ignore
	if inner PLACEHOLDER_EXPR has not yet been initialized.

	* i386.c (standard_80386_constant_p): -0.0 is not 0.0.
	* i386.md (insv): Restore missing end of comment.

	* combine.c (make_extraction): Correct typo in force_to_mode
	call in previous change.
	Return 0 if pos+len out of range of want desired mode.

Sat Mar 16 16:20:43 1996  David Mosberger-Tang  <davidm@azstarnet.com>

	* alpha.md (trap): New attribute.
	Modify patterns for all floating-point trap generating instructions.
	* alpha.h (CPP_SPEC): Added -mieee and -mieee-with-inexact.
	(alpha_trap_precision, alpha_fp_rounding_mode, alpha_fp_trap_mode):
	New enum types.
	(target_flags, alpha_tp, alpha_fprm, alpha_fptm): New external vars.
	(alpha_fprm_string, alpha_fptm_string, alpha_tp_string): Likewise.
	(TARGET_IEEE{,_WITH_INEXACT,_CONFORMANT}): New macros.
	(MASK_IEEE{,_WITH_INEXACT,_CONFORMANT}): Likewise.
	(MASK_FP, MASK_FPREGS,
	(TARGET_SWITCHES): Added "ieee-conformant", "ieee", and
	"ieee-with-inexact"; use MASK symbols.
	(TARGET_OPTIONS): New macro.
	(OVERRIDE_OPTIONS, FINAL_PRESCAN_{INSN,LABEL}): New macros.
	(PRINT_OPERAND_PUNCT_VALID_P): Allow operand codes for FP insns.
	(CC1_SPEC): New macro.
	* alpha.c (alpha_tp, alpha_fprm, alpha_fptm): New variables.
	(alpha_tp_string, alpha_fprm_string, alpha_fptm_string
	(trap_pending): Likewise.
	(override_options, summarize_insn, final_prescan_insn): New functions.
	(print_operand): Handle cases '&', '\'', ')', and '+'.
	(output_prolog): Emit ".eflag 48" if TARGET_IEEE_CONFORMANT.
	(output_epilog): Call final_prescan_insn before emitting epilog.

	* final.c (final_scan_insn, case CODE_LABEL): Invoke
	FINAL_PRESCAN_INSN if FINAL_SCAN_LABEL is defined.

	* alpha/{linux.h,x-linux,xm-linux.h}: New files.
	* configure (alpha-*-linux*): New case.
	* alpha.c (output_prolog): Set alpha_function_needs_gp if profiling
	and TARGET_PROFILING_NEEDS_GP defined.

Thu Mar 14 22:28:20 1996  David Edelsohn  <edelsohn@mhpcc.edu>

	* rs6000.h (LEGITIMATE_OFFSET_ADDRESS_P): Fix last change.
	* aix41.h (LINK_SPEC): add -bnoentry if shared and no explicit entry.

Thu Mar 14 12:47:33 1996  Jim Wilson  <wilson@cygnus.com>

	* mips.h (ASM_OUTPUT_DOUBLE_INT): Use 'X' if CONST_INT and
	HOST_BITS_PER_WIDE_INT == 64.

	* mips.c (mips_expand_prologue): Change TYPE_NEEDS_CONSTRUCTING to
	TREE_ADDRESSABLE;

Thu Mar 14 11:21:37 1996  Michael Meissner  <meissner@tiktok.cygnus.com>

	* rs6000.h (LEGITIMATE_OFFSET_ADDRESS_P): For 32-bit mode,
	allow TImode variables with int offsets, so that structures
	greater than 8 bytes and less than or equal to 16 bytes can be
	instantiated correctly.

	* rs6000.c (rs6000_valid_type_attribute_p): Add exception
	attribute for Windows NT.

	* win-nt.h (ASM_OUTPUT_FUNCTION_PREFIX): Delete, merge into
	ASM_DECLARE_FUNCTION_NAME.
	(ASM_DECLARE_FUNCTION_NAME): Add support for exception attribute
	setting fields 3 & 4 of the structured exception handling table.

Thu Mar 14 01:53:19 1996  Jeffrey A. Law  <law@cygnus.com>

	* pa.h (ASM_DECLARE_FUNCTION_NAME): Change TYPE_NEEDS_CONSTRUCTING
	to TREE_ADDRESSABLE.  From Jim Wilson.

Wed Mar 13 13:40:32 1996  Jim Wilson  <wilson@chestnut.cygnus.com>

	* c-tree.h (warn_sign_compare): Add extern to declaration.

Wed Mar 13 13:37:00 1996  Doug Evans  <dje@cygnus.com>

	* configure: Use cross-make and build-make if building
	cross compiler with cross compiler.

Wed Mar 13 12:00:34 1996  Michael Meissner  <meissner@tiktok.cygnus.com>

	* i386/cygwin32.h (ASM_OUTPUT_ALIGN): Correct defination.

	* rs6000/{win-nt,cygwin32}.h (STARTFILE_SPEC): Add crti.o before
	all objects.
	(ENDFILE_SPEC): Add crtn.o after all objects.

	* configure (powerpcle-*-cygwin32): Use t-winnt, not t-cygin32
	* rs6000/t-cygwin32: Delete, no longer used.

	* rs6000/t-winnt ({,INSTALL_}LIBGCC): Build and install crti.o and
	crtn.o.

	* rs6000/win-nt.h (EXTRA_SECTION_FUNCTIONS): Add ctors_section and
	dtors_section.
	(INVOKE__main): Define, so that __main is called.
	(ASM_OUTPUT_{CONSTRUCTOR,DESTRUCTOR}): Define to put pointers to
	the constructor/destructor in the appropriate section.

	* nt-c{i,n}.asm: New files to be linked before/after all of the users'
	objects.

Wed Mar 13 00:42:17 1996  Per Bothner  <bothner@cygnus.com>

	* dbxout.c (dbxout_type):  Better "variant" handling to ignore
	const/volatile but not typedef names.  Improves Feb 12 change.

Tue Mar 12 17:25:14 1996  David Mosberger-Tang  <davidm@azstarnet.com>

	* glimits.h (__LONG_MAX__): On Alpha, use 64 bit value.

Tue Mar 12 15:07:49 1996  Torbjorn Granlund  <tege@tmg.se>

	* m68k.c (valid_dbcc_comparison_p): Don't test cc_prev_status here.
	(flags_in_68881): New function.
	* m68k.md (dbra peepholes): Use flags_in_68881.

Tue Mar 12 13:54:15 1996  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* sparc.md (nonlocal_goto): Emit barrier after jump.
	(setjmp{,_64,_32}): New patterns.

Tue Mar 12 12:43:27 1996  Jim Wilson  <wilson@cygnus.com>

	* i960/i960.h (ROUND_TPE_SIZE): Return round_up result instead of
	COMPUTED.

	* expr.c (expand_expr, case COMPONENT_REF): For unaligned object in
	an aligned union, delete check for EXPAND_SUM.

	* expr.h (clear_storage): Add comment terminator.

Mon Mar 11 19:07:50 1996  Jeffrey A. Law  <law@cygnus.com>

	* recog.c (constrain_operands, case 'V'): Don't call
	offsettable_memref_p before reload has completed.

Mon Mar 11 16:06:13 1996  Doug Evans  <dje@cygnus.com>

	* h8300/h8300.h (SP_AND_G_REGS): Renamed from SP_AND_G_REG.
	(CC_DONE_CBIT): Delete.
	(CC_OVERFLOW_0,CC_OVERFLOW_UNUSABLE,CC_NO_CARRY): Define.
	* h8300/h8300.c (cond_string): Delete CC_DONE_CBIT handling.
	(notice_update_cc): Delete CC_CBIT, CC_WHOOPS.  Add CC_SET_ZN_C0.
	(restore_compare_p): New function.
	(shift_one): Use shll instead of shal so overflow bit is usable.
	Set cc_valid bits to cc_status.flags values.
	(emit_a_shift): Set cc_status.flags.
	* h8300/h8300.md (attr cc): Delete whoops,cbit.  Add set_zn_c0.
	(all patterns) Update cc attr setting.
	(tstqi,tsthi,tstsi): Delete CC_DONE_CBIT handling.
	(addhi3,subhi3): Change define_expand to define_insn.
	(branch_true,branch_false): Check if compare needs to be restored.

Mon Mar 11 13:55:23 1996  Michael Meissner  <meissner@cygnus.com>

	* rs6000.h (CONST_DOUBLE_OK_FOR_LETTER_P): Add 'H' for movdi
	patterns in 32 bit that generate 3 instructions.
	(num_insns_constant): Add declaration.

	* rs6000.c (num_insns_constant{,_wide}) Functions to determine the
	number of insns it takes to generate an integer constant.
	(easy_fp_constant): Allow DImode in easy constants.  Use
	num_insns_constant_wide.
	(input_operand): Allow any CONST_{INT,DOUBLE}'s for {SI,DI}mode.

	* rs6000.md (movdi): Generate a normal movdi using a CONST_DOUBLE
	for 32 bit mode rather than using SUBREG's.  For 64 bit mode,
	break large integer constants into smaller pieces.  Add various
	define_splits to handle loading the various DImode constants.

Mon Mar 11 06:54:19 1996  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* combine.c (make_extraction): Use proper mode for INNER in all cases.
	(simplify_comparison, case ZERO_EXTRACT): For bits big endian and
	no extzv, use BITS_PER_WORD.
	* fx80.md, gmicro.md, i386.md, m68k.md, tahoe.md, vax.md:
	Use proper modes and predicates for {sign,zero}_extract.

Sun Mar 10 06:23:52 1996  J"orn Rennecke (amylaar@meolyon.hanse.de)

	* emit-rtl.c (free_insn): New variable.
	(init_emit, restore_emit_status): Clear it.
	(gen_sequence): Store insn in free_insn when sequence length is 1.
	(make_insn_raw): Use free_insn if available and still in the
	rtl generation phase.

Fri Mar  8 15:37:31 1996  Mike Stump  <mrs@cygnus.com>

	* expr.c (expand_expr, case TARGET_EXPR): Delay putting the cleanup
	on the cleanup chain until after the subexpression has been expanded.

Fri Mar  8 16:14:51 1996  J"orn Rennecke (amylaar@meolyon.hanse.de)

        * i386.c (ix86_binary_operator_ok): one memory operand is OK.
        This is independent of commutativity.

Fri Mar  8 14:07:43 1996  Jim Wilson  <wilson@cygnus.com>

	* expr.c (store_constructor_field): Call store_field if bitpos is
	nonzero and target is not a MEM.

	* jump.c (jump_optimize): When handle a USE insn before an
	unconditional jump, disable the optimization if the USE is the
	only insn in the loop.

	* sh.c (reg_unused_after): Return 0 if see a JUMP_INSN.

Fri Mar  8 12:08:36 1996  Doug Evans  <dje@cygnus.com>

	* sparc/lynx.h (CPP_SPEC): Use %(cpp_cpu).

	* sparc/sparc.md (move_pic_label_si,move_label_di): Rewrite length
	attr calcs to be more conservative.

Thu Mar  7 19:14:21 1996  Doug Evans  <dje@cygnus.com>

	* sparc/t-splet: New file.
	* sparc/splet.h: New file.
	* configure (sparclet-*-aout*): Use them.

	* sparc/sparc.h (MASK_LIVE_G0,TARGET_LIVE_G0): Define.
	(FIRST_PSEUDO_REGISTER): Add 1 for %icc (now 101).
	(FIXED_REGISTERS,CALL_USED_REGISTERS): Update.
	(FIXED_REGISTERS): %g0 is fixed by default.
	(SPARC_{FIRST,LAST}_V9_FCC_REG): Define.
	(SPARC_{ICC,FCC}_REG): Define.
	(CONDITIONAL_REGISTER_USAGE): Don't fix %fcc0 if v8.
	(REG_CLASS_CONTENTS): Reg 0 is an int reg, reg 100 is %icc.
	(REGNO_REG_CLASS): Rewrite to use global `sparc_regno_reg_class'.
	(REG_ALLOC_ORDER,REG_LEAF_ALLOC_ORDER,LEAF_REGISTERS): Add %icc.
	(REG_CLASS_FROM_LETTER): Handle 'c' for FPCC_REGS in non-v9 case.
	(REGNO_OK_FOR_{BASE,INDEX}_P): Treat %g0 as a normal reg.
	(REG_OK_FOR_{BASE,INDEX}_P,EXTRA_CONSTRAINT): Likewise.
	(REGISTER_NAMES): Add %icc.
	(ADDITIONAL_REGISTER_NAMES): Use SPARC_ICC_REG.
	* sparc/sparc.c (leaf_reg_remap): Add %icc=100.
	(reg_or_0_operand): Don't allow 0 if TARGET_LIVE_G0.
	(fcc_reg_operand): Renamed from ccfp_reg_operand.
	Use SPARC_FCC_REG.  Don't treat reg 0 as an fcc reg.  Don't match
	modes if `mode' argument is VOIDmode.
	(icc_or_fcc_reg_operand): New function.
	(gen_compare_reg): Use SPARC_FCC_REG for v8 fp compares.
	Use SPARC_ICC_REG for int compares.
	(eligible_for_epilogue_delay): Don't allow anything if TARGET_LIVE_G0.
	Delete unnecessary test for %g0.
	(emit_move_sequence): Don't emit (set (mem) (const_int 0)) if
	TARGET_LIVE_G0.
	(output_scc_insn): Label moved to operand 3.  Condition code reg
	moved to operand 2.
	(sparc_mode_class): Enum C_MODE renamed to CC_MODE.
	(hard_32bit_mode_classes): Set reg 0 to S_MODES.  Add entry for %icc.
	(hard_64bit_mode_classes): Set reg 0 to D_MODES.  Add entry for %icc.
	(sparc_regno_reg_class): New global.
	(sparc_init_modes): Initialize it.
	(output_cbranch): Delete fp_cond_reg argument.
	(print_operand, MEM op): Don't print "%g0+" if TARGET_LIVE_G0.
	(sparc_flat_eligible_for_epilogue_delay): Don't allow anything if
	TARGET_LIVE_G0.
	* sparc/sparc.md (live_g0): New attribute.
	(*): Integer condition code register is now reg 100.
	Use SPARC_ICC_REG instead of hardcoding reg 100 where possible.
	Non-v9 floating point condition code register is now reg 96.
	(*cmp{sf,df,tf}_{fpe,fp}_sp{32,64}): Combine v9/non-v9 cases.
	(*{normal,inverted}_{,fp,fpe}_branch): Update call to output_cbranch.
	(*mov{qi,hi,si}_insn): Don't use if TARGET_LIVE_G0.
	(*mov{qi,hi,si}_insn_liveg0): New patterns.
	(*mov{si,di,sf,df,tf}_ccfp{,e}_sp64): ccfp_reg_operand renamed to
	fcc_reg_operand.
	(*negdi2_sp32,negsi2,one_cmplsi2,ffssi2): Ensure %%g0 is 0 if
	TARGET_LIVE_G0.
	(*one_cmpldi2_sp32): Move operand 1 to rs1 and use 0 as rs2.
	(patterns that use %g0 in rs2): Use 0 immediate value instead.
	(patterns that read %g0): Don't use if TARGET_LIVE_G0.

Thu Mar  7 15:39:16 1996  Jim Wilson  <wilson@chestnut.cygnus.com>

	* sh.h (PASS_IN_REG_P): Change < to <=.
	* va-sh.h (va_start): Change __SH3E___ to __SH3E__.
	(va_arg): Add little-endian SH3E support.  Fix big-endian version
	to work for arguments smaller than the word size.

Thu Mar  7 10:37:37 1996  Jeffrey A. Law  <law@cygnus.com>

	* lib2funcs.asm: Remove entry/exit routines.  Move them into...
	* ee.asm: New file.  Entry/exit code.
	* ee_fp.asm: New file.  Entry/exit code with frame pointer.
	* t-pa: Corresponding changes.
	* t-pro: Corresponding changes.

	* pa.c: Fix misc small typos/thinkos in recent changes.

Wed Mar  6 17:36:03 1996  Jason Merrill  <jason@yorick.cygnus.com>

	* cplus-dem.c (demangle_template): Fix for address-of-extern arguments.

Wed Mar  6 15:12:55 1996  Jeffrey A. Law  <law@cygnus.com>

	* t-pro (dp-bit rule): Fix typo.

	* lib2funcs.asm (__outline_prologue): Remove frame pointer
	support.
	(__outline_prologue_fp): Out of line prologue with frame pointer.
	(__outline_epilogue, outline_epilogue_fp): Similarly.
	* pa.c (compute_frame_size): Allocate enough space to avoid holes
	in the callee register saves.  Remove some special handling of %r3.
	(hppa_expand_prologue): Don't do an out of line prologue/epilogue
	if it would take more insns than an inline prologue/epilogue.
	Don't leave holes in the callee register save set.
	(hppa_expand_prologue): Corresponding changes.  Pass stack size
	to out of line epilogue code.
	* pa.h (FRAME_POINTER_REQUIRED): Revert last change.
	* pa.md (outline_prologue_call): Handle outline prologues which
	don't need frame pointers.
	(outline_epilogue_call): Similarly.
	* t-pro: Reenable multilib code.  Build a set of libraries that
	optimize for space.

Wed Mar  6 14:28:14 1996  Jim Wilson  <wilson@chestnut.cygnus.com>

	* Makefile.in (USER_H): Add ginclude/va-sh.h.
	* ginclude/stdarg.h, ginclude/varargs.h: Use va-sh.h.
	* ginclude/va-sh.h: New file.

	* sh.h (PASS_IN_REG_P): Fix typo in last change.

Wed Mar  6 11:42:06 1996  David Edelsohn  <edelsohn@mhpcc.edu>

	* rs6000.h (enum processor_type): Remove PROCESSOR_PPC602.
	(RTX_COSTS): Remove PROCESSOR_PPC602.  PPC603 MULT cost depends
	on constant and domain.
	* rs6000.c (processor_target_table): 602 uses PROCESSOR_PPC603.
	(get_issue_rate): Remove CPU_PPC602.
	* rs6000.md (function units): Remove PPC602.  Add store and
	fpstore type attribute values.  Update patterns.

Tue Mar  5 18:43:43 1996  Richard Henderson  <rth@tamu.edu>

	* m68k/coff.h (ASM_OUTPUT_SECTION_NAME): New define.

	* m68k/{aux-crt1.c,aux-crt[2n].asm}: New files.
	* m68k/{aux-exit.c,aux-low.gld,aux-mcount.c}: More new files.
	* m68k/{aux.h,auxgnu.h,auxstd.h}: Even more new files.
	* m68k/{t-aux,xm-aux.h}: The rest of the new files.
	* m68k/sgs.h (ASM_OUTPUT_CASE_END): Add missing semicolon.
	(switch_table_difference_label_flag): Make extern.
	* fixincludes (sys/param.h): Fix c89 __asm statements.
	* configure (m68k-apple-aux*): New target.

Tue Mar  5 17:38:19 1996  Doug Evans  <dje@cygnus.com>

	* sparc.md (*mov{qi,hi,si}_insn): Simplify length attribute.
	(*movsi_insn): Use fpload/fpstore attributes for fp loads/stores.
	%r1 -> %1 for fpstore alternative.
	(*movsf_insn,*movsf_no_f_insn): %r1 -> %1.

Tue Mar  5 17:19:17 1996  Jason Merrill  <jason@yorick.cygnus.com>

	* expr.c (expand_expr, case *_DECL): If we make a non-local
	reference from a function with DECL_NO_STATIC_CHAIN set, abort.
	(expand_expr, case ADDR_EXPR): We don't need a trampoline for a
	function with DECL_NO_STATIC_CHAIN set.
	* function.c (lookup_static_chain): If we're checking on a function
	that doesn't need a static chain, return 0.
	(init_function_start): We don't need context if DECL_NO_STATIC_CHAIN
	is set.
	* tree.c (staticp): Check DECL_NO_STATIC_CHAIN on nested functions.

Tue Mar  5 15:04:29 1996  Jim Wilson  <wilson@chestnut.cygnus.com>

	* sh.md (push_e, pop_e): Add TARGET_SH3E to condition.
	* sh.h (JUMP_TABLES_IN_TEXT_SECTION): Define.
	* sh.c (find_barrier): Set si_limit to 1018 instead of 1020, and
	hi_limit to 510 instead of 512.

Tue Mar  5 13:39:44 1996  Doug Evans  <dje@cygnus.com>

	* loop.c (init_loop): Use pseudo reg in add_cost computation
	so cost doesn't vary depending on whether reg 0 happens to be
	fixed or not.

Tue Mar  5 09:32:24 1996  J"orn Rennecke (amylaar@meolyon.hanse.de)

	* reg-stack.c (record_label_references): Check for undefined label.

Tue Mar  5 09:22:20 1996  Scott Christley (scottc@net-community.com)

	* objc/objc-api.h, objc/runtime.h: Include objc/thread.h.
	* objc/class.c (__objc_init_class_tables): Surround sarray access
	with mutex lock/unlock.
	(__objc_add_class_to_hash, objc_lookup_class): Likewise.
	(objc_get_class, objc_get_next_class): Likewise.
	(__objc_resolve_class_links, class_pose_as): Likewise.
	* objc/init.c (__objc_runtime_mutux, __objc_runtime_thread_alive):
	New variables.
	(objc_init_statics, __objc_init_protocols): Surround sarray access
	with mutex lock/unlock
	(__objc_exec_class): Likewise.
	Initialization for thread-safe global variables.
	Declarations for thread-safe functions and global variables
	* objc/sendmsg.c (get_imp, __objc_responds_to):
	Surround sarray access with mutex lock/unlock.
	(__objc_init_install_dtable): Likewise.
	(__objc_update_dispatch_table_for_class): Likewise.
	(__objc_print_dtable_stats): Likewise.
	* objc/selector.c (sel_get_typed_uid, sel_get_any_typed_uid): Likewise.
	(sel_get_any_uid, sel_get_name, sel_register_name): Likewise.
	(sel_register_typed_name): Likewise.
	* objc/sarray.h (union sversion): New.
	(struct sarray): Maintain multiple versions.
	(sarray_remove_garbage): Add prototype.
	* objc/sarray.c (sarray_{remove,free}_garbage): New functions.
	(sarray_at_put, sarray_new, sarray_lazy_copy):
	Modify/copy sarray structure/data in a thread-safe manner
	(sarray_{realloc,free}): Reallocate/free sarray structure/data in a
	thread-safe manner.

	* objc/THREADS, objc/thread.c, objc/thread.h: New files.
	* objc/thread-{decosf1,irix,solaris,win32,single}.c: New files.
	* objc/objc-list.h: Renamed from objc/list.h.
	* objc/Makefile: Changes to compile new files and name renaming.
	* objc/makefile.dos: Likewise.

Tue Mar  5 07:51:31 1996  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* bc-emit.c, bc-optab.c (free): Delete declaration of library function.

	* c-decl.c (duplicate_decl): If making decl non-external, copy
	context from old to new.

Tue Mar  5 02:27:35 1996  Jeffrey A. Law  <law@cygnus.com

	* lib2funcs.asm (__outline_prologue): New "function".
	(__outline_epilogue): New "function".
	* pa.h (TARGET_SPACE): Define.
	(target_flags): Add -mspace and -mno-space.  Enable/disable
	space saving optimizations.
	(FRAME_POINTER_REQUIRED): Frame pointers are always required
	when generating out of line prologues and epilogues.
	* pa.c (compute_frame_size): Handle out of line prologues/epilogues.
	(hppa_expand_prologue): If optimizing for space, emit an out of
	line prologue.
	(hppa_expand_epilogue): Similarly.
	(override_options): Optimizing for space is not compatable with
	either profiling or PIC code generation.
	* pa.md (outline_prologue_call): New pattern.
	(outline_epilogue_call): Likewise.

Tue Mar  5 02:17:32 1996  Doug Evans  <dje@cygnus.com>

	* sparc.md (*cmp{si,di}_insn): %r0 -> %0.
	(DFmode move define_split): Ensure registers not extended v9 fp regs.
	(*mov{sf,df,tf}_cc_reg_sp64): %r3 -> %3.

Mon Mar  4 18:46:37 1996  Manfred Hollstein  <manfred@lts.sel.alcatel.de>

	* Makefile.in (CRT0STUFF_T_CFLAGS): New macro.
	(stamp-crt0, crt0.o, mcrt0.o): New goals.
	(STAGESTUFF): stamp-crt0 added.

	* collect2.c (main): Check new define DEFAULT_A_OUT_NAME.

	* m68k.c (print_operand): Emit .l as scale factor #ifdef MOTOROLA.
	* m68k/mot3300-crt0.S, m68k/mot3300Mcrt0.S: New files.
	* m68k/mot3300g.h: Deleted.
	* m68k/mot3300.h (FUNCTION_PROFILER): Emit label references
	corresponding to those generated by ASM_OUTPUT_INTERNAL_LABEL.
	(MOTOROLA, MOTOROLA_BSR, ...): Define #ifndef USE_GAS.
	(ASM_SPEC): Define properly #ifdef USE_GAS.
	(LIB_SPEC): -L/usr/lib/libp deleted.
	(STARTFILE_SPEC): -L/usr/lib/libp added.
	(DEFAULT_A_OUT_NAME): Define.
	(LINK_SPEC): Pass -v if GNU ld is used.
	(LOCAL_LABEL_PREFIX): Local labels start with .L using GAS, else L%.
	(USER_LABEL_PREFIX): Undefine.
	(FUNCTION_PROFILER): Call asm_fprintf instead of normal fprintf.
	(ASM_APP_ON, ASM_FILE_START): GAS supports it.
	(CTORS_.../DTORS_...): Define if GNU ld is used.
	(ASM_FILE_START): Define properly for Motorola and GNU as syntax.
	(TARGET_VERSION): Re-define only #ifndef USE_GAS.
	(CALL_USED_REGISTERS): Deleted.
	(GLOBAL_ASM_OP): Re-define only #ifndef USE_GAS.
	(ASM_{LONG,SHORT,CHAR,BYTE,BYTE_OP}): New macros.
	(ASM_OUTPUT_{DOUBLE,LONG_DOUBLE,FLOAT,INT,SHORT}): Use them.
	(ASM_OUTPUT_{CHAR,BYTE,ASCII,FLOAT_OPERAND,DOUBLE_OPERAND}): Likewise.
	(ALIGN_ASM_OP, SKIP_ASM_OP): New macros.
	(ASM_OUTPUT_{ALIGN,SKIP}): Use them.
	(ASM_OUTPUT_SOURCE_FILENAME): Define only if not using GNU as.
	(ASM_{GENERATE,OUTPUT}_INTERAL_LABEL): Provide proper definitions for
	Motorola and GNU as syntax.
	(ASM_OUTPUT_ADDR_{VEC,DIFF}_ELT): Changed for portability between
	Motorola and GNU as syntax.
	(ASM_OUTPUT_{CASE_LABEL,OPCODE}): Define only if not using GNU as.
	(ASM_OUTPUT_CASE_FETCH, ASM_RETURN_CASE_JUMP): New macros.
	(ASM_OUTPUT_{COMMON,LOCAL}): Proper defns for Motorola and gas syntax.
	(SDB_...): Define only for Motorola as.
	(ALT_LIBM): New define to tell g++.c about an alternative name for
	`-lm'.
	(MATH_LIBRARY, NEED_ATEXIT, HAVE_ATEXIT, EXIT_BODY): New macros.
	* m68k/t-mot3300, m68k/t-mot3300-{gald,gas,gld}: New files.
	* m68k/x-mot3300-gas: New file.
	* m68k/xm-mot3300.h (USG): Set to 1.
	* configure (m68k-motorola-sysv*): Keep track of new different
	combinations (--with-gnu-...), and provide proper definitions for
	tm_file, xmake_file, tmake_file, use_collect2, and extra_parts.

	* gbl-ctors.h (HAVE_ATEXIT): Define if NEED_ATEXIT is defined.
	(atexit): Use `int atexit' prototype also if NEED_ATEXIT is defined.
	(on_exit): According to man on_exit on the Sun it returns int not void.
	* libgcc2.c (L_bb/atexit, onexit): Declarations replaced by
	#include'ing "gbl-ctors.h".
	(L_exit/atexit): New function.
	(L_exit/exit): Call any registered functions.

Mon Mar  4 18:03:38 1996  Bryan Ford  (baford@cs.utah.edu)

	* configure (i[3456]86-moss-msdos*): New target.
	* i386/moss.h: New file.

Mon Mar  4 17:38:50 1996  Jim Wilson  <wilson@cygnus.com>

	* sh.h (PASS_IN_REG_P): Don't reject BLKmode for SH3e.
	For SH3e, do reject parameter that won't fit entirely in registers.

	* sh.md (mulhisi3-2, mulhisi3-1, mulsidi3_i, umulsidi3_i,
	smulsi3_highpart, umulsi3_highpart): Renames operands 1/2 to 0/1.
	(mulsidi3, umulsidi3): Add support for TARGET_LITTLE_ENDIAN.

	* sh.c (machine_dependent_reorg): In TARGET_RELAX code, when scan
	forward from LINK, fail if pass a CODE_LABEL before finding INSN.
	Fail if SCAN not INSN is a JUMP_INSN.

Mon Mar  4 11:27:10 1996  Michael Meissner  <meissner@tiktok.cygnus.com>

	* rs6000.h (CALL_LONG): Change CALL_xx values from an enumeration
	to bitmasks.  Add CALL_LONG to support longcall attributes.
	(rs6000_args): Call_cookie field is now an int.
	(rs6000_longcall_ref): Add declaration.

	* rs6000.c (init_cumulative_args): Add support for longcall
	attributes to always call through a pointer.
	(function_arg): Ditto.
	(rs6000_valid_type_attribute_p): Ditto.
	(rs6000_longcall_ref): New function for long calls.

	* rs6000.md (call insns): Add support for longcall attributes.

Mon Mar  4 08:42:14 1996  J"orn Rennecke (amylaar@meolyon.hanse.de)

	* real.c (significand_size): Don't test the modes, but their sizes.

	* dwarfout.c (xstrdup): Moved from here.
	* toplev.c (xstrdup): New function.
	* tree.h (xstrdup): Declare.
	* bc-emit.c (bc_xstrdup): Delete.
	* expr.c (bc_strdup): Delete.
	(bc_load_externaddr_id): Use xstrdup instead of bc_xstrdup.
	* function.c (bc_expand_function_start): Likewise.
	* 1750a.c (strdup): Delete.
	(float_label): Use xstrdup instead of strdup.
	* 1750a.h (xstrdup): Declare instead of instead of strdup.
	(ASM_OUTPUT_LABEL): Use xstrdup instead of strdup.
	(FIX_FRAME_POINTER_ADDRESS): Don't use DEPTH in string.

Mon Mar  4 08:23:23 1996  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>

	* xm-we32k.h (NO_WAIT_H): Deleted.

	* collect2.c: Never include wait.h.

Sat Mar  2 22:43:07 1996  Torbjorn Granlund  <tege@spiff.gnu.ai.mit.edu>

	* configure (code for making links): Work around sh bug on FreeBSD.

Sat Mar  2 13:40:29 1996  Jeffrey A. Law  <law@cygnus.com>

	* h8300.h (BIGGEST_FIELD_ALIGNMENT): Replace uses of
	TARGET_ALIGN_STRUCT_300 with TARGET_ALIGN_300.
	(BIGGEST_ALIGNMENT): Likewise.

Sat Mar  2 08:04:50 1996  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* calls.c (expand_call): If passing by invisible ref, not const.

	* sparc.c (SKIP_CALLERS_UNIMP_P): Make agree with test used in call.

	* expr.c (do_jump, case COMPOUND_EXPR): Call preserve_temp_slots.

	* fold-const.c (fold, case *_DIV_EXPR): Ignore SAVE_EXPR if has RTL.

Fri Mar  1 17:59:17 1996  Jeffrey A. Law  <law@cygnus.com>

	* optabs.c (emit_cmp_insn): Immediately copy the return
	value from the library call into a pseudo register.
	(emit_float_lib_cmp): Likewise.

Fri Mar  1 14:37:40 1996  Michael Meissner  <meissner@tiktok.cygnus.com>

	* rs6000/sysv4.h (BSS_SECTION_ASM_OP): Define.
	(*_SECTION_ASM_OP): Change tab after .section into a space.
	(ASM_OUTPUT_INT): Ditto.
	(ASM_OUTPUT_ALIGNED_LOCAL): Rewrite to use bss_section.
	(ASM_OUTPUT_ALIGNED_BSS): Define to use ASM_GLOBALIZE_LABEL and
	ASM_OUTPUT_ALIGNED_LOCAL.

	* rs6000/win-nt.h (BSS_SECTION_ASM_OP): Define.
	(ASM_OUTPUT_ALIGNED_LOCAL): Define.
	(ASM_OUTPUT_LOCAL): Don't define any more.
	(ASM_OUTPUT_ALIGNED_BSS): Define to use ASM_GLOBALIZE_LABEL and
	ASM_OUTPUT_ALIGNED_LOCAL.

Thu Feb 29 17:33:12 1996  Jim Wilson  <wilson@chestnut.cygnus.com>

	* c-typeck.c (push_init_level): When output padding to align structure
	field, set constructor_unfilled_fields.

	* dbxout.c (dbxout_type, case METHOD_TYPE): Add CHARS (1) call
	after emitting second '#' character.

Thu Feb 29 13:59:27 1996  Doug Evans  <dje@charmed.cygnus.com>

	* h8300/h8300.h (ASM_OUTPUT_BSS): Define.
	* m68k/coff.h (BSS_SECTION_ASM_OP): Define.
	(ASM_OUTPUT_ALIGNED_BSS): Define.
	* m68k/m68k-aout.h (BSS_SECTION_ASM_OP): Define.
	(ASM_OUTPUT_BSS): Define.

Thu Feb 29 13:39:39 1996  Per Bothner  <bothner@cygnus.com>

	* varasm.c (compare_constant_1):  For a SET_TYPE CONSTRUCTOR,
	first extract and compare the set length.

	* varasm.c (record_constant_1):  For SET_TYPE CONSTRUCTOR,
	permanent_obstack.next_free is *end* of available space.

Thu Feb 29 13:14:14 1996  Jeffrey A. Law  <law@cygnus.com>

	* pa.h (TARGET_SWITCHES): Add new flags "-mlong-load-store" and
	"-mno-long-load-store".
	(TARGET_LONG_LOAD_STORE): Define.
	* pa.md (symbolic high part): Handle TARGET_LONG_LOAD_STORE.

Thu Feb 29 11:39:30 1996  Stan Cox  <coxs@dg-rtp.dg.com>

	* i386/i386.md (cmpxf*): XF compare cannot have mem operands.
	(casesi expand): Put (minus:SI..) into subsi3 format.
	* i386/i386.c (i386_return_pops_args): Cleanup extra argument
	used as address of a returned structure.

Wed Feb 28 22:24:28 1996  Doug Evans  <dje@cygnus.com>

	* varasm.c (enum in_section): Define in_bss if BSS_SECTION_ASM_OP
	is defined.
	(bss_section,asm_output_bss,asm_output_aligned_bss): New functions.
	(assemble_variable): Delete redundant test for too large an object.
	Rewrite test for uninitialized variables.  Use new macros
	ASM_OUTPUT{,_ALIGNED}_BSS if defined to output global uninitialized
	but not common variables.
	* bytecode.h (BC_OUTPUT_BSS): Define.
	* lynx.h (EXTRA_SECTIONS): Delete in_bss.
	(EXTRA_SECTION_FUNCTIONS): Delete BSS_SECTION_FUNCTION.
	* svr3.h (EXTRA_SECTIONS): Likewise.
	(BSS_SECTION_FUNCTION): Delete.
	* convex/convex.h (EXTRA_SECTIONS,EXTRA_SECTIONS_FUNCTIONS): Delete.
	* dsp16xx/dsp16xx.h (EXTRA_SECTIONS): Delete in_bss.
	(EXTRA_SECTION_FUNCTIONS): Delete bss_section.
	* gmicro/gmicro.h (EXTRA_SECTIONS,EXTRA_SECTIONS_FUNCTIONS): Delete.
	* i386/aix386ng.h (EXTRA_SECTION_FUNCTIONS): Delete
	BSS_SECTION_FUNCTION.
	* i386/att.h (BSS_SECTION_FUNCTION): Delete.
	* i386/sco5.h (EXTRA_SECTIONS): Delete in_bss.
	(EXTRA_SECTION_FUNCTIONS): Delete BSS_SECTION_FUNCTION.
	(BSS_SECTION_FUNCTION): Delete.
	* i386/seq-sysv3.h (BSS_SECTION_FUNCTION): Delete.
	* i386/svr3gas.h (EXTRA_SECTIONS): Delete in_bss.
	(EXTRA_SECTION_FUNCTIONS): Delete BSS_SECTION_FUNCTION.
	(BSS_SECTION_FUNCTION): Delete.
	* i860/paragon.h (EXTRA_SECTIONS,EXTRA_SECTIONS_FUNCTIONS): Undef.
	* m68k/crds.h (EXTRA_SECTIONS,EXTRA_SECTIONS_FUNCTIONS): Delete.
	(BSS_SECTION_ASM_OP): Define.
	* m68k/m68k.h (BC_OUTPUT_BSS): Define.
	* mips/iris6.h (EXTRA_SECTIONS): Delete in_bss.
	* pa/pa.h (EXTRA_SECTIONS): Delete in_bss.
	(EXTRA_SECTION_FUNCTIONS): Delete bss_section.
	* sparc/litecoff.h (EXTRA_SECTIONS): Delete in_bss.

Wed Feb 28 14:12:25 1996  Jim Wilson  <wilson@chestnut.cygnus.com>

	* sh.h (FUNCTION_VALUE_REGNO_P, FUNCTION_ARG_REGNO_P): Include FP
	registers only when TARGET_SH3E.
	(PASS_IN_REG_P): Exclude BLKmode only when ! TARGET_SH3E.

Wed Feb 28 12:03:26 1996  Michael Meissner  <meissner@tiktok.cygnus.com>

	* rs6000.c (rs6000_trampoline_{template,size}): Change the Windows
	NT trampoline template so that it doesn't require making the stack
	executable.  Add support for 64 bit systems.
	(rs6000_initialize_trampoline): Ditto.

Tue Feb 27 16:42:00 1996  David Edelsohn  <edelsohn@mhpcc.edu>

	* rs6000.c (print_operand): New code 'H'.
	* rs6000.md (insv, extzv): Add DImode patterns.  Use 'h'
	consistently for masking SImode shifts.
	(rotldi3, ashldi3, lshrdi3, ashrdi3): Use 'H'.
	(movsf split): Generate CONST_INT instead of SUBREG.

Tue Feb 27 15:02:17 1996  Doug Evans  <dje@cygnus.com>

	* sh/sh.h (HANDLE_PRAGMA): Delete `return'.

Tue Feb 27 08:18:12 1996  Richard Earnshaw (rearnsha@armltd.co.uk)

	* arm.c (aof_text_section): Remove pseudo read-only hack.  Doesn't
	take a parameter any more.
	* arm/aof.h (EXTRA_SECTIONS, EXTRA_SECTION_FUNCTIONS): Remove
	readonly data sections.
	(READONLYDATA_SECTION, READONLY_DATA_SECTION): Delete.

	* arm.h (enum arm_cond_code): New enum.
	(ARM_INVERSE_CONDITION_CODE): Moved here from arm.c.
	(SELECT_CC_MODE): Call arm_select_cc_mode to do the work.
	(PREDICATE_CODES): Add dominant_cc_register; delete
	reversible_cc_register.
	* arm.c (arm_current_cc): Now an enum.
	(ARM_INVERSE_CONDITION_CODE): Moved to arm.h
	(revsersible_cc_register): Delete.
	(dominant_cc_register): New function.
	(select_dominance_cc_mode): New function.
	(arm_select_cc_mode): New function.
	(output_return_instruction): New parameter REVERSE, used to
	reverse the condition of a conditional return.  All callers
	changed.
	(arm_print_operand case 'D'): Only suppress condition printing
	if the operand is a NULL pointer.
	(get_arm_condition_code): Now a static function returning
	enum arm_cond_code.  Handle dominance expressions.  Return enum
	values rather than integers.
	* arm.md (*addsi3_compare0_scratch): New insn.
	(*movsi_compare0, *cmpsi_insn, *cmpsi_shiftsi): Make sure the
	compare has mode CC.
	(cmp{si,sf,df,xf} expands): Just provide sufficient information
	to allow the parameters to be matched properly.
	(*cmpsi_negsi): Delete (of dubious validity).
	(*cmpsi_shiftsi_swp): New pattern.
	(*condbranch_reversed): No longer needs to check REVERSIBLE_CC_MODE.
	(mov{si,sf,df}cc, *mov{si,sf,df}{,_hard,_soft}_insn): The mode of the
	IF_THEN_ELSE must be appropriate to the target (not void).
	(*and_scc): Match cc_register, not reversible_cc_register.
	(*ior_compare_compare): Delete.
	(split for ior_compare_compare + condjump): Delete.
	(*impossible_cond_compare): Delete.
	(*condition_compare_ior): Delete.
	(*cond_move): Mode for the IF_THEN_ELSE must be SImode.
	(*and_scc_scc): Delete.
	(split for and_scc_scc + condjump): Delete.
	(*impossible_cond_branch_and): Delete.
	(*cmp_ite0, *cmp_ite1): New patterns.
	(if_compare_not): Should be an anonymous pattern.
	(Peephole for move and compare): Compare mode must be mode CCmode.
	(Split pattern for comparing shifted reg then branch): Delete.
	(*loadqi_compare): Delete, replaced with a split pattern to do
	the same thing.
	(*cond_move_not): Match cc_register, not reversible_cc_register.

	* arm.c ({load,store}_multiple_sequence): New functions.
	(emit_{ldm,stm}_seq): New functions.
	* arm.md (load/store multiple peepholes): Rewrite using the above
	functions.
	(all patterns taking immediate_operand): If the code later assumes
	this is a CONST_INT, then match const_int_operand instead.

Mon Feb 26 17:26:13 1996  Doug Evans  <dje@cygnus.com>

	* sparc/sparc.md: Add sparclet scheduling parameters.
	(compare define_insn's): Move closer to compare define_expand's.
	(32 bit multiply patterns): Use for TARGET_SPARCLET.
	(*smacsi,*smacdi,*umacdi): Multiply/accumulate patterns for the
	sparclet.

Sat Feb 24 19:13:29 1996  David Edelsohn  <edelsohn@mhpcc.edu>

	* rs6000.md (movsf split): Fix typo in last patch.

Sat Feb 24 10:02:55 1996  Michael Meissner  <meissner@tiktok.cygnus.com>

	* toplev.c (fatal_insn): Flush stdout/stderr.

Sat Feb 24 02:03:28 1996  Jeffrey A. Law  <law@cygnus.com>

	* pa.md (abssi2): Rework to avoid matching constraints.

Fri Feb 23 11:21:43 1996  Jeffrey A. Law  <law@cygnus.com>

	* pa.c (override_options): Warn if both PIC code generation and
	profiling are requested.

Fri Feb 23 08:47:38 1996  Richard Kenner  (kenner at vlsi1)

	* expr.c (expand_builtin, case BUILT_IN_SETJMP): Set CONST_CALL_P
	on NOTE_INSN_SETJMP instead of emitting USE insns for call-saved regs.
	* reload1.c (reload): For special CONST_CALL_P NOTE_INSN_SETJMP,
	mark all call-saved regs as used.
	* sched.c (sched_analyze): Record NOTE_INSN_SETJMP if no
	CALL_INSN as prev; preserve CONST_CALL_P bit.
	(reemit_notes): Restore CONST_CALL_P.

Thu Feb 22 17:45:12 1996  Doug Evans  <dje@cygnus.com>

	* configure (sparclet-*-aout*): Set extra_headers.
	* ginclude/inl-sparc.h: New file.

Wed Feb 21 20:39:53 1996  Doug Evans  <dje@cygnus.com>

	* configure (sparc64-*-solaris2*): Merge with sparc-*-solaris2*.
	* sparc/sparc.h (enum processor_type): Declare.
	(sparc_cpu_attr): Define.
	(TARGET_OPTIONS): Add -mtune=.
	(sparc_select): Declare.
	(sparc_cpu_string): Delete.
	(FIRST_PSEUDO_REGISTER): Set to 100.
	({FIXED,CALL_USED}_REGISTERS): Merge !v9/v9 cases.
	(CONDITIONAL_REGISTER_USAGE): Mark %g5 as fixed if !v9.
	Mark %g1 as fixed if v9.  Fix v9-only regs if !v9.
	Mark fp{16..47} as call-saved if v9.
	(enum reg_class): Merge !v9/v9 cases.
	(REG_CLASS_NAMES,REG_CLASS_CONTENTS,REGNO_REG_CLASS): Likewise.
	(REG_ALLOC_ORDER,REG_LEAF_ALLOC_ORDER,LEAF_REGISTERS): Likewise.
	(FP_REG_CLASS_P,SPARC_REGISTER_NAMES): Likewise.
	(REG_CLASS_FROM_LETTER): Test TARGET_V9 at runtime.
	* sparc/sparc.c (sparc_cpu_string): Delete.
	(sparc_select): New global.
	(sparc_override_options): Handle -mtune=xxx.
	* sparc/sparc.md (cpu attr): Add sparc{lite,let} implementations.
	* sparc/sp64-sol2.h: Deleted.

	* arm/arm.md (consttable_end): Delete call to text_section.
	(align_4): Delete call to readonly_data_section.

Wed Feb 21 14:29:06 1996  Ian Lance Taylor  <ian@cygnus.com>

        * cplus-dem.c (demangle_template): Initialize is_bool.  Correctly
        handle 0 as a pointer value parameter.

Wed Feb 21 14:13:29 1996  Jason Merrill  <jason@yorick.cygnus.com>

	* tree.c (decl_function_context): Do decl_function_context right for
	function-local classes.

Wed Feb 21 12:42:52 1996  Jeffrey A. Law  <law@cygnus.com>

	* c-typeck.c (initializer_constant_valid_p): Don't dereference
	a null pointer on partial structure initialization.

Wed Feb 21 11:49:58 1996  David Edelsohn  <edelsohn@mhpcc.edu>

	* rs6000/rs6000.h (ASM_OUTPUT_EXTERNAL): Append section info
	even when verbatim symbol prefix '*' present.
	* rs6000/aix3newas.h (ASM_OUTPUT_EXTERNAL): Same.
	* rs6000/aix41.h (ASM_OUTPUT_EXTERNAL): Same.
	* rs6000/powerpc.h (ASM_OUTPUT_EXTERNAL): Same.
	* rs6000/win-nt.h (ASM_OUTPUT_EXTERNAL): Same.

Wed Feb 21 03:55:32 1996  Paul Eggert  <eggert@twinsun.com>

	* cccp.c (validate_else): Don't loop given `#endif /'.
	Handle multiple adjacent backslash-newlines correctly.
	Accept a new parameter LIMIT to specify end of input;
	this prevents confusion when the input contains '\0' characters.

	(collect_expansion): Fix off-by-1 error when searching for `*/'
	at end of a comment used for traditional token concatenation.

	(macarg1): Fix off-by-1 error when skipping past `*/'
	at end of comment.

Tue Feb 20 16:12:31 1996  Doug Evans  <dje@cygnus.com>

	* hard-reg-set.h (twice unrolled GO_IF_HARD_REG_EQUAL): Add missing \.

Tue Feb 20 14:21:16 1996  Jeffrey A. Law  <law@cygnus.com>

	* pa.h (DBX_CONTIN_LENGTH): Define to 4000 characters.

	* pa.c (hppa_expand_epilogue): Always emit a blockage insn
	before cutting back the stack.

Mon Feb 19 19:42:15 1996  Brendan Kehoe  <brendan@lisa.cygnus.com>

	* sparc/sparc.h (TARGET_SWITCHES): Add -m{,no-}impure-text.
	(MASK_IMPURE_TEXT, TARGET_IMPURE_TEXT): Define.
	(LINK_SPEC): Only add `-assert pure-text' if -mimpure-text wasn't used.

Mon Feb 19 19:20:15 1996  Doug Evans  <dje@canuck.cygnus.com>

	* configure (sparc-aout): sparc-aout.h renamed to aout.h.
	(sparclet-aout): Likewise.
	(sparclite-*-aout*): Renamed from sparclite-*-*.
	Don't set use_collect2.
	(target_cpu_default): Set to TARGET_CPU_<cpu> for sparc.

	* sparc/sparc.h (TARGET_CPU_sparc{,let,lite,64}): Define.
	({CPP,ASM}_DEFAULT_SPEC): Set from TARGET_CPU_foo.
	(SPARC_ARCH64 CPP_PREDEFINES): Define __arch64__.
	(CPP_SPEC): Add %(cpp_cpu).
	(CPP_CPU_SPEC): Define.
	(CC1_SPEC): Convert -m<cpu> to -mcpu=<cpu>.
	(ASM_SPEC): Add %(asm_cpu).
	(ASM_CPU_SPEC): Define.
	(EXTRA_SPECS,SUBTARGET_EXTRA_SPECS): Define.
	(OVERRIDE_OPTIONS): Call SUBTARGET_OVERRIDE_OPTIONS after
	sparc_override_options.
	({MASK,TARGET}_SUPERSPARC): Delete.
	({MASK,TARGET}_SPARCLET): Define.
	(MASK_ISA): Renamed from MASK_CPUS.
	(TARGET_SWITCHES): Delete no-{v8,sparclite}.
	(sparc_cpu,sparc_cpu_string): Declare.
	({SUB,}TARGET_OPTIONS): Define.
	(FIXED_REGISTERS): Add definitions for sparc64 in 32 bit mode.
	(CONDITIONAL_REGISTER_USAGE): Don't set fixed_regs[234] if sparc64.
	Don't set call_used_regs[48..80] for sparc64 in 32 bit mode.
	Don't clobber fixed_regs[234] if -ffixed- was passed.
	(ADJUST_COST): Change test for supersparc.
	* sparc/sparc.c (sparc_cpu_string,sparc_cpu): New globals.
	(sparc_override_options): Set ISA and CPU from sparc_cpu_string.
	Delete tests for v9 only switches if not v9.
	Error if -mcpu=v9 and v9 support not compiled in.
	* sparc/sol2.h (CPP_SPEC): Use %(cpp_cpu).
	(ASM_SPEC): Likewise.
	(ASM_{DEFAULT,CPU}_SPEC): Use Solaris syntax for sparc64.
	* sparc/sysv4.h (ASM_SPEC): Add %(asm_cpu).
	* sparc/t-sparcbare (MULTILIB_*): -mv8 renamed to -mcpu=v8.
	* sparc/t-sparclite (MULTILIB_*): Delete msoft-float and mno-flat,
	they're the defaults.  Add -mcpu=f934 as synonym for -mfpu.
	* ginclude/va-sparc.h (__arch64__): Renamed from __sparc_v9__.

	* sparc/lite.h: #include aoutos.h.
	(TARGET_DEFAULT): Use MASK_FOO values.
	* sparc/sp64-aout.h: #include aoutos.h.
	(TARGET_DEFAULT): Add MASK_APP_REGS.
	(JUMP_TABLES_IN_TEXT_SECTION,READONLY_DATA_SECTION): Delete.
	* sparc/sp64-elf.h (TARGET_DEFAULT): Add MASK_APP_REGS.
 	(CPP_PREDEFINES): Define __arch64__.
	* sparc/sp64-sol2.h (TARGET_DEFAULT, SUBTARGET_SWITCHES): Delete.
	(ASM_SPEC): Delete.

	* sparc/sparc.h ({MASK,TARGET}_FRW): Delete.
	(FRAME_POINTER_REQUIRED,INITIAL_FRAME_POINTER_OFFSET,
	BASE_{INCOMING_ARG,OUTGOING_VALUE}_REG,INCOMING_REGNO,OUTGOING_REGNO,
	FUNCTION_{PROLOGUE,EPILOGUE},DELAY_SLOTS_FOR_EPILOGUE): TARGET_FRW
	renamed to TARGET_FLAT.

	* sparc/sparc.md (cpu attr): Add all cpu variants.
	(negtf2,negdf2,abstf2,absdf2): Use isa attr, not arch attr, in
	determining insn lengths.

	* sparc/aout.h: Renamed from sparc-aout.h.
	(CPP_PREDEFINES): Delete __GCC_NEW_VARARGS__.
	Add -Acpu(sparc) -Amachine(sparc).

Mon Feb 19 17:49:08 1996  David Edelsohn  <edelsohn@mhpcc.edu>

	* rs6000.md (movsf split): Use SUBREG not operand_subword.
	(movdf split): operand_subword TARGET_32BIT and new split using
	SUBREG for TARGET_64BIT.
	* rs6000.c (easy_fp_constant): Rewrite to not use operand_subword.
	(input_operand): Remove final add_operand test made irrelevant by
	Dec. 8 change.
	(output_toc): Handle DImode values.

Mon Feb 19 13:38:00 1996  Lee Iverson  <leei@Canada.AI.SRI.COM>

	* i386/sol2.h (SWITCH_TAKES_ARG): Restore -R.
	* sparc/sol2.h (SWITCH_TAKES_ARG): Likewise.

Mon Feb 19 08:19:00 1996  Michael Meissner  <meissner@tiktok.cygnus.com>

	* hard-reg-set.h (HARD_REG macros): If there are more than
	HOST_BITS_PER_WIDE_INT hard registers and less than or equal to
	4*HOST_BITS_PER_WIDE_INT hard registers, unroll the loops by hand.

Mon Feb 19 07:35:07 1996  Torbjorn Granlund  <tege@tmg.se>

	* rs6000.md (not:SI with assign and compare): Fix typo.
	* (not:DI with assign and compare): Likewise.

Mon Feb 19 07:17:25 1996  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* sparc.md (nonlocal_goto): No longer need USE of %o0.
	(goto_handler_and_restore): Show uses %o0.

	* combine.c (force_to_mode, case IOR): Fix typo in commuting
	IOR and LSHIFTRT.

	* alpha.c (call_operand): If in REG, only reg 27 valid.

Mon Feb 19 06:57:34 1996  Richard Earnshaw (rearnsha@armltd.co.uk)

	* emit-rtl.c (operand_subword): For 32-bit targets, return
	the appropriate subword of extended precision CONST_DOUBLEs.

	* arm.c (offsettable_memory_operand): New function.
	(alignable_memory_operand): New function.
	(gen_rotated_half_load): New function.
	(get_arm_condition_code): Extract the mode of the comparison and
	use it to generate the correct return value.
	* arm.h (EXTRA_CC_MODES, EXTRA_CC_NAMES): Add CC_Zmode.
	(SELECT_CC_MODE): return CC_Zmode if the operand is QImode.  Allow LT
	and GE comparisons in CC_NOOVmode.
	(PREDICATE_CODES): add offsettable_memory_operand and
	alignable_memory_operand.
	* arm.md (*zeroextract[qs]i_compare0_scratch): Use const_int_operand
	for operands 1 and 2.
	(split patterns for aligned memory half-word operations): New patterns.
	(movhi): Handle memory accesses where the alignment is known in a more
	efficient manner.
	(*compareqi_eq0): Use CC_Zmode.

Mon Feb 19 05:34:08 1996  Jason Merrill  <jason@phydeaux.cygnus.com>

	* toplev.c (lang_options): Add -W{no-,}sign-compare.

	* c-tree.h: Declare warn_sign_compare.

	* c-typeck.c (build_binary_op): Check warn_sign_compare rather
        than extra_warnings to decide whether to warn about comparison of
        signed and unsigned.

	* c-decl.c (c_decode_option): Handle warn_sign_compare.  -Wall
        implies -Wsign-compare.

Sun Feb 18 21:13:44 1996  Pat Rankin  (rankin@eql.caltech.edu)

	* c-lex.c (yylex, case '0'..'9','.'): For cases '0' and '1',
	check for single digit constant before resorting to general
	number processing.

Sun Feb 18 19:29:44 1996  J.T. Conklin  <jtc@netbsd.org>

	* m68k.h (TARGET_68060): New macro.
	(TARGET_SWITCHES): Add -m68060.
	* m68k.md (const_umulsi3_highpart): Disable for TARGET_M68060.
	(ftruncdf2, ftruncsf2, muldf3, mulsidi3): Likewise.
	(smulsi3_highpart, umulsi3_highpart, umulsidi3): Likewise.

	* {m68k,ns32k,sparc}/netbsd.h (DBX_NO_XREFS): Removed.

Sun Feb 18 13:29:56 1996  Charles M. Hannum  (mycroft@netbsd.org)

	* c-common.c (check_format_info): Warn about `L' if -pedantic.

Fri Feb 16 20:13:23 1996  Paul Eggert  <eggert@twinsun.com>

	* c-typeck.c (convert_for_assignment):
	Bring back conversion to union without a cast,
	undoing the Jan 16 change, but with the following differences:

	- The union must have the transparent_union attribute.
	- The conversion must be for a function argument.
	- Warn consistently about such conversions if pedantic.
	- Do not warn about an assignment incompatibility for one union member
	  if another union member is compatible with no warning.

Fri Feb 16 12:06:21 1996  Stan Cox  <coxs@spiff.gnu.ai.mit.edu>

	* i386.c (ix86_*_binary_operator*): Allow CONST_INT as operand1
	of MINUS.
	* i386/dgux.h (OPTIMIZATION_OPTIONS): Call optimization_options.

Fri Feb 16 08:39:47 1996  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* configure: Change stdout report when have multiple files in
	tm_file, host_xm_file, or build_xm_file.
	(a29k-*-bsd): Use both a29k.h and unix.h.
	(a29k-*-udi): Rename a29k-udi.h to udi.h;
	use a29k.h, dbxcoff.h, and it.
	(a29k-*-vxworks): Use a29k.h, dbxcoff.h, a29k/udi.h, and a29k/vx29k.h.
	(alpha-dec-osf[23456789]*): Use alpha.h, not osf2.h.
	(alpha-dec-osf1.2): Use alpha.h and alpha/osf12.h.
	(alpha-*-osf*): Add explicit assignment of tm_file.
	* a29k/udi.h: Renamed from a29k-udi.h.
	Don't include a29k.h or dbxcoff.h.
	* a29k/unix.h: Don't include a29k.h.
	* a29k/vx29k.h: Don't include a29k-udi.h.
	* alpha.h (WCHAR_TYPE, WCHAR_TYPE_SIZE): Use unsigned int.
	* alpha/osf2.h: Deleted.
	* alpha/osf12.h: Don't include alpha.h.
	(WCHAR_TYPE, WCHAR_TYPE_SIZE): Use short unsigned int.
	* alpha/win-nt.h (WCHAR_TYPE, WCHAR_TYPE_SIZE): Use short unsigned int.

Thu Feb 15 18:26:04 1996  Michael Meissner  <meissner@tiktok.cygnus.com>

	* rs6000/ntstack.asm (__allocate_stack): Round up length to 16
	byte boundary.

	* rs6000.md (allocate_stack): On Windows NT, call set_sp to
	indicate to CSE that the stack pointer changes with the call to
	__allocate_stack.
	(set_sp): New pattern.

Thu Feb 15 16:49:15 1996  Jim Wilson  <wilson@cygnus.com>

	* integrate.c (save_for_inline_copying): Allocate reg_map with size
	based on regno_pointer_flag_length instead of max_reg+1.

Thu Feb 15 07:48:34 1996  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* fixincludes (rpc/types.h): Remove spurious "ls" command.

	* reload1.c (eliminate_regs, case USE): If using a register that
	is source of elimination, show can't be eliminated.

	* expr.c (expand_builtin, case BUILT_IN_SETJMP): Shows clobbers FP
	and all caller-save registers.
	Set current_function_has_nonlocal_goto.

Wed Feb 14 13:51:55 1996  David Edelsohn  <edelsohn@mhpcc.edu>

	* rs6000.md (fix_truncdfsi2): Use SUBREG not operand_subword.
	(movdi): Test HOST_BITS_PER_WIDE_INT at build time.
	* collect2.c (scan_libraries): Append '/' to import path if missing.

Wed Feb 14 09:01:55 1996  Michael Meissner  <meissner@tiktok.cygnus.com>

	* rs6000.md (movdi): Use HOST_WIDE_INT, not long long.

Tue Feb 13 19:36:21 1996  Per Bothner  <bothner@cygnus.com>

	* expr.c (store_constructor):  Fix flow control thinko (merge error).
	* expr.c (store_constructor):  Pass correct value to recursive call.

Wed Jan 31 11:34:45 1996  Mike Stump  <mrs@cygnus.com>

	* expr.c (expand_expr, case TARGET_EXPR): We must always store
	into the allocated slot for TAREGT_EXPRs.

Tue Feb 13 18:27:05 1996  Philippe De Muyter  <phdm@info.ucl.ac.be>

	* configure (powerpc-ibm-aix3): Look for 3.2.x, not 3.2x.

	* fixincludes (memory.h): Fix it also on sysV68.

Tue Feb 13 17:59:03 1996  Lee Iverson  <leei@Canada.AI.SRI.COM>

	* gcc.c (DEFAULT_SWITCH_TAKES_ARG): New macro, from SWITCH_TAKES_ARG.
	(SWITCH_TAKES_ARG): Use it.
	* i386/{osfrose,sol2}.h (SWITCH_TAKES_ARG): Likewise.
	* mips/{gnu,mips}.h (SWITCH_TAKES_ARG): Likewise.
	* sparc/sol2.h (SWITCH_TAKES_ARG): Likewise.
	* config/svr4.h (SWITCH_TAKES_ARG): Likewise.

Tue Feb 13 17:43:46 1996  Jim Wilson  <wilson@cygnus.com>

	* integrate.c (save_constants_in_decl_trees): New function.
	(save_for_inline_copying, save_for_inline_nocopy): Call it.

Tue Feb 13 17:40:27 1996  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>

	* expr.c (convert_move): Fix typo in extendqfh2 case.

	* reload1.c (reload): Make some non-group code no longer
 	conditional on SMALL_REGISTER_CLASSES.

Tue Feb 13 17:30:45 1996  J"orn Rennecke (amylaar@meolyon.hanse.de)

	* pdp11.c: #include flags.h
	(output_function_prologue, function_epilogue): Remove declarations
	of call_used_regs and frame_pointer_needed.

	* c-common.c (overflow_warning): Fix typo in warning message.

	* c-decl.c (finish_decl): TREE_ASM_WRITTEN says if duplicate_decls
	modified declaration to match an outside file scope declaration.

	* stmt.c (expand_end_case): Don't use ADDR_DIFF_VEC for PIC if
	ASM_OUTPUT_ADDR_DIFF_ELT is not defined.
	* a29k.h, romp.h (ASM_OUTPUT_ADDR_DIFF_ELT): Remove.

Tue Feb 13 13:36:36 1996  Michael Meissner  <meissner@tiktok.cygnus.com>

	* rs6000/cygwin32.h (CPP_PREDEFINES): Do not define PPC, just
	define __PPC__.  Also define _ARCH_PPC to be compatible with the
	other rs6000/powerpc ports.
	* rs6000/win-nt.h (CPP_PREDEFINES): Ditto.

	* rs6000/cygwin32.h (LIBGCC_SPEC): Don't define, always link in.
	(SDB_DEBUGGING_INFO): Undef.
	(DBX_DEBUGGING_INFO): Define.
	(PREFERRED_DEBUGGING_TYPE): Define as DBX_DEBUG.

	* rs6000/t-{cygwin32,winnt} (MULTILIB*): Remove multilib support.

	* rs6000/x-cygwin32 (LANGUAGES): Delete, don't override.

	* rs6000/ntstack.asm: New file to provide __allocate_stack, which
	guarantees all pages in a dynamically allocated stack frame are
	touched in order, so that the stack is properly grown.

	* rs6000/cgywin32.asm: Delete unused file.

	* rs6000/t-{cygwin32,winnt} (LIB2FUNCS_EXTRA): Add ntstack.S
	to libgcc2 build.

	* rs6000.md (allocate_stack): For NT, call __allocate_stack to
	bump the stack if the size is large or variable.

	* libgcc1-test.c (mainCRTStartup,__start): New startup functions
	to silence more linkers.

Tue Feb 13 13:30:53 1996  Jim Wilson  <wilson@cygnus.com>

	* expr.c (store_constructor_field): Only call change_address if
	bitpos is nonzero.

Tue Feb 13 08:21:01 1996  Fila Kolodny <fila@ibi.com>

	* i370/mvs.h (CPP_SPEC): Add '-trigraphs' because IBM's h files
	contain them.

Tue Feb 13 08:17:52 1996  Bernd Schmidt  <crux@pool.informatik.rwth-aachen.de>

	* c-typeck.c (quality_type prototype): Typo, rename as
	qualify_type.
	(build_binary_op): Fix precedence errors.
	* combine.c (force_to_mode, num_sign_bit_copies, simplify_comparison):
	Fix precedence errors.
	* emit-rtl.c (gen_lowpart): Could return without a value.
	* jump.c (jump_optimize): Fix potential infinite loop.
	* reg-stack.c (record_reg_life_pat): Fix precedence error.
	* reload1.c (emit_reload_insns): Fix precedence errors.
	* stmt.c (bc_pushcase): Fix precedence error.

Mon Feb 12 23:14:02 1996  Jason Merrill  <jason@yorick.cygnus.com>

	* toplev.c (rest_of_compilation): Also set RTX_INTEGRATED_P when
 	we aren't going to emit the inline just yet.

Mon Feb 12 21:31:02 1996  Jim Wilson  <wilson@cygnus.com>

	* rtl.h (INLINE_REGNO_POINTER_FLAG, INLINE_REGNO_POINTER_ALIGN):
	Add one to array index.

Mon Feb 12 20:55:39 1996  H.J. Lu  (hjl@gnu.ai.mit.edu)

	* configure (i[345]86-*-linux*): Set tmake_file t-linux.
	Add crtbeginS.o and crtendS.o to extra_parts.
	* i386/linux.h (CC1, LIB_SPEC): Deleted.
	* config/linux.h (STARTFILE_SPEC): Add crtbeginS.o if -shared.
	(CC1_SPEC): New.
	(LIB_SPEC): Remove %{mieee-fp:-lieee}; use -lc_p for -profile.
	* config/t-linux: New file.

Mon Feb 12 20:42:11 1996  Randy Smith  <randys@camaro.osf.org>

	* i386/x-osfrose (XCFLAGS{,_NODEBUG}): Remove $(SHLIB).
	(XCFLAGS): New variable.
	(libdir, mandir, bindir): Delete.
	* i386/t-osf: New file.
	* i860/paragon.h (STARTFILE_SPEC): Make gcc find crt0.o, not loader.
	(LIB_SPEC): Remove /usr/lib.
	* Makefile.in (TCFLAGS): New variable.
	(GCC_CFLAGS): Add $(TCFLAGS).
	(LIBGCC2_CFLAGS): Add -D for __GCC_FLOAT_NOT_NEEDED.
	(libgcc1-test): Remove -nostdlib.
	(float.h-cross): Don't give error #ifdef __GCC_FLOAT_NOT_NEEDED.
	* enquire.c: Define __GCC_FLOAT_NOT_NEEEDED.
	* configure (i[3456]86-*-osfrose): Add t-osf as tmake_file.

Mon Feb 12 18:43:54 1996  Oliver Kellogg  (oliver.kellogg@space.otn.dasa.de)

	* 1750a.c (add_1_to_mem): Corrected.

Mon Feb 12 18:23:35 1996  Doug Evans  <dje@cygnus.com>

	* configure (sparclet-*-aout*): New configuration.

Mon Feb 12 14:43:50 1996  Per Bothner  <bothner@cygnus.com>

	Changes to distinguish typedef from original type in debug output.
	* tree.h (DECL_ORIGINAL_TYPE):  New macro.
	* tree.c (copy_node):  Zero out type.symtab union.
	* c-decl.c (pushdecl):  Set DECL_ORIGINAL_TYPE for typedef origin.
	* dbxout,c (dbxout_type):  Don't canonicalize typedef type to base.

Mon Feb 12 12:01:16 1996  Richard Earnshaw (rearnsha@armltd.co.uk)

	* arm/arm.h: (CPP_SPEC): Define __ARMEB__, __ARMEL__, and
	__ARMWEL__ depending on the endian flags passed to the compiler.
	(ARM_FLAG_LITTLE_WORDS): Define.
	(TARGET_SWITCHES): Add option -mwords-little-endian.
	(TARGET_LITTLE_WORDS): Define.
	(WORDS_BIG_ENDIAN): Select based on the endian switches.
	(LIBGCC2_WORDS_BIG_ENDIAN): Define based on run-time endian
	defines.
	* arm/arm.c (output_move_double): Cope with both word-endian
	alternatives.  Remove extraneous parameters from calls to
	output_mov_immediate.
	(arm_print_operand): New print code 'Q' for the least significant
	register of a DImode operand.  Make code 'R' always print the
	most significant register, rather than the highest numbered.
	* arm/arm.md (all DImode output patterns): Use print code
	'Q' to access the least significant word.  Make sure the
	patterns are fully aware of the word endianness.

	* arm/semi.h (CPP_SPEC):  Define __ARMEB__, __ARMEL__, and
	__ARMWEL__ depending on the endian flags passed to the compiler.
	(LINK_SPEC): Pass -EB to the linker if compiling for big-endian
	mode.
	(ASM_SPEC): Likewise for the assembler.
	* arm/semiaof.h (CPP_SPEC):  Define __ARMEB__, __ARMEL__, and
	__ARMWEL__ depending on the endian flags passed to the compiler.

Mon Feb 12 10:15:29 1996  Ian Lance Taylor  <ian@cygnus.com>

	* configure: Permit tm_file and xm_file to be a list of header
	file names, rather than just a single file.  For many targets,
	handle --with-stabs by adding dbx.h to tm_file, rather than using
	a different tm_file.
	* dbx.h: New file.
	* alpha/gdb-osf2.h: Remove.
	* alpha/gdb-osf12.h: Remove.
	* alpha/gdb.h: Remove.
	* i386/sysv4gdb.h: Remove.
	* mips/iris5gdb.h: Remove.
	* mips/iris4gl.h: Remove.
	* mips/iris4gdb.h: Remove.
	* mips/iris3gdb.h: Remove.
	* mips/dec-gosf1.h: Remove.
	* mips/news4-gdb.h: Remove.
	* mips/news5-gdb.h: Remove.
	* mips/svr4-t-gdb.h: Remove.
	* mips/ultrix-gdb.h: Remove.
	* mips/bsd-5-gdb.h: Remove.
	* mips/bsd-4-gdb.h: Remove.
	* mips/svr4-5-gdb.h: Remove.
	* mips/svr4-4-gdb.h: Remove.
	* mips/svr3-5-gdb.h: Remove.
	* mips/svr3-4-gdb.h: Remove.
	* mips/mips-5-gdb.h: Remove.
	* mips/ecoffl-gdb.h: Remove.
	* mips/ecoff-gdb.h: Remove.
	* mips/mips-4-gdb.h: Remove.

Mon Feb 12 07:22:20 1996  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* integrate.c (save_for_inline_copying): Put virtual regs into
	new regno_reg_rtx copy.

Sun Feb 11 18:53:12 1996  Torbjorn Granlund  <tege@noisy.tmg.se>

	* i386.md: Delete spurious integer subtract patterns.
	Delete % from subtract operand constraints.

Sun Feb 11 19:17:24 1996  Jeffrey A. Law  <law@cygnus.com>

	* m68k.md (movqi): Call CC_STATUS_INIT when loading to/from
	an address register via a data register.

Sun Feb 11 08:44:49 1996  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* c-common.c (check_format_info): Handle missing type in format
	when terminated by a new `%'.

Sat Feb 10 15:14:22 1996  J.T. Conklin  <jtc@rtl.cygnus.com>

	* cross-make (STMP_FIXPROTO): Moved from here to build-make.
	* build-make (STMP_FIXPROTO): Moved here from cross-make.

Sat Feb 10 08:39:05 1996  Oliver Kellogg  (oliver.kellogg@space.otn.dasa.de)

	* 1750a.md (movstrqi): Corrected.
	(zero_extendqihi2): Taken out, let GCC synthesize.
	(movhi-1): Added insn to move HImode small constant to memory.
	(movhf-1): Added insn to move HFmode zero to memory.
	(movtqf-1): Added insn to move TQFmode zero to memory.
	(numerous insns): Taken out B (Base Reg with Index) mode.

	* 1750a.c (movcnt_regno_adjust): Corrected.
	(mov_memory_operand, zero_operand): Added.
	(b_mode_operand): Corrected.
	(simple_memory_operand, add_1_to_mem): Added.
	(print_operand_address): Corrected case of 'Q' output modifier.

	* 1750a.h (REG_ALLOC_ORDER): Changed back to natural order.
	(CONST_DOUBLE_OK_FOR_LETTER_P): Added letter 'G'.
	(EXIT_IGNORE_STACK): Set to 0.
	(REG_OK_FOR_BASE_P, REG_OK_FOR_INDEX_P): Use corresponding REGNO_OK.
	(MOVE_MAX, MOVE_RATIO): Defined.

Sat Feb 10 08:28:12 1996  Martin Anantharaman  <martin@goofy.imech.uni-duisburg.de>

	* configure (m68k-*-psos*): New configuration.
	* psos.h: New file.
	* m68k/m68k-psos.h: New file.

Sat Feb 10 08:07:52 1996  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* sched.c (flush_pending_lists): Add new arg, ONLY_WRITE.
	(sched_analyze_{1,2,insn}): Add new arg to flush_pending_lists.
	(sched_analyze): Always flush pending write list for call, even const.

	* integrate.c (save_for_inline_copying): Put reg_map in function's
	maybepermanent obstack instead of using alloca; set regno_reg_rtx
	to it; delete recently-added copying of this later.

Sat Feb 10 00:49:58 1996  Doug Evans  <dje@cygnus.com>

	* sched.c (add_dependence): Add test for next != CODE_LABEL.

Fri Feb  9 16:10:04 1996  Stan Cox  (coxs@dg-rtp.dg.com)

	* i386.md (fp, integer): Added function units for pentium.
	(cmp*,mov*,add*,sub*,mul*,div*,extend*,trunc*,and*,ior*,xor*,neg*,
	abs*,sqrt*,sin*,cos*,not*,ash*,lsh*,rot*,sub): Tightened constraints,
	added attribute support, and made changes for new `binary' and
	`unary' functions.

	* i386.c (processor_costs): New variable.
	(optimization_options, ix86_expand_binary_operator,
	ix86_binary_operator_ok, ix86_expand_unary_operator,
	ix86_unary_operator_ok, is_mul, is_div, copy_all_rtx, rewrite_address,
	last_to_set_cc, doesnt_st_condition_code, sets_condition_code,
	str_immediate_operand, is_fp_insn, is_fp_dest, is_fp_store,
	agi_dependent, reg_mentioned_in_mem): New functions.

	* i386/i386.h (OPTIMIZATION_OPTIONS, ALIGN_DFmode, IS_STACK_MODE,
	IX86_EXPAND_BINARY_OPERATOR): New macros.
	(RTX_COSTS, REGISTER_MOVE_COST, ADJUST_BLOCKAGE) Changed for pentium.

Fri Feb  9 14:47:27 1996  Doug Evans  <dje@cygnus.com>

	* sparc.c (sp64_medium_pic_operand): New function.
	(move_pic_label): Delete.
	(legitimize_pic_address): Simplify using some named patterns.
	(finalize_pic): Add preliminary sparc64 support.
	(emit_move_sequence): Reorganize.
	* sparc.md (pic_lo_sum_si,pic_sethi_si,get_pc_sp32,get_pc_sp64,
	move_pic_label_si,move_label_di,sethi_di_sp64): Make named patterns.
	(sethi_di_sp64_const,sethi_di_medium_pic): New anonymous patterns.
	(move_pic_label_si,move_label_di): Optimize for near labels.
	(tablejump): Use for TARGET_MEDANY.
	(casesi): Delete.

Fri Feb  9 13:48:45 1996  Jim Wilson  <wilson@cygnus.com>

	* mips.md (probe+2, probe+4): New conditional move patterns.
	(movsicc): Don't truncate comparison if it is DImode.

	* sh.h (CPP_SPEC): Add defines for -m1, -m2, and -m3.

Fri Feb  9 09:11:28 1996  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* toplev.c (rest_of_compilation): Set RTX_INTEGRATED_P in
	INLINE_HEADER iff function is inlineable.
	* calls.c (expand_call): Test RTX_INTEGRATED_P in DECL_SAVED_INSNS.

Thu Feb  8 01:11:15 1996  Jeffrey A. Law  <law@cygnus.com>

	* pa.md (floatunssisf2 expander): Don't use "general_operand".
	(floatunssidf2 expander): Likewise.

Wed Feb  7 16:59:31 1996  Michael Meissner  <meissner@tiktok.cygnus.com>

	* rs6000/{sysv4,win-nt,netware,cygwin32}.h ({ASM,LINK}_SPEC):
	Don't use %{V} for either linker or assembler.

Tue Feb  6 17:22:29 1996  Per Bothner  <bothner@cygnus.com>

	* dbxout.c (dbxout_range_type):  Emit non-range INTEGER_TYPE
	as a sub-range of itself (so gdb can tell the difference).

Tue Feb  6 17:01:44 1996  David Edelsohn  <edelsohn@mhpcc.edu>

	* rs6000.md (addsi3 and adddi3 split): Use cleaner computation
	and portable HOST_WIDE_INT.
	(iordi3 split): Use HOST_WIDE_INT.
	(movdi): Add TARGET_64BIT support and generate 64 bit constants.
	(movdi matcher, TARGET_POWERPC64): Add immediate constraint handled
	by new define_split.
	(allocate_stack): Use TARGET_32BIT.
	(tablejump): Add TARGET_64BIT support using ...
	(tablejumpsi): Rename original tablejump pattern.
	(tablejumpdi): New pattern.

Tue Feb  6 15:29:22 1996  Per Bothner  <bothner@cygnus.com>

	* stor-layout.c (layout_type):  Use same code to layout CHAR_TYPE
	as for INTEGER_TYPE (instead of hard-wiring in QImode).

Tue Feb  6 15:13:38 1996  Jeffrey A. Law  <law@cygnus.com>

	* pa.md (various patterns): Avoid using "general operand" in
	define_insn patterns.

Sun Feb  4 21:37:05 1996  Michael Meissner  <meissner@tiktok.cygnus.com>

	* rs6000/eabi{,sim}.h (LINK_START_SPEC): Bump the default start address
	for the simulator to 0x10000074 so that we don't waste a page in the
	linked file.

Fri Feb  2 19:44:10 1996  Michael Meissner  <meissner@tiktok.cygnus.com>

	* rs6000/eabi-c{i,n}.asm (.sdata2, .sbss2): Put these in the
	read-only section, not read-write.

	* libgcc2.c (__unwind_function, rs6000/powerpc): Use _ARCH_PPC
	being defined to indicate to use PowerPC mnemonics.

	* config/rs6000/t-cygwin32 (MULTILIB*): Add software floating
	point support.

Thu Feb  1 09:10:02 1996  Steve Chamberlain  <sac@slash.cygnus.com>

	* config/{i386,rs6000}/cygwin32.{asm,h}: New templates.
	* config/{i386,rs6000}/{t,x}-cygwin32: Ditto.
	* config/{i386,rs6000}/xm-cygwin32.h: Ditto.
	* configure.in (powerpcle-*-cygwin32, i[3456]86-*-cygwin32): New.

Fri Feb  2 17:42:40 1996  Paul Eggert  <eggert@twinsun.com>

	* c-decl.c (finish_struct):
	Fix typo in transparent union warning that led to core dump.

	* c-parse.in (stmt): Warn about `goto *expr;' if pedantic.
	(label): Warn about `case expr ... expr:' if pedantic.

Fri Feb  2 11:05:27 1996  Doug Evans  <dje@cygnus.com>

	* h8300/h8300.h (TARGET_ALIGN_300): Renamed from
	TARGET_ALIGN_STRUCT_300.
	(TARGET_SWITCHES): Rename -malign-struct-300 to -malign-300.
	(BIGGEST_ALIGNMENT): Use TARGET_ALIGN_300.

Fri Feb  2 08:25:49 1996  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* flow.c (jmp_uses_reg_or_mem): Renamed from uses_reg_or_mem.
	Don't look into condition of an IF_THEN_ELSE; also make faster.
	(find_basic_blocks): Use new name.

Fri Feb  2 06:49:56 1996  J"orn Rennecke (amylaar@meolyon.hanse.de)

	* reload.c (debug_reload): Fix typo for reload_noncombine.

Thu Feb  1 21:49:02 1996  Jeffrey A. Law  <law@cygnus.com>

	* pa-pro.h (TARGET_DEFAULT): Turn on TARGET_SOFT_FLOAT by
	default for all pro targets.
	* t-pro: Delete all multilib references.

Thu Feb  1 17:50:02 1996  Doug Evans  <dje@cygnus.com>

	* c-lex.c (check_newline): Return result of HANDLE_PRAGMA.
	* h8300/h8300.h (HANDLE_PRAGMA): Pass result back to caller.
	* i960/i960.h (HANDLE_PRAGMA): Likewise.
	* sh/sh.h (HANDLE_PRAGMA): Likewise.
	* nextstep.h (HANDLE_PRAGMA): Likewise.

Wed Jan 31 19:26:03 1996  Doug Evans  <dje@cygnus.com>

	* m68k/m68k-none.h: Rewrite to use EXTRA_SPECS.
	* m68k/vxm68k.h (CPP_SPEC): Delete.
	(SUBTARGET_EXTRA_SPECS): Define.

Wed Jan 31 15:10:59 1996  David Edelsohn  <edelsohn@mhpcc.edu>

	* rs6000.c (output_epilog): Fix PPC64 typos and use TARGET_32BIT.
	(output_prolog): Same.
	(rs6000_trampoline_template, rs6000_trampoline_size): Use TARGET_32BIT.
	* rs6000.md (movdf TARGET_POWERPC64 matcher): Fix std typo.
	(movdi TARGET_POWERPC64 matcher): Same.

Wed Jan 31 09:46:11 1996  Richard Earnshaw (rearnshaw@armltd.co.uk)

	* regs.h (regno_pointer_align, REGNO_POINTER_ALIGN): Delete from
	here...
	* rtl.h (regno_pointer_align, REGNO_POINTER_ALIGN): ... and put
	them here.

Wed Jan 31 08:26:12 1996  Andreas Schwab  (schwab@issan.informatik.uni-dortmund.de)

	* m68k/linux.h (STRICT_ALIGNMENT): Define to zero.
	(LEGITIMATE_PIC_OPERAND_P): Match definition from m68kv4.h.

	* m68k.h (TRAMPOLINE_{TEMPLATE,SIZE}): Avoid need for helper function.
	(INITIALIZE_TRAMPOLINE): Likewise.
	(TRAMPOLINE_ALIGNMENT): Renamed from TRAMPOLINE_ALIGN.
	* m68k/next.h (INITIALIZE_TRAMPOLINE): Adjusted accordingly.

	* m68kv4.h (STATIC_CHAIN_REGNUM): Redefine to use register a1.
	(TRAMPOLINE_TEMPLATE): Likewise.

	* m68k/linux.h, m68kv4.h (LIBCALL_VALUE): Return XFmode value in fp0.
	* m68k.c (init_68881_table): Use SFmode for the first six
 	constants and DFmode for the seventh.

	* m68k.md (movqi): Use moveq if possible.

Wed Jan 31 08:18:15 1996  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* expr.c (expand_builtin, case BUILT_IN_NEXT_ARG): Strip off
	INDIRECT_REF when checking second arg.

	* calls.c (struct arg_data, expand_call): Test STRICT_ALIGN with #if.

Wed Jan 31 07:47:56 1996  Tim Wright  (timw@sequent.com)

	* configure (i[345]-sequent-sysv*): Change to sysv3*; add i686.
	(i[3456]86-sequent-ptx4*, i[3456]86-sequent-sysv4*): New cases.
	* fixinc.ptx (sys/mc_param.h): Remove embedded asm.
	* fixinc.svr4 (__STDC__): Add one more case.
	* i386/ptx4-i.h, ptx4.h: New files.

Wed Jan 31 07:15:23 1996  Philippe De Muyter (phdm@info.ucl.ac.be)

	* m68k.h (MACHINE_STATE_{SAVE,RESTORE}): Allow MOTOROLA syntax.

	* m68k.md ({adddi,subdi}_sexthishl32): 'a' and 'd' versions merged
	and fixed; do not generate 'add/sub a,m'.

	* gcc.c (warn_std_ptr): Initialize with 0 instead of NULL_PTR.

Tue Jan 30 13:29:05 1996  Ian Lance Taylor  <ian@cygnus.com>

	* dbxout.c: Don't include <string.h>.  Don't compare strchr result
	to NULL.

	* config/svr4.h (ASM_FINAL_SPEC): Use %|, not ${pipe:-}.

Tue Jan 30 06:48:43 1996  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* combine.c (nonzero_bits, case REG): Ignore REG_POINTER_ALIGNMENT.
	Restore old code for SP, but use it for all pointers to
	defined locations in the frame.

Mon Jan 29 11:25:28 1996  Ian Lance Taylor  <ian@cygnus.com>

	* dbxout.c (dbxout_type_methods): Don't use #ifndef inside call to
	strchr.

Sun Jan 28 14:44:09 1996  Doug Evans  <dje@cygnus.com>

	* config/dbxcoff.h (*): #undef first.

Sat Jan 27 21:46:16 1996  David Edelsohn  <edelsohn@mhpcc.edu>

	* rs6000.c (rs6000_sync_trampoline): Add cmpdi to 64bit case.
	(rs6000_initialize_trampoline): CSE of Pmode to pmode.
	* rs6000.md (movdf): Handle move between FPR and 64 bit GPR.
	(movdi matcher): Handle SPR move to itself and add "mr." combiner.

Sat Jan 27 10:06:31 1996  Michael Meissner  <meissner@tiktok.cygnus.com>

	* rs6000/sysv4.h (ASM_OUTPUT_ALIGNED_LOCAL): Redefine, put small
	data items in .sbss if -msdata.
	(SWITCH_TAKES_ARG): Add 'B', 'b', and 'V'.

Sat Jan 27 07:59:25 1996  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* tree.h (enum built_in_function): Add BUILT_IN_{SET,LONG}JMP.
	* expr.c: Include hard-reg-set.h.
	(arg_pointer_save_area): New declaration.
	(expand_builtin, case BUILT_IN_{SET,LONG}JMP): New cases.
	* Makefile.in (expr.o): Includes hard-reg-set.h.
	* c-decl.c (init_decl_processing): Add definitions for
	__builtin_setjmp and __builtin_longjmp.
	* cccp.c (initialize_builtins): Add def of __HAVE_BUILTIN_SETJMP__.

	* expr.c (expand_expr, case COMPONENT_REF): Pass EXPAND_INITIALIZER
	to recursive call.

Fri Jan 26 17:24:07 1996  Doug Evans  <dje@cygnus.com>

	* sparc.h (sparc_arch_type): Delete.
	({,TARGET_}MASK_DEPRECATED_V8_INSNS): Define.
	(ARCH64_SWITCHES): Renamed from V9_SWITCHES.
	* sparc.c (sparc_arch_type): Delete.
	(sparc_init_modes): Likewise.
	(output_move_quad): Don't use ldq/stq unless TARGET_HARD_QUAD.
	* sparc/sp64-sol2.h (TARGET_DEFAULT): Add MASK_DEPRECATED_V8_INSNS.
	(SUBTARGET_SWITCHES): Add -m{no-,}deprecated-v8-insns.
	* sparc.md (arch attribute): Rewrite.
	(isa): New attribute.
	(32 bit multiply/divide patterns): Use if TARGET_DEPRECATED_V8_INSNS.
	(32 bit divide patterns): V9 doesn't require delay after y reg write.

Fri Jan 26 12:08:43 1996  David Edelsohn  <edelsohn@mhpcc.edu>

	* rs6000.h (TARGET_32BIT): Define.
	(BITS_PER_WORD, UNITS_PER_WORD): Invert so 32bit expected case.
	(LONG_TYPE_SIZE, POINTER_BOUNDARY, PARM_BOUNDARY): Likewise.
	(RS6000_REG_SAVE, RS6000_SAVE_AREA, RS6000_VARARGS_SIZE): Likewise.
	(RETURN_ADDRESS_OFFSET, CASE_VECTOR_MODE, MOVE_MAX): Likewise.
	(Pmode, FUNCTION_MODE): Likewise.
	(LEGITIMATE_OFFSET_ADDRESS_P): Handle TARGET_64BIT.
	(GO_IF_LEGITIMATE_ADDRESS, LEGITIMIZE_ADDRESS): Likewise.
	(GO_IF_MODE_DEPENDENT_ADDRESS): Same.

Fri Jan 26 10:37:52 1996  Stan Coxs  <coxs@dg-rtp.dg.com>

	* m88k.md (umulsidi3): Added for the 88110

Fri Jan 26 09:35:42 1996  Michael Meissner  <meissner@tiktok.cygnus.com>

	* rs6000/sysv4.h (STRIP_NAME_ENCODING): Deal with names that have
	both @ and * prefix characters.
	(ASM_OUTPUT_LABELREF): Ditto.

Thu Jan 25 10:03:34 1996  Michael Meissner  <meissner@tiktok.cygnus.com>

	* rs6000.h (LEGITIMIZE_ADDRESS): Rewrite to use HOST_WIDE_INT, not
	plain int.
	(optimize,flag_expensive_optimizations): Provide declaration for
	expander functions.

	* rs6000.md (movsi): Correct code in splitting an address into
	load from the TOC, and add low/high integer parts.  If expensive
	optimizations, and reload hasn't started, use separate pseudo regs
	for each step.

	* rs6000.c (small_data_operand): Don't use the function
	eliminate_constant_term, unwind code directly.
	(input_operand): SYMBOL_REF/CONST of small data operand is valid.
	(print_{,address_}operand): Add @sda21(0) in appropriate cases for
	small data.
	%L, etc. so that if the item is in small memory, the appropriate
	relocation is used.
	(rs6000_select{,_rtx}_section): Don't put floating point constants
	or small strings in .sdata2 since we can't tell from the pointer
	whether it is in the small data area or not.

	* rs6000.h (EXTRA_CONSTRAINT): Add 'U' for small data references.
	(LEGITIMATE_SMALL_DATA_P): Test explicitly for SYMBOL_REF or CONST
	before calling small_data_operand.

	* rs6000.md (movsi): Handle the addresses of small data items.

	* rs6000/sysv4.h (g_switch_{value,set}): Add declarations.
	(SDATA_DEFAULT_SIZE): Default to 8.
	(SUBTARGET_OVERRIDE_OPTIONS): If -G was not set, set it to
	SDATA_DEFAULT_SIZE.
	(CC1_SPEC): Pass -G nn to the compilers.
	(SWITCH_TAKES_ARG): Add -G nn support.
	(LINK_SPEC): Pass -G nn to the linker.

Thu Jan 25 09:16:34 1996  Doug Evans  <dje@cygnus.com>

	* configure (sparc64-*-solaris2*): New target.
	* sparc/sparc.h (SPARC_{V9,ARCH64}): Default value is 0.
	(*): Replace SPARCV9 with SPARC_{V9,ARCH64}.
	(MASK_CPUS): Define.
	({MASK,TARGET}_ENV32): Delete.
	({MASK,TARGET}_ARCH64,TARGET_ARCH32): Define.
	(TARGET_SWITCHES): Reset cpu flags first for each variant.
	(CONDITIONAL_REGISTER_USAGE): If 32 bit v9 system, unfix g1-g4,
	fix g5, and make %f48-%f80 call used.
	* sparc/sp64-aout.h (SPARC_{V9,ARCH64}): Define.
	(TARGET_VERSION): Define.
	(TARGET_DEFAULT): Add MASK_ARCH64, delete MASK_ENV32.
	(JUMP_TABLES_IN_TEXT_SECTION): Define.
	(READONLY_DATA_SECTION): Make text_section.
	* sparc/sp64-elf.h (SPARC_{V9,ARCH64}): Define.
	(TARGET_DEFAULT): Add MASK_ARCH64.
	(ENDFILE_SPEC): No longer need to check for -nostartfiles.
	(ASM_IDENTIFY_GCC): Define as empty.
	* sparc/sp64-sol2.h: New file.
	* sparc/sparc.c (*): Replace TARGET_V9 with TARGET_ARCH64.
	(hard_32bit_mode_classes): Add v9 regs.
	(gen_v9_scc): Handle 32 bit v9 case.  Call v9_regcmp_p.
	* sparc/sparc.md (*): Replace TARGET_V9 with TARGET_ARCH64 in places
	requiring 64 bit environment.
	(multf3_extend): Require TARGET_HARD_QUAD.

Thu Jan 25 00:33:25 1996  Ian Lance Taylor  <ian@cygnus.com>

	* config/dbxcoff.h (DBX_USE_BINCL): Define.
	(DBX_CONTIN_LENGTH): Define if not defined.

Wed Jan 24 18:00:12 1996  Brendan Kehoe  <brendan@lisa.cygnus.com>

	* alpha.c (alpha_write_verstamp): Only emit MS_STAMP and LS_STAMP,
	not the extra numbers.

Wed Jan 24 15:18:15 1996  Michael Meissner  <meissner@tiktok.cygnus.com>

	* rs6000.c (init_cumulative_args): Rewrite to use DEFAULT_ABI
	runtime tests, instead of V.4 #ifdefs.
	(function_arg{,_advance,_partial_nregs,_pass_by_reference}): Ditto.
	(setup_incoming_varargs): Ditto.
  	(init_cumulative_args): Set call_cookie field to CALL_NORMAL or
	CALL_NT_DLLIMPORT.
	(function_arg): Add support for DLL imports.
	(rs6000_valid_{decl,type}_attribute_p): New functions for NT
	attributes cdecl, stdcall, dllimport, and dllexport.
	(rs6000_comp_type_attributes): New attribute support.
	(rs6000_set_default_type_attributes): Ditto.
	(rs6000_dll_import_ref): Ditto.

	* rs6000.h (FP_ARG_{AIX,SYSV}_MAX_REG): Move here from sysv4.h.
	* sysv4.h (FP_ARG_{AIX,SYSV}_MAX_REG): Move to rs6000.h.

	* rs6000.h (rs6000_call_cookie): New enum to describe the integer
	that is the 2nd argument to call insns and 3rd argument to
	call_value insns. Add support for NT DLL imports.
	(rs6000_args): Add call_cookie field.
	(VALID_MACHINE_{DECL,TYPE}_ATTRIBUTE): Define to call C functions.
	({COMP_TYPE,SET_DEFAULT_TYPE}_ATTRIBUTES): Ditto.
	(rs6000_valid_{decl,type}_attribute_p): Add declarations.
	(rs6000_comp_type_attributes): Ditto.
	(rs6000_set_default_type_attributes): Ditto.
	(rs6000_dll_import_ref): Ditto.

	* win-nt.h (ASM_DECLARE_FUNCTION_NAME): Add support for dllexport
	attribute.

	* rs6000.md (call insns): Add support for NT dllimport functions,
	and fix up NT indirect calls.  Also correctly set the flag
	rs6000_save_toc_p on NT indirect calls.

	* aix41.h (LINK_SPEC): Use new extra specs to avoid separate
	versions for native and cross compilation.
	* rs6000.h (LINK_SPEC): Ditto.
	* sysv4.h (LINK_SPEC): Ditto.

	* rs6000.h (EXTRA_SPECS): Add link_syscalls, link_libg, link_path,
	link_specs, and also allow target to define more with the macro
	SUBTARGET_EXTRA_SPECS.
	(LINK_{LIBG,SYSCALLS}_SPEC): Define as fixed pathnames if native
	compilation, and currently nothing if cross compiling.
	(LINK_START_SPEC): If not defined, define as empty.
	* eabi{,sim}.h (LINK_START_SPEC): Add default -Ttext for
	simulator.

	* eabi{aix,le}.h (MULTILIB_DEFAULTS): Add -mno-sdata default.
	* sysv4{,le}.h (MULTILIB_DEFAULTS): Ditto.

	* rs6000.c (small_data_operand): New function to return true if
	the operand lives in small data under eabi.
	(rs6000_select{,_rtx}_section): New functions to determine whether
	to put global and static items in the V.4/eabi small data areas if
	-msdata.

	* rs6000.h (LEGITIMATE_SMALL_DATA_P): Call small_data_operand it
	if V.4.
	(GO_IF_LEGITIMATE_ADDRESS): If LEGITIMATE_SMALL_DATA_P, the item
	is a valid address.
	(ASM_OUTPUT_LABELREF): Use fputs, not fprintf.
	(small_data_operand): Declare function.

	* sysv4.h (TARGET_SWITCHES): New switch -msdata to use V.4 and
	eabi defined small data sections.
	(SUBTARGET_OVERRIDE_OPTIONS): Don't allow -msdata and
	-mrelocatable or -mcall-aix options.
	(EXTRA_SECTION{S,_FUNCTIONS}): Add .sdata, .sdata2, and .sbss
	sections.
	(SELECT{,_RTX}_SECTION): Call (rs6000_select{,_rtx}_section).
	(ASM_SPEC): The -msdata switch passes -memb to the assembler.
	(ENCODE_SECTION_INFO): Prepend a '@' to the name, if the item
	lives in a small data region.
	(STRIP_NAME_ENCODING): Strip '@' in addition to '*'.
	(ASM_OUTPUT_LABELREF): Strip a leading '@'.

	* t-{ppc,eabi}gas (MULTILIB*): Add support for libraries built
	with/without -msdata.  Drop support for -mcall-aixdesc libraries.

Wed Jan 24 15:18:15 1996  Kim Knuttila  <krk@cygnus.com>

	* config/rs6000/win-nt.h (LIB_SPEC): Change options to GNU ld style.
	(From Jason Molenda)

Wed Jan 24 14:32:48 1996  Jim Wilson  <wilson@cygnus.com>

	* reload1.c (used_spill_regs): New variable.
	(reload): Set it.
	* reorg.c (find_dead_or_set_registers): New function.
	(mark_target_live_regs): Delete loop looking forward from target
	and instead call find_dead_or_set_registers.
	(fix_reg_dead_note): New function.
	(fill_slots_from_thread): Call it.

	* loop.c (scan_loop): Correct comment.
	(strength_reduce): Correct comments.  Don't set maybe_multiple when
	pass branch to scan_start.  Don't set not_every_iteration after
	passing a CODE_LABEL, or after passing a branch out of the loop.
	When outputting DEST_ADDR giv increments, put them next to the memory
	address on machines with auto-increment addresses.
	(record_biv): Set new field always_executed.
	(record_giv): Set new fields always_executed and auto_inc_opt.
	(maybe_eliminate_biv_1): Reject biv with auto_inc_opt optimization
	in some cases.
	* loop.h (struct induction): New fields always_executed and
	auto_inc_opt.

	* c-typeck.c (pointer_int_sum): Use TYPE_PRECISION (sizetype) not
	POINTER_SIZE to agree with expr.c.

Tue Jan 23 15:17:30 1996  Doug Evans  <dje@cygnus.com>

	* sparc/sol2.h (ASM_OUTPUT_ALIGNED_LOCAL): Delete, use svr4.h's.

Tue Jan 23 03:28:01 1996  Paul Eggert  <eggert@twinsun.com>

	* cexp.y: Use preprocessor arithmetic instead of C arithmetic
	to avoid warnings on some compilers.
	(HOST_WIDE_INT_MASK): Remove.
	(MAX_CHAR_TYPE_MASK, MAX_WCHAR_TYPE_MASK): New macros.
	(yylex): Use them.

Mon Jan 22 18:39:21 1996  Per Bothner  <bothner@cygnus.com>

	* cppexp.c (cpp_parse_expr):  Set HAVE_VALUE flag for unary
	minus, even if skip_evaluation is true.

Mon Jan 22 16:53:48 1996  David Edelsohn  <edelsohn@mhpcc.edu>

	* rs6000/rs6000.h (BIGGEST_ALIGNMENT): Increase to 64 always.
	(BIGGEST_FIELD_ALIGNMENT): Define.
	(GO_IF_LEGITIMATE_ADDRESS): Merge PRE_INC and PRE_DEC cases.
	(LEGITIMIZE_ADDRESS): Use Pmode not SImode.
	(CASE_VECTOR_MODE): Depend on TARGET_64BIT.
	(ASM_OUTPUT_COMMON): Delete.
	(ASM_OUTPUT_ALIGNED_COMMON): Define.
	* rs6000/sysv4.h (BIGGEST_FIELD_ALIGNMENT): Undefine.
	* rs6000/rs6000.md (adddi3, subdi3, negsi2): New PowerPC64 patterns.
	(ashldi3, lshrdi3, ashrdi3, anddi3, iordi3, xordi3): Same.
	(moddi3, cmpdi, tablejump matchers): Same.
	(divdi3): Update PowerPC64 patterns.
	* rs6000.c (rs6000_initialize_trampoline, case ABI_AIX): Use Pmode
	not SImode.

Sun Jan 21 23:33:24 1996  Ian Lance Taylor  <ian@cygnus.com>

	* dbxout.c: Include <string.h>

Fri Jan 19 17:17:00 1996  Per Bothner  <bothner@kalessin.cygnus.com>

	* tree.h (CONSTRUCTOR_TARGET_CLEARED_P):  Removed.
	* expr.c (is_zeros_p, mostly_zeros_p):  Handle SET_TYPE CONSTRUCTORs.
	(store_constructor_field):  New helper function.
	(store_constructor):  Take 'cleared' parameter.
	(expand_expr):  Fix store_constructor_call to pass 'cleared' of 0.

	* expr.c (store_constructor, SET_TYPE):  Fix off-by-one-error.
	Also, devide start byte by BITS_PER_UNIT before passing to memset.
	(store_constructor):  `continue' in wrong place.

	* expr.c (store_constructor):  If storing into a range of array
	elements, and the range is small, or the target it not memory,
	unroll the loop (and use store_field, which handles REGs).
	(store_constructor):  Handle RANGE_EXPR in array index.

Fri Jan 19 16:52:25 1996  Doug Evans  <dje@charmed.cygnus.com>

	* svr4.h (SWITCH_TAKES_ARG): Add 'x'.
	* sparc/sol2.h (SWITCH_TAKES_ARG): Likewise.

Fri Jan 19 15:18:38 1996  Ian Lance Taylor  <ian@cygnus.com>

	* dbxout.c (flag_minimal_debug): Initialize to 0 if both
	NO_DOLLAR_IN_LABEL and NO_DOT_IN_LABEL are defined.
	(dbxout_type_methods): If the mangled method name uses the special
	C++ marker character, pass show_arg_types as 1 when calling
	dbxout_type.

Fri Jan 19 11:48:28 1996  Michael Meissner  <meissner@tiktok.cygnus.com>

	* rs6000/eabi-ci.asm (_SDA_BASE_): Move the default definition
	from the .got section to the .sdata section.  Do not add 32768.
	(_SDA2_BASE_): Provide a default definition.

	* rs6000/eabi-cn.asm (.got.blrl): Don't define this section any
	more, linker now directly creates the blrl instruction at
	_GLOBAL_OFFSET_TABLE_-4.

Fri Jan 19 05:12:31 1996  Richard Earnshaw <rearnsha@armltd.co.uk>

	* arm/lib1funcs.asm (__divsi3, __modsi3, __udivsi3, __umodsi3):
	Replace with smaller, faster versions.

Thu Jan 18 17:41:46 1996  Jim Wilson  <wilson@cygnus.com>

	* sh.c (ctype.h): Delete.
	(regno_reg_class, reg_class_from_letter): Add SH3e support.
	(prepare_scc_operands, broken_move, push, pop, push_regs): Likewise.
	(calc_live_regs, sh_expand_prologue, sh_expand_epilogue): Likewsie.
	(initial_elimination_offset, arith_reg_operand): Likewise.
	(sh_builtin_saveregs, fp_zero_operand, fp_one_operand): New functions.
	(sh_function_arg, sh_function_arg_partial_nregs): Delete.
	* sh.h (CPP_SPEC, CONDITIONAL_REGISTER_USAGE): Add SH3E support.
	(TARGET_SWITCHES, OVERRIDE_OPTIONS, FIRST_PSEUDO_REGISTER): Likewise.
	(FIXED_REGISTERS, CALL_USED_REGISTERS, HARD_REGNO_MODE_OK): Likweise.
	(enum reg_class, REG_CLASS_NAMES, REG_CLASS_CONTENTS): Likewise.
	(REG_ALLOC_ORDER, CONST_DOUBLE_OK_FOR_LETTER_P, NPARM_REGS): Likewise.
	(FUNCTION_VALUE, LIBCALL_VALUE, FUNCTION_VALUE_REGNO_P): Likewise.
	(FUNCTION_ARG_REGNO_P, CUMULATIVE_ARGS, ROUND_REG): Likewise.
	(INIT_CUMULATIVE_ARGS, FUNCTION_ARG_ADVANCE, FUNCTION_ARG): Likewise.
	(FUNCTION_ARG_PARTIAL_NREGS, LEGITIMATE_CONSTANT_P): Likewise.
	(MODE_DISP_OK_4, REGISTER_MOVE_COST, REGISTER_NAMES): Likewise.
	(DBX_REGISTER_NUMBER, enum processor_type): Likewise.
	(SH3E_BIT, TARGET_SH3E, FPUL_REG, FIRST_FP_REG, LAST_FP_REG): New.
	(FIRST_FP_PARM_REG, FIRST_FP_RET_REG, BASE_RETURN_VALUE_REG): New.
	(BASE_ARG_REG, enum sh_arg_class, struct sh_args): New.
	(GET_SH_ARG_CLASS, PASS_IN_REG_P, sh_builtin_saveregs): New.
	(EXPAND_BUILTIN_SAVEREGS, DOUBLE_TYPE_SIZE): New.
	(TARGET_SWITCHES): Delete broken -m3l option.
	* sh.md (cpu, movsi_i, movsf_i, blt, bge, sle, sge): Add SH3E support.
	(push_e, pop_e, movsi_ie, movsf_ie, addsf3, subsf3): New patterns.
	(mulsf3, macsf3, divsf3, floatsisf2, fix_truncsfsi2): New patterns.
	(cmpgtsf_t, cmpqesf_t, cmpsf, negsf2, sqrtsf2, abssf2): New patterns.
	(abssf2+9, abssf2+10): Add SH3e support to peepholes
	(abssf2+11, abssf2+12): New peepholes for SH3e.
	* t-sh (MULTILIB_OPTIONS): Add SH3E support.
	(MULTILIB_DIRNAMES): Define to empty.

Thu Jan 18 11:29:11 1996  Ian Lance Taylor  <ian@cygnus.com>

	* cplus-dem.c (cplus_demangle_opname): Change type of opname
	parameter to const char *.
	(cplus_mangle_opname): Change return type and type of opname
	parameter to const char *.  Don't cast return value.
	* demangle.h (cplus_demangle_opname): Update declaration.
	(cplus_mangle_opname): Likewise.

Thu Jan 18 10:07:33 1996  Michael Meissner  <meissner@tiktok.cygnus.com>

	* gcc.c (extra_specs): If EXTRA_SPECS is defined, define
	extra_specs array to hold the extra specs the machine description
	defines.
	(set_spec): If EXTRA_SPECS is defined, handle the extra
	specifications.
	(process_command): Ditto.
	(main): Ditto.
	(validate_all_switches): Ditto.

	* rs6000/{rs6000.h,powerpc.h,aix41.h} ({CPP,ASM}_SPEC): Use common
	specs with EXTRA_SPECS, only modifying things in the target that
	needs to be modified, rather than having tons of mostly duplicate
	definitions.
	* rs6000/{sysv4{,le}.h,}netware.h,lynx.h,} ({CPP,ASM}_SPEC): Ditto.
	* rs6000/eabi{le,aix}.h,aix3newas.h}} ({CPP,ASM}_SPEC): Ditto.

Wed Jan 17 19:38:24 1996  Paul Eggert  <eggert@twinsun.com>

	* cexp.y (HOST_WIDE_INT_MASK): Renamed from LONG_MASK;
	use HOST_WIDE_INT.
	(HOST_WIDE_INT, HOST_BITS_PER_WIDE_INT): Put back.
	(parse_c_expression, expression_value, parse_escape, left_shift,
	right_shift, struct constant, exp, parse_number, yylex):
	Replace `long' with `HOST_WIDE_INT'.
	* cccp.c (PTR_INT_TYPE): Remove obsolete define to `long'.
	(parse_escape, parse_c_expression, eval_if_expression, get_lintcmd,
	do_line, do_if, do_elif): Replace `long' with `HOST_WIDE_INT'.
	(trigraph_pcp): Don't assume a pointer difference fits in an int.

Wed Jan 17 18:56:31 1996  Jim Wilson  <wilson@cygnus.com>

	* expmed.c (extract_bit_field): For multi-word bitfield, clobber
	target before storing to it.

Wed Jan 17 14:19:34 1996  J.T. Conklin  <jtc@slave.cygnus.com>

	* sparc/{t-sol2,t-sunos40,t-sunos41}: Define away LIBGCC1_TEST
	so that cross compilers targeted at these systems will build.

Wed Jan 17 09:51:58 1996  Doug Evans  <dje@cygnus.com>

	* sparc.h (v9 INIT_CUMULATIVE_ARGS): Fix typos.

	* gcc.c (process_command): New local lang_n_files, and use
	it in test of -c with -o.  Move test of -save-temps.
	Test for trailing NUL in -c.

	* i386/t-go32: New file.
	* i386/xm-go32.h: New file.
	* configure (i[345]86-*-go32*): Define xm_file and tmake_file.

Wed Jan 17 07:47:43 1996  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* cccp.c (HOST_BITS_PER_WIDE_INT, HOST_WIDE_INT): Put back.
	(pcfinclude): Use HOST_WIDE_INT for casting pointer to integer.

Wed Jan 17 05:25:06 1996  Jeffrey A. Law  <law@cygnus.com>

	* va-pa.h (__gnuc_va_list): Use a "void *".

Tue Jan 16 18:45:23 1996  Per Bothner  <bothner@cygnus.com>

	* cppexp.c (cpp_lex):  Do cpp_pop_buffer after CPP_POP so retried
	cpp_skip_hspace will actually work.

	* cppexp.c (SKIP_OPERAND):  New macro.
	(cpp_parse_expr):  Suppress evaluation and diagnostics in
	unevaluated subexpressions.
	Corresponds to Eggert's Fri Jun  9 17:58:29 1995 change.

Tue Jan 16 11:59:07 1996  Mike Stump  <mrs@cygnus.com>

	* expr.c (expand_expr, case COND_EXPR): Make sure cleanups live on
	the function_obstack as they are used by the exception handling code.
	(defer_cleanups_to): Ditto.
	(TRUTH_ANDIF_EXPR): Ditto.
	(TRUTH_ORIF_EXPR): Ditto.

Tue Jan 16 13:57:13 1996  Jim Wilson  <wilson@cygnus.com>

	* cccp.c (new_include_prefix): Ignore ENOTDIR error from stat.

Tue Jan 16 12:18:56 1996  Doug Evans  <dje@cygnus.com>

	* i386/t-sol2 (crt[1in].o): Add missing -c.
	* sparc/t-sol2 (crt[1in].o,gcrt1.o): Likewise.
	Source files are assembler.

	* gcc.c (do_spec_1, case 'W'): Rename local `index' to `cur_index' to
	avoid warning on solaris.

Tue Jan 16 11:42:09 1996  Ian Lance Taylor  <ian@cygnus.com>

	* config/dbxcoff.h: New file for stabs in COFF support.
	* config/a29k/a29k-udi.h: Use dbxcoff.h.
	* config/h8300/h8300.h: Likewise.
	* config/i960/i960-coff.h: Likewise.
	* config/m68k/coff.h: Likewise.
	* config/m88k/m88k-coff.h: Likewise.
	* config/sh/sh.h: Likewise.
	* config/sparc/litecoff.h: Likewise.

Tue Jan 16 08:21:45 1996  Hans-Peter Nilsson  <Hans-Peter.Nilsson@axis.se>

	* optabs.c (expand_fix): Don't copy TARGET to TO if same.

	* expr.c (emit_move_insn_1): Don't emit clobber when moving
	by parts and source equals destination.

Tue Jan 16 08:08:29 1996  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* expmed.c (extract_bit_field): Don't abort if not MEM_IN_STRUCT_P.

	* local-alloc.c (memref_referenced_p, case REG): Fix last change.

	* fold-const.c (const_binop): Strip NOPS from both args.

	* regclass.c (regclass): Remove useless cast.

Tue Jan 16 07:06:03 1996  Paul Eggert  <eggert@twinsun.com>

	* cexp.y: General code cleanup in the style of 1995-04-01 change.
	Add prototypes for static functions.
	Add parentheses suggested by `gcc -Wparentheses'.
	Use `long' uniformly, instead of long, int, HOST_WIDE_INT mess.
	(struct constant): Use `signedp' flag (with sign bit) instead of
	`unsignedp' flag; it's a little more convenient.

	(HAVE_STDLIB_H, STDC_HEADERS, LONG_MASK, __attribute__, PROTO,
	VA_START, PRINTF_ALIST, PRINTF_DCL, PRINTF_PROTO, PRINTF_PROTO_1,
	vfprintf, SIGNED, UNSIGNED): New symbols.
	<stdlib.h>: Include if HAVE_STDLIB_H.
	<string.h>: New include.
	(HOST_BITS_PER_WIDE_INT, HOST_WIDE_INT): Remove.
	(yylex, yyerror, expression_value, parse_number,
	initialize_random_junk): Now static.

	(overflow_sum_sign): Renamed from possible_sum_sign, with an
	extra arg SIGNEDP.
	(parse_number): Inline strcmp when checking for "0x".
	(yylex): Keep track of mask needed when decoding wide characters.
	(parse_escape): New arg RESULT_MASK; use it instead of
	assuming char width.
	(yylex, parse_escape, parse_c_expression): Store all host
	integers as long, not int or HOST_WIDE_INT.
	(left_shift): No need to do signed left shifts separately.

	These changes are for the test program (if TEST_EXP_READER):
	(pedantic, traditional): Allocate storage.
	(main): Set pedantic, traditional, yydebug depending on args.
	(is_hor_space, warning, lookup): Change types and implementation
	to match rest of program.
	(pedwarn, check_assertion, xmalloc): New functions.

	* cccp.c (HOST_BITS_PER_WIDE_INT, HOST_WIDE_INT): Remove.
	(parse_escape, parse_c_expression, eval_if_expression):
	Change return type to `long'; all callers changed.
	(pcfinclude): Use `int', not HOST_WIDE_INT; any integral type will do.

	* cccp.c (skip_quoted_string): If pedantic and not pedantic_errors,
	skipped multiline strings elicit a warning, not an error.
	(rescan): Minor code reorg to keep it parallel with skip_quoted_string.

	* fold-const.c (left_shift_overflows): Remove; unused.

	* c-typeck.c (convert_for_assignment): Don't automatically convert
	from a union member to the union.

Tue Jan 16 06:26:00 1996  Stefan Vogel  (stefan@ssw.de)

	* config/svr4.h (ASM_OUTPUT_SECTION_NAME): Define section attributes
	only when a section is defined the first time.

Tue Jan 16 06:03:27 1996  Thomas Graichen  <graichen@omega.physik.fu-berlin.de>

	* i386/freebsd.h (ASM_WEAKEN_LABEL): Deleted; not supported.

Mon Jan 15 20:59:49 1996  J. Kean Johnston  <hug@netcom.com>

	* Makefile.in (LIBGCC2_CLFAGS): Add -DIN_LIBGCC2.
	(libgcc1.a): Add -DIN_LIBGCC1.
	(stamp-crtS): Remove -fpic, use CRTSTUFF_CFLAGS_S.
	* config/t-libc-ok: Add CRTSTUFF_CFLAGS_S.

	* configure (i[3456]86-*-sco3.2v5*): New case.
	* i386/sco5.h, i386/t-sco5, i386/x-sco5, i386/xm-sco5.h: New files.
	* ginclude/stdarg.h, ginclude/varags.h: Add test for SCO Open Server 5.

Mon Jan 15 20:44:13 1996  J.T. Conklin  <jtc@netbsd.org>

	* m68k/netbsd.h (ASM_SPEC): New macro.

Mon Jan 15 17:01:16 1996  Doug Evans  <dje@cygnus.com>

	* c-lex.c (check_newline): Pass character after `#pragma' to
	HANDLE_PRAGMA.  Don't call get_directive_line if at end of line.
	* c-common.c (get_directive_line): Watch for EOF.
	* h8300/h8300.h (HANDLE_PRAGMA): New argument `c'.
	Must issue `return' now.
	* i960/i960.h (HANDLE_PRAGMA): Likewise.
	* sh/sh.h (HANDLE_PRAGMA): Likewise.
	* nextstep.h (HANDLE_PRAGMA): Likewise.
	* h8300/h8300.c (handle_pragma): New argument `ch'.
	Simplify pragma processing.  Delete support for `#pragma section'.
	* i960/i960.c (process_pragma): New argument `c'.  Change result to
	terminating character.
	* nextstep.c (handle_pragma): Likewise.
	* sh/sh.c (handle_pragma): Likewise.  Also simplified.

	* sched.c (reemit_notes): Add prototype.
	(sched_analyze_2): Reorganize comments.  Call prev_nonnote_insn.
	(sched_analyze): Add abort call.
	(schedule_block): Call prev_nonnote_insn.
	Move call of reemit_notes to after SCHED_GROUP_P scheduling.
	Set `head' to `last'.

Mon Jan 15 16:12:25 1996  Roland McGrath  <roland@churchy.gnu.ai.mit.edu>

	* configure (*-*-gnu*): Use tmake_file=t-gnu.
	* config/t-gnu (CRTSTUFF_T_CFLAGS): New file.
	* configure (*-*-gnu*): Remove crtbeginS.o and crtendS.o frmo
	$extra_parts.  Use xmake_file=x-linux.

Mon Jan 15 15:30:49 1996  Gran Uddeborg <gvran@uddeborg.pp.se>

	* i386/svr3{,z}.ifile: Allocate address areas for the "stab"
	and "stabstr" sections.

Mon Jan 15 14:39:14 1996  Paul Eggert  <eggert@twinsun.com>

	* c-decl.c (finish_incomplete_decl): Warn if completing an
	array that wasn't declared extern.  Simplify test for whether
	completion is needed.

	* cccp.c (do_xifdef): Warn about `#ifdef 0' if not traditional;
	formerly the warning was issued if not pedantic.

Mon Jan 15 13:24:12 1996  Michael Meissner  <meissner@tiktok.cygnus.com>

	* rs6000.md ({add,sub}di3): Make it work on little endian PowerPC
	systems.

	* rs6000/eabi-c{i,n}.asm (.sbss2 section): Don't make .sbss2 a
	.bss section just yet, because it confused the linker.

Mon Jan 15 08:50:31 1996  Philippe De Muyter (phdm@info.ucl.ac.be)

	* m68k.md (pushdi): Allow "i" for operand 1.
	(extendqidi2): Improve 68000 code generation.
	(adddi_lshrdi_63): New pattern.

Mon Jan 15 08:38:40 1996  H.J. Lu {hjl@gnu.ai.mit.edu)

	* configure (i[3456]86-*-linux*): Add extra_parts.
	* i386/linux.h (LIB_SPEC): Remove %{mieee-fp:-lieee}.
	Use -lc_p for -profile.
	(CC1_SPEC): New macro.
	* linux.h (STARTFILE_SPEC): Use crtbegin.o for both shared llibrary
	and normal executable;  use gcrt1.o for -profile.
	(ENDFILE_SPEC): Use crtend.o for shared llibrary and normal executable.
	* x-linux (INSTALL_ASSERT_H): Unset it.
	* configure (i[3456]86-*-linux*oldld*): Set xmake_file to x-linux-aout.
	(i[3456]86-*-linux*aout*): Likewise.
	* x-linux-aout: New file, copied from config/x-linux.

Mon Jan 15 07:41:05 1996  Dmitry K. Butskoy  (buc@stu.spb.su)

	* varasm.c (in_data_section): New function.

Mon Jan 15 07:37:13 1996  Andreas Schwab  (schwab@issan.informatik.uni-dortmund.de)

	* c-typeck.c (build_c_cast): Don't warn about alignment when we
	have an opaque type.

Mon Jan 15 07:22:59 1996  Michel Delval  (mfd@ccv.fr)

	* reload.c (find_equiv_reg): Apply single_set, not PATTERN, to WHERE.

Mon Jan 15 07:02:21 1996  John F. Carr  <jfc@mit.edu>

	* reorg.c (mark_referenced_resources, case TRAP_IF): Set volatil.

Mon Jan 15 06:20:38 1996  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* gcc.c (process_commands): Remove inadvertant fallthrough.

	* function.c ({,round_}trampoline_address): TRAMPOLINE_ALIGNMENT is
	in bits, not bytes.

	* objc/archive.c (objc_{write,read}_type, case _C_STRUCT_B): Fix typo.

	* expr.c (expand_expr, case COMPONENT_REF): Don't make recursive
	call on object with EXPAND_SUM.

	* stmt.c (save_expr_regs): Delete declaration; unused.

Sun Jan 14 21:44:26 1996  Michael Meissner  <meissner@wogglebug.tiac.net>

	* rs6000/eabi-ci.asm (__EXCEPT_START__): Provide label for start
	of g++ exception pointers.

	* rs6000/eabi-cn.asm (__EXCEPT_END__): Provide label for end of
	g++ exception pointers.

	* rs6000/eabi.asm (__eabi): Relocate exception pointers unless
	they are NULL.

	* va-ppc.h (va_arg): Long longs are always passed in odd registers.

	* rs6000.c (function_arg_boundary): On V.4, long longs are always
	passed in odd registers.

	* rs6000.md ({add,sub}di3): Remove restriction for POWER only,
	since all of the instructions used are common to both
	architectures.

Sun Jan 14 20:34:03 1996  Jeffrey A. Law  <law@cygnus.com>

 	* expr.c (expand_assignment): Fix alignment parm in emit_block_move.

Sun Jan 14 19:00:25 1996  Jim Wilson  <wilson@cygnus.com>

	* sched.c (schedule_block): Copy RTX_INTEGRATE_P bit when create
	a new note.

	* integrate.c (save_for_inline_copying, case NOTE): Copy
	RTX_INTEGRATED_P bit.

Sun Jan 14 17:57:52 1996  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* stupid.c (stupid_find_reg): Don't try to allocate reg if live
	over more than 5,000 insns.

Sat Jan 13 23:09:07 1996  Jeffrey A. Law  <law@cygnus.com>

	* pa.h (STACK_BOUNDARY): Bring back down to 64bits.

	* pa.md (pre_ldwm): Fix bug exposed by recent changes.
	Simplify.
	(pre_stwm, post_ldwm, post_stwm): Likewise.
	(HImode and QImode variants): Likewise.
	* pa.c (hppa_expand_prologue): Corresponding changes.
	(hppa_expand_epilogue): Likewise.

	* pa.c (hppa_legitimize_address): Generate more indexing
	address modes.

Fri Jan 12 19:03:21 1996  Doug Evans  <dje@cygnus.com>

	* sparc/sol2.h (COMMON_ASM_OP): Delete, use sysv4.h's.

	* sched.c (schedule_block): Maintain a valid chain so
	emit_note_before works.

Fri Jan 12 13:20:01 1996  Michael Meissner  <meissner@tiktok.cygnus.com>

	* rs6000/eabi{,-ci,-cn}.asm: Add support for V.4 .sbss/.sdata, and
	eabi .sbss2/.sdata2 sections, loading up r13 and r2 respectively
	if the sections were used, and we don't need to relocate the
	pointers.

Thu Jan 11 19:41:07 1996  Per Bothner  <bothner@cygnus.edu>

	* sparc.h (FUNCTION_ARG_PASS_BY_REFERENCE):  Use AGGREGATE_TYPE_P so
	QUAL_UNION_TYPE and SET_TYPE are also passed by invisible reference.
	* sparc.h (INIT_CUMULATIVE_ARGS for SPARCV9):  Return types of
	QUAL_UNION_TYPE and SET_TYPE also make invisible 1st argument.

Thu Jan 11 18:33:50 1996  Doug Evans  <dje@cygnus.com>

	* h8300/h8300.h (TARGET_ALIGN_STRUCT_300): New macro.
	(TARGET_SWITCHES): Add -malign-struct-300.
	(BIGGEST_FIELD_ALIGNMENT): Update.

Thu Jan 11 12:07:44 1996  J.T. Conklin  <jtc@cygnus.com>

	* h8300/h8300.h (CPP_PREDEFINES): Delete -D_DOUBLE_IS_32BITS.

Thu Jan 11 11:09:33 1996  David Edelsohn  <edelsohn@mhpcc.edu>

	* rs6000.md (mulsf3 !POWERPC): Use dmul attribute.
	(divsf3 !POWERPC): Use ddiv attribute.

Thu Jan 11 11:09:33 1996  Michael Meissner  <meissner@tiktok.cygnus.com>

	* rs6000/eabi-ctors.c (__do_global_ctors): If global variable
	__atexit is non-NULL, call it with __do_global_dtors address to
	register the function to run destructors.
	(__do_global_{c,d}tors): Guard against NULL pointers.

	* rs6000/eabi.asm (__eabi): If the __eabi function was already
	called, do nothing.

Thu Jan 11 11:29:09 1996  Doug Evans  <dje@cygnus.com>

	* fixincludes: Wrap rpc/types.h in extern "C", for osf2.0.

Wed Jan 10 13:16:03 1996  Doug Evans  <dje@cygnus.com>

	* varasm.c (variable_section): New function.
	(assemble_variable): Call it.

Wed Jan 10 11:27:28 1996  Michael Meissner  <meissner@tiktok.cygnus.com>

	* rs6000/eabi-c{i,n}.asm (__DTOR_{LIST,END}__): Fix typo.
	* rs6000/eabi{,sim}.h ({START,END}FILE_SPEC): Add %s to object
	files.

	* rs6000/t-{eabi,eabigas,ppc,ppcgas} (MULTILIB_MATCHES): Drop
	support for obsolete -mcpu=mpc403.  Add -mcpu=821 and -mcpu=860 to
	soft-float defaults.

	* rs6000/t-eabi{,gas} (LIBGCC): Add stmp-crt.
	(INSTALL_LIBGCC): Add install-crt.
	(EXTRA_PARTS): Delete.
	(stmp-crt{,-sub}): New rules to build crti.o and crtn.o in a
	multilib fashion.
	(install-crt): Install the multilib crt values.

Tue Jan  9 17:30:16 1996  Doug Evans  <dje@cygnus.com>

	* c-tree.h (merge_attributes): Moved from here.
	* tree.h (merge_attributes): To here.
	* c-typeck.c (merge_attributes): Moved from here.
	* tree.c (merge_attributes): To here.

Mon Jan  8 18:27:38 1996  Arne H. Juul  <arnej@pvv.unit.no>

	* mips/netbsd.h (LINK_SPEC): Change nostdlib to nostartfiles.
	(LOCAL_LABEL_PREFIX): Delete.
	(ASM_OUTPUT_SECTION_NAME): Define.

Sun Jan  7 17:11:11 1996  David Edelsohn  <edelsohn@mhpcc.edu>

	* collect2.c (scan_libraries): Correct Import File ID interpretation.

Sun Jan  7 16:56:56 1996  Michael Meissner  <meissner@wombat.gnu.ai.mit.edu>

	* {svr4,mips/elf{,64}}.h (MAX_OFILE_ALIGNMENT):  Define as
	32768*8.

Sat Jan  6 15:52:36 1996  Doug Evans  <dje@cygnus.com>

	* a29k/vx29k.h (CPP_SPEC): Define.

	* configure: Recognize any --with/--without option.

	* Makefile.in (MAKEINFOFLAGS): New variable.
	(cpp.info,gcc.info): Use it.

	* sparc/t-sol2 (crt1.o,crti.o,crtn.o,gcrt1.o): Use $(GCC_FOR_TARGET).
	* i386/t-sol2 (crt1.o,crti.o,crtn.o): Likewise.

Fri Jan  5 10:44:25 1996  Michael Meissner  <meissner@tiktok.cygnus.com>

	* rs6000/aix{3newas,41}.h ({ASM,CPP}_SPEC): Update for new
	processors.
	* rs6000/eabi{aix,le}.h ({ASM,CPP}_SPEC): Ditto.
	* rs6000/{lynx,netware,powerpc,sysv4}.h ({ASM,CPP}_SPEC): Ditto.

	* rs6000.c (rs6000_override_options): Remove requirement that
	-mcpu=common be big endian.
	(rs6000_stack_info): If NAME__main is defined, mark this function
	as doing a call, even if there are no arguments.

	* rs6000.md (SI*SI->DI splitters): Add reload_completed
	condition.
	(mulsidi3): If big endian, do move directly, rather than moving by
	pieces.

	* rs6000/eabi{,sim}.h (STARTFILE_SPEC): Add crti.o before any
	other objects.
	(ENDFILE_SPEC): Add crtn.o after any objects.
	* rs6000/t-eabi{,gas}: Build crt{i,n}.o from eabi-crt{i,n}.asm.
	* rs6000/eabi-crt{i,n}.asm: New files to provide begin/end labels
	for all special sections used by eabi as opposed to relying on GLD
	to set all of these symbols.
	* rs6000/eabi.asm (__eabi): Change to use the new labels provided
	above.  Don't assume that the .got2, .ctors, .dtors, and .fixup
	sections are contiguous.

Fri Jan  5 10:40:37 1996  David Edelsohn  <edelsohn@mhpcc.edu>

	* rs6000.md (mulh_call): Remove r4 clobber.
	(quoss_call): Remove cr0 and cr1 clobbers.

	* rs6000.md (function units): Add MPC505/821/860 support.
	(SF multiply add combiner patterns): Use dmul attribute when limited
	to DFmode POWER instructions.
	* rs6000.c (processor_target_table): Add MPC505/821/860 support.
	Remove MASK_POWER and add MASK_PPC_GFXOPT for PPC602.  Always use
	new mnemonics for common mode.
	(rs6000_override_options): Don't set SOFT_FLOAT based upon
	PROCESSOR_DEFAULT.
	* rs6000.h (processor_type): Add PROCESSOR_MPCCORE.
	(RTX_COSTS): Add PROCESSOR_MPCCORE cases.
	(CPP_SPEC): Add new processor support.

Fri Jan  5 00:32:49 1996  Doug Evans  <dje@cygnus.com>

	* sparc/sparc.h (MACHINE_STATE_RESTORE): Add missing .align.

Wed Jan  3 18:29:32 1996  Doug Evans  <dje@cygnus.com>

	* arm/lib1funcs.asm (__USER_LABEL_PREFIX__): Define if not already.
	(CONCAT1,CONCAT2,SYM): Define.
	(__udivsi3,__divsi3,__umodsi3,__modsi3,__div0): Use SYM to define
	global labels.

Wed Jan  3 02:41:39 1996  Jeffrey A. Law  <law@cygnus.com>

	* pa.h (DBX_OUTPUT_MAIN_SOURCE_FILE_END): Call text_section.

Tue Jan  2 16:12:13 1996  Jim Wilson  <wilson@cygnus.com>

	* sh.c (gen_shifty_op): Output a NOP for a shift by 0.
	(find_barrier): New variables si_limit, hi_limit.  Set them depending
	on whether we are optimizing.  Set found_hi if the destination is
	HImode.
	(machine_dependent_reorg): If not optimizing, then change scan to a
	note instead of calling delete_insn.
	* sh.h (OVERRIDE_OPTIONS): Don't set optimize or flag_delayed_branch.

	* dbxout.c (gstab.h): Include if cross compiling.

Mon Jan  1 21:13:43 1996  Arkady Tunik  <Arkady_Tunik@comverse.com>

	* configure (i[3456]-*-solaris2*): Support stabs.
	* i386/sol2dbg.h: New file.

Mon Jan  1 09:08:01 1996  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* c-typeck.c: Use DECL_C_BIT_FIELD, not DECL_BIT_FIELD in all tests.

	* global.c (reg_allocno): No longer static.
	* reload1.c (reg_allocno): Declare.
	(order_regs_for_reload): New arg, GLOBAL.
	Bias against regs allocated in local-alloc.
	(reload): Pass new parm to order_regs_for_reload.

	* local-alloc.c (reg_equiv_replacement): New variable.
	(memref_referenced_p, case REG): Check for reg_equiv_replacement.
	(update_equiv_regs): reg_equiv_replacement now file-scope.

	* c-decl.c (finish_struct): Warn if field with enumeral type is
	narrower than values of that type.

	* combine.c (rtx_equal_for_field_assignment_p): New function.
	(make_field_assignment): Use it.
	Expand compound operations on both sides of an IOR.
	Properly adjust constand in IOR when computing bit position.

Sun Dec 31 18:47:22 1995  Doug Evans  <dje@cygnus.com>

	* m68k-none.h (MULTILIB_DEFAULTS): Define.

Sun Dec 31 15:47:20 1995  Jeffrey A. Law  <law@cygnus.com>

	* hard-reg-set.h (losing_caller_save_reg_set): Declare.
	* regclass.c (losing_caller_save_reg_set): Define.
	(init_reg_sets_1): Initialize losing_caller_save_reg_set.
	* global.c (find_reg): Avoid caller-saving registers in
	losing_caller_save_reg_set.
	* local-alloc.c (find_free_reg): Avoid caller-saving registers
	in losing_caller_save_reg_set.
	(CLASS_LIKELY_SPILLED_P): Delete definition.  Moved into regs.h.
	* regs.h (CLASS_LIKELY_SPILLED_P): Define if not already defined.

	* reorg.c (fill_simple_delay_slots): Try to fill from the
	target of an unconditional branch if necessary.

	* pa.h (REG_ALLOC_ORDER): Allocate PA1.1 caller-saved FP regs
	before PA1.0 caller-saved FP regs.

	* sched.c (adjust_priority): Use ADJUST_PRIORITY if its defined.

	* pa.h (ADJUST_PRIORITY): Define to keep lifetimes of registers
	that will be allocated to %r1 shorter.

Sun Dec 31 14:20:49 1995  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* rtl.h (assign_temp): Add extra arg.
	* function.c (assign_temp): Add extra arg, DONT_PROMOTE.
	Don't return (const_int 0) for VOIDmode.
	* stmt.c (expand_asm_operands): Call assign_temp with extra arg.
	* expr.c (save_nocopied_parts, expand_expr): Likewise.
	(expand_expr, case SAVE_EXPR): Set TEMP to (const_int 0)
	if MODE is VOIDmode.
	(expand_expr): Don't use assign_temp for pseudos when might
	want to be TMODE.

	* stmt.c (tail_recursion_args): Compare TYPE_MAIN_VARIANTs.

	* calls.c (expand_call): Don't warn about not being able to
	inline if -O0.
	* expr.c (clear_pending_stack_adjust): Don't do optimization if -O0.
	* function.c (instantiate_decls): Check DECL_SAVED_INSNS to see
	if obstack change is needed.
	* toplev.c (rest_of_compilation): Leave DECL_INLINE set even if
	won't inline.

	* tree.h: Add documentation on uses of common area flags.
	(DECL_ERROR_ISSUED): New macro.
	(DECL_NO_STATIC_CHAIN): New macro; currently unused.
	* c-aux-info.c (gen_decl): DECL_REGISTER isn't defined
	for FUNCTION_DECL.
	* toplev.c (compile_file): Likewise.
	* stmt.c (fixup_gotos): Use DECL_ERROR_ISSUED instead
	of DECL_REGISTER.
	* varasm.c ({bc_,}make_decl_rtl): Don't look at DECL_REGISTER
	for functions.

Sat Dec 30 07:57:11 1995  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* sdbout.c (plain_type_1, case ARRAY_TYPE): Subtract lower bound
	when writing dimension.

Fri Dec 29 18:23:58 1995  Paul Eggert  <eggert@twinsun.com>

	* cccp.c (eval_if_expression): End expression with '\n', not '\0'
	so '\0' can be diagnosed properly.
	* cexp.y (yylex, parse_c_expression, main): Likewise.

Thu Dec 28 18:24:54 1995  Per Bothner  <bothner@kalessin.cygnus.com>

	* tree.h (TYPE_ARRAY_MAX_SIZE):  New macro (used by Chill).
	* function.c (assign_temp):  New function.  Can handle Chill-style
	variable-sized array with static maximum size.
	* rtl.h (assign_temp):  New declaration.
	* stmt.c (expand_asm_operands):  Use new assign_temp function.
	* expr.c (save_noncopied_parts, expand_expr):  Likewise.

Thu Dec 28 15:28:47 1995  Per Bothner  <bothner@kalessin.cygnus.com>

        * function.c (assign_parms):  Fix thinko for struct value arg.

Fri Dec 29 12:41:47 1995  Michael Meissner  <meissner@tiktok.cygnus.com>

	* rs6000.md (movdf): Reinstate 12/24 change accidently dropped in
	undoing 12/27 changes.

Thu Dec 28 22:24:53 1995  Michael Meissner  <meissner@tiktok.cygnus.com>

	* rs6000.h: (reg_class): Undo 12/27 changes, except for
	formatting.
	(REG_NAMES): Ditto.
	(REG_CLASS_CONTENTS): Ditto.
	(REGNO_REG_CLASS): Ditto.
	(REG_CLASS_FROM_LETTER): Ditto.
	(PREDICATE_CODES): Delete predicate functions.
	(gpc_reg{0,3,4,34}_operand): Delete declaration.
	(cc_reg{0,1}_operand): Ditto.

	* rs6000.c (gpc_reg{0,3,4}_operand): Delete.
	(cc_reg{0,1}_operand): Ditto.

	* rs6000.md (common mode functions): Undo 12/27 changes, and add
	the appropriate clobbers for common mode calls.  Keep the
	define_splits for powerpc SI*SI->DI.

Thu Dec 28 11:08:11 1995  Mike Stump  <mrs@cygnus.com>

        * sparc.h (RETURN_ADDR_OFFSET): Rename from
        NORMAL_RETURN_ADDR_OFFSET, returns the offset for the current
        function specifically.

Thu Dec 28 07:07:14 1995  Paul Eggert  <eggert@twinsun.com>

	* c-lex.c (yylex): Improve error message for bogus numbers.
	Consolidate duplicated code.

	* cexp.y (parse_number): Improve error message for bogus numbers.
	(yylex): Consider `0xe-1' to be a (bogus) number if not traditional.

	* cccp.c (do_include): In VMS, worry only about EACCES when open fails.
	(new_include_prefix): Don't try to stat dir prefixes in VMS.

Wed Dec 27 14:02:54 1995  Per Bothner  <bothner@kalessin.cygnus.com>

	* fix-header.c:  Add EXIT_FAILURE and EXIT_SUCCESS to stdlib.h if
	missing.  Re-write how errno is added to be done similarly.
	(XOPEN_SYMBOL, XOPEN_EXTENDED_SYMBOL):  New macros, to mark XPG4
	functions.
	(std_include_table):  Add a number of functions (mostly XPG4).

Tue Dec 26 23:18:34 1995  Per Bothner  <bothner@kalessin.cygnus.com>

	* sys-types.h:  Add dummy definition for ssize_t.
	* sys-protos.h (bcmp, bcopy, gethostname, lockf, read, readlink,
	write):  Fix prototypes to match Posix and XPG4.
	(socket, strcasecmp, strncasecmp):  New prototypes (from XPG4).

Wed Dec 27 15:30:04 1995  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* libgcc2.c (_bb_init_prg): Cast arg to bzero to (char *).

	* regs.h (reg_rtx_no, regno_pointer_{flag_length,align): New decls.
	(REGNO_POINTER_ALIGN): New macro.
	* emit-rtl.c (regno_pointer_align): New variable.
	(gen_reg_rtx): Extend regno_pointer_align table.
	Allocate tables in saveable obstack.
	(mark_reg_pointer): New arg, ALIGN.
	(gen_inline_header): New args for reg info.
	(set_new_first_and_last_insn): Set cur_insn_uid.
	({save,restore}_emit_status): Save and restore regno_pointer_align.
	(restore_reg_data{,_1}): Deleted.
	(init_emit): Allocate register tables in saveable obstack.
	Set REGNO_POINTER_ALIGN for regs pointing into frame.
	* function.c (assign_parms): Set REGNO_POINTER_ALIGN for
	parms that are pointers.
	* function.h (struct function): New field regno_pointer_align.
	* expr.c (expand_expr, case VAR_DECL): Set REGNO_POINTER_ALIGN
	when copying address into memory.
	(expand_expr, case COMPONENT_REF, case ADDR_EXPR): Set alignment
	of register when result or result's address.
	(expand_expr, case CONVERT_EXPR): Don't handle -fforce-mem here.
	* combine.c (set_nonzero_bits_and_sign_copies): Handle reg even
	if only set once and in one basic block.
	(nonzero_bits, case REG): Use REGNO_POINTER_ALIGN instead of
	explicit alignment of registers pointing into frame.
	* stmt.c (expand_decl): Set alignment of register for pointer
	variable.
	* optabs.c (emit_unop_insn): Don't do -fforce-mem for SIGN_EXTEND.
	* cse.c (find_best_addr): Make sure folded address better before using.
	* rtl.h (INLINE_REGNO_{RTX,POINTER_FLAG,POINTER_ALIGN}): New macros.
	(gen_inline_header): Add three new parms.
	* rtl.def (INLINE_HEADER): Add three new fields.
	* integrate.c: Include regs.h.
	(initialize_for_inline): Pass additional args to gen_inline_header.
	(save_for_inline_copying): Make new regno_reg_rtx, regno_pointer_flag,
	and regno_pointer_align arrays.
	(expand_inline_function): Set alignment of reg for parm if passed
	by hidden pointer.
	Set regno_pointer_{flag,align} into remap table.
	(copy_rtx_and_substitute): Set alignment of pointers into
	stack frame.
	Copy pointer flag and alignment to regs that are copies of
	pointer registers from the original regs.
	(output_inline_function): Don't call restore_reg_data.
	Restore reg_rtx_no, regno_{reg_rtx,pointer_flag,pointer_align}.
	* integrate.h (struct inline_remap): New fields regno_pointer_flag
	and regno_pointer_align.
	* unroll.c (unroll_loop): Set regno_pointer_{flag,align} in
	remap table.
	* explow.c (memory_address, allocate_dynamic_stack_space):
	Pass additional arg to mark_reg_pointer.
	* Makefile.in (integrate.o): Includes regs.h.

	* alpha.c ({non,}aligned_memory_operand): Test REGNO_POINTER_ALIGN.
	(reg_or_unaligned_mem_operand): New function.
	(get_unaligned_address): Add new arg, EXTRA_OFFSET.
	* alpha.h ({CONSTANT,DATA}_ALIGNMENT): Align to at least BITS_PER_WORD.
	(PREDICATE_CODES): Add reg_or_unaligned_mem_operand.
	* alpha.md (extend{qihi,qisi,hisi}2): Allow unaligned memory
	as arg 1 and pass to extend_{q,h}idi2.
	(unaligned_extend{q,h}idi): New patterns.
	(extend{q,h}idi2): If unaligned memory, call above new patterns.
	(ext{q,l,w}h recognizer): Update to proper RTL.
	(ext define_split): Comment out for now; wrong and maybe useless.
	(unaligned_{load,store}hi): Do similarly to QImode.
	(movhi, reload_{in,out}hi): Call unaligned case differently.

Wed Dec 27 11:38:20 1995  Michael Meissner  <meissner@tiktok.cygnus.com>

	* rs6000.md (mulsidi3{,_common}): Undo previous change using
	register classes instead of fixed registers for SI*SI->DI common
	mode multiplies.

	* rs6000.c (gpc_reg34_operand): Delete unused function.
	* rs6000.h (gpc_reg34_operand): Ditto.

	* rs6000.c (gpc_reg{3,4}_operand): Reorganize code and don't allow
	SUBREG's.

	* rs6000.c (rs6000_override_options): Do not allow -mcpu=common on
	little endian PowerPC's.
	(gpc_reg{0,3,4,34}_operand): New functions to match a specific
	register.
	(cc_reg{0,1}_operand): Ditto.

	* rs6000.h (reg_class): Add register classes for register 3 by
	itself, register 4 by itself, registers 3&4, and CR1.
	(REG_NAMES): Add support for new register classes.
	(REG_CLASS_CONTENTS): Ditto.
	(REGNO_REG_CLASS): Ditto.
	(REG_CLASS_FROM_LETTER): Ditto.
	(PREDICATE_CODES): Add new predicate functions.
	(gpc_reg{0,3,4,34}_operand): Add declaration.
	(cc_reg{0,1}_operand): Ditto.

	* rs6000.md (common mode multiplication/division): Move/rename the
	common mode calls so that they are closer to the define_expands
	that call them.  Set attribute type to be jmpreg, rather than
	integer, so optimizer knows the branch processing unit is used.
	Make SI*SI->DI multiplier use register classes instead of
	hardwired registers.  Add the appropriate clobbers of CR0/CR1 as
	mandated by the PowerOpen spec.
	(PowerPC SI*SI->DI multipliers): Add appropriate define_splits.

	* rs6000/t-{,x}newas (MULTILIB*): Don't build power2 or 601
	specific libraries.

Tue Dec 26 21:52:18 1995  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* fold-const.c (fold_convert): When converting a NaN to
	another type, change the type of the node before returning it.

Mon Dec 25 17:12:10 1995  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>

	* c-typeck.c (mark_addressable): Fix error in last change.

Sun Dec 24 22:19:49 1995  Jeffrey A. Law  <law@cygnus.com>

	* pa.c (output_function_epilogue): Use assemble_integer rather
	than calling ASM_OUTPUT_INT directly.
	* pa.h (ASM_OUTPUT_INT): Use labels for everything in the
	exception table section.

	* pa.c (print_operand): Don't call fprintf to output a register
	name.  Use fputs instead.

	* pa.h (ASM_OUTPUT_FUNCTION_PREFIX): Strip any name encoding
	on the section name.

Sun Dec 24 17:46:03 1995  Markus Theissinger  <Markus.Theissinger@gmd.de>

	* toplev.c (main): Add -ax option.
	* gcc.c (struct compilers): Likewise.
	* final.c (end_final): Extended header increased to 11 words.
	(profile_after_prologue): FUNCTION_BLOCK_PROFILER uses
	count_basic_blocks instead of profile_label_no.

	* libgcc2.c (struct bb): Add flags field.
	(HAVE_POPEN): Test new define.
	(struct __bb, struct bb_{edge,func}): New structs.
	(__bb_init_{prg,file},__bb_{init,exit}_trace_func,__bb_trace_ret,
	(__bb_trace_func{,_ret},gopen,gclose): New functions.

	* sparc.h, i386.h, m68k.h (FUNCTION_BLOCK_PROFILER, BLOCK_PROFILER):
	Extension for -ax option (profile_block_flag == 2).
	(MACHINE_STATE_SAVE,MACHINE_STATE_RESTORE): New macros.
	(FUNCTION_BLOCK_PROFILER_EXIT): New macro.
	* sparc.c (output_function_epilogue), i386.c (function_epilogue):
	Use FUNCTION_BLOCK_PROFILER_EXIT.
	* m68k.c (output_function_epilogue): Likewise.
	* xm-sparc.h: Define HAVE_POPEN.

Sun Dec 24 06:50:30 1995  Barrett Richardson  (barrett@iglou.com)

	* floatlib.c (__divdf3): Rewrite to do software divide of two
	doubles instead of using __divsf3.

Sun Dec 24 06:38:15 1995  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* rs6000.md (movdf): Don't copy a word at a time; nearly always loses.

	* c-tree.h (DECL_C_BIT_FIELD): New macro.
	* c-decl.c (finish_struct): Set it when set DECL_BIT_FIELD.
	* c-typeck.c (mark_addressable, case COMPONENT_REF):
	Give error if taking address of a bit field.

	* gcc.c (unused_prefix_warning): Include machine_suffix if
	require_machine_suffix.
	(warn_B, warn_std, warn_std_ptr): New variables.
	(process_commands): Use them and NULL_PTR as WARN arg to add_prefix.

	* gcc.c (process_command): Give error for -c with -o and
	multiple compilations.
	(handle_braces): Rename variable "pipe" to "pipe_p".

	* expr.h (clrstr_optab): New declaration.
	(clear_storage): New parm, ALIGN.
	* tree.h (CONSTRUCTOR_TARGET_CLEARED_P): New macro.
	* genopinit.c (optabs): Add "clrstr%a%".
	* optabs.c (init_optabs): Initialize clrstr_optab.
	* expr.c (struct clear_by_pieces): New structure.
	(clear_by_pieces{,_1}, {is,mostly}_zeros_p): New functions.
	(clrstr_optab): New optab.
	(clear_storage): Rework to try to use clear_by_pieces, then
	new clrstr insn, then library call.
	(store_constructor): Track if target is already cleared.
	Clear target first if CONSTRUCTOR is mostly zeros.
	Don't write zeros if target has been cleared.
	Add new arg to clear_storage call.
	(expand_expr, case CONSTRUCTOR): Don't put static constructor
	in memory if mostly zero.
	* i386.md (clrstrsi): New pattern and associate anonymous pattern.

Sat Dec 23 12:21:53 1995  Jeffrey A. Law  <law@cygnus.com>

	* pa.c (output_move_double): Correctly identify and handle
	overlapping moves.
	* pa.md (movdi patterns): Eliminate earlyclobbers in mem<->gr
	cases.
	(movdf patterns): Likewise.

Fri Dec 22 17:29:42 1995  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* expr.c (store_constructor): Don't call change_address on REG.
	(expand_expr, case CONSTRUCTOR): Likewise.

	* mips.c (expand_block_move): Preserve MEM flags in call to
	movstrsi_internal.

	* pa.c (emit_move_sequence): Don't try to set REGNO_POINTER_FLAG
	for a SUBREG.

	* reload.c (find_valid_class): New function.
	(push_reload): Use it in cases where a SUBREG and its contents
	both need to be reloaded.

	* toplev.c (rest_of_compilation): Never defer functions that
	contain nested functions.

Fri Dec 22 15:55:00 1995  Michael Meissner  <meissner@tiktok.cygnus.com>

	* rs6000.md (function units): Add 403 support which deleted
 	by accident on Nov 21st.  Mark all compares from 602, 603, 604,
 	620, 403, like was done for rios{1,2} and 601 as needing the bpu,
 	so that compares are hoisted far enough branches for zero cycle
 	branch support.

Fri Dec 22 15:13:47 1995  Stan Cox  <coxs@dg-rtp.dg.com>

	* i386.h: (TARGET_UNROLL_STRLEN): New macro.
	* i386.c: (output_strlen_unroll): New function.
	* i386.md: (strlensi): New pattern.

Thu Dec 21 18:53:31 1995  Roland McGrath  <roland@churchy.gnu.ai.mit.edu>

	* config/gnu.h (GNU_CPP_PREDEFINES): Add missing space after
	-Amachine(CPU).

Thu Dec 21 12:23:42 1995  Michael Meissner  <meissner@tiktok.cygnus.com>

	* configure ({powerpc,rs6000}*): Change --enable-cpu to
	--with-cpu.
	* rs6000.c (rs6000_select): Ditto.

	* rs6000/aix41.h (LINK_SPEC): Do not pass -bexport to the linker
	if -g and -shared.

Wed Dec 20 11:23:39 1995  Michael Meissner  <meissner@tiktok.cygnus.com>

	* configure ({powerpc,rs6000}-ibm-aix*): Merge these two into the
	same case statement.  Aix 4 now generates -mcpu=common by default.
	({powerpc,rs6000}*): Add support for --enable-cpu=<value> to
	select the default cpu to compile for.

	* rs6000/aix41.h (TARGET_DEFAULT): Make -mcpu=common the default
	behavior.
	(PROCESSOR_DEFAULT): Ditto.
	(MULTILIB_DEFAULTS): Set mcpu=common.

	* rs6000/rs6000.h (TARGET_CPU_DEFAULT): Define to be NULL if not
	defined.  This is used for the --enable-cpu=<value> switch.
	(PROCESSOR_COMMON): Set this to PROCESSOR_601.
	(PROCESSOR_POWERPC): Set this to PROCESSOR_604.
	(TARGET_OPTIONS): Add -mtune= switch.
	(rs6000_select): New structure to hold -mcpu=, -mtune= switches
	and the result of configuring --enable-cpu=.
	(OVERRIDE_OPTIONS): Pass TARGET_CPU_DEFAULT to
	rs6000_override_options.

	* rs6000/rs6000.c (rs6000_cpu_string): Delete global variable.
	(rs6000_select): Define new global variable.
	(rs6000_override_options): Take default_cpu argument, and provide
	support for it and -mtune= in addition to -mcpu=.

	* rs6000/{aix{3newas,41},lynx,netware,powerpc}.h (ASM_SPEC): Add
	support for -mcpu=power2.
	* rs6000/{rs6000,sysv4}.h (ASM_SPEC): Ditto.

	* rs6000/{aix41,eabiaix,eabile,lynx,powerpc}.h (CPP_SPEC): Make
	sure all -mcpu=xxx targets are supports.
	* rs6000/{rs6000,sysv4,sysv4le}.h (CPP_SPEC): Ditto.

	* rs6000/t-x{newas,rs6000}: New files to be used when making a
	cross compiler, to prevent libgcc1-test from being made.

	* rs6000/t-{x,}newas (MULTILIB_*): Build multlilib libraries for
	power, power2, 601, powerpc, and common mode processors.

	* rs6000/aix41ppc.h: Delete, no longer used.

Tue Dec 19 18:31:21 1995  Jim Wilson  <wilson@cygnus.com>

	* mips.c (mips_reg_names, mips_sw_reg_names, mips_regno_to_class):
	Add entry for new RAP reg.
	* mips.h (FIRST_PSEUDO_REGISTER): Increment.
	(FIXED_REGISTERS, CALL_USED_REGISTERS, REGISTER_NAMES,
	DEBUG_REGISTER_NAMES): Add entry for new RAP reg.
	(RAP_REG_NUM, RETURN_ADDRESS_POINTER_REGNUM): New macros.
	(RETURN_ADDR_RTX): Define.
	(ELIMINABLE_REGS, CAN_ELIMINATE, INITIAL_ELIMINATION_OFFSET):
	Add RETURN_ADDRESS_POINTER_REGNUM support.
	* emit-rtl.c (return_address_pointer_rtx): New global variable.
	(gen_rtx, init_emit_once): Add support for it.

Tue Dec 19 15:08:31 1995  Jason Merrill  <jason@yorick.cygnus.com>

	* collect2.c: Remove auto_export functionality.

Tue Dec 19 10:57:23 1995  Kim Knuttila  <krk@cygnus.com>

	* ginclude/ppc-asm.h: Do not compile the register macros under
	winnt.

Mon Dec 18 19:31:23 1995  Adam Fedor  <fedor@wilma.Colorado.EDU>

	* objc/encoding.c (objc_alignof_type): Handle _C_PTR case.

Mon Dec 18 18:40:34 1995  Jim Wilson  <wilson@chestnut.cygnus.com>

	* combine.c (simplify_rtx, case SUBREG): For SUBREG of a constant,
	use <= instead of < when comparing mode sizes.
	(force_to_mode, case NOT): Use full mask inside	the NOT operation.

	* expr.c (emit_block_move): When call emit_libary_call for bcopy,
	pass arguments using correct types and modes.
	(emit_push_insn, expand_assignment): Likewise.
	(clear_storage, store_expr): Likewise for memset and bzero.
	(store_constructor): Likewise for memset.
	* optabs.c (emit_cmp_insn): Likewise for memcmp and bcmp.
	* convex/convex.c (expand_movstr_call): Likewise for memcpy.
	* m88k/m88k.c (expand_block_move): Likewise for memcpy and bcopy.
	* mips/mips.c (block_move_call): Likewise for memcpy and bcopy.
	* mips/mips.h (INITIALIZE_TRAMPOLINE): Likewise for cacheflush.

	* c-common.c (WCHAR_TYPE_SIZE): Add a default definition.

	* sdbout.c (sdbout_symbol, case FUNCTION_DECL): Use DECL_INITIAL
	instead of DECL_EXTERNAL to identify declarations.

        * svr4.h (ASM_IDENTIFY_GCC): Don't output stab here.
	(ASM_IDENTIFY_GCC_AFTER_SOURCE): Output stab here instead of
	above.

	* stmt.c (expand_asm_operands): Handle numeric constraints in
	with the default case.

Mon Dec 18 16:49:43 1995  John F. Carr  <jfc@mit.edu>

	* expr.h (expand_mult_highpart_adjust): Declare.

Mon Dec 18 16:39:41 1995  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* expr.c (store_constructor): Fix error in last change: just
	copy MEM, but be sure to share address.
	(expand_expr, case CONSTRUCTOR): Likewise.

Mon Dec 18 16:22:46 1995  Michael Meissner  <meissner@tiktok.cygnus.com>

	* rs6000.h (ASM_GENERATE_INTERNAL_LABEL): Put a leading '*'
	in the label string so as to not confuse dbxout.c which believes
	it can skip the leading character of the string.

Mon Dec 18 09:44:56 1995  Mike Stump  <mrs@cygnus.com>

	* libgcc2.c (__empty): An empty function used by the C++ frontend for
	defaulting cleanup actions.

	* tree.c (save_tree_status, restore_tree_status): Save and restore
	temporary_firstobj, so that in progress objects that live on the
	temporary obstack are not reallocated, if we save and restore the
	tree status in their lifetime.


Mon Dec 18 07:49:34 1995  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* function.c (fixup_var_refs_1): Fix error in last change (when
	mode of VAR is not the same as PROMOTED_MODE).

Sun Dec 17 12:14:37 1995  Jeffrey A. Law  <law@cygnus.com>

	* pa.h (ASM_OUTPUT_FUNCTION_PREFIX): Don't surround section names
	with '$'.  That confuses collect2.
	(ASM_OUTPUT_SECTION_NAME): Likewise.

	* sched.c (canon_rtx): Recursively look for equivalences;
	look for expressions equivalent to MEMs.
	(true_dependence): Canonicalize inputs before operating
	on their values.
	(anti_dependence, output_dependence): Likewise.

        * jump.c (follow_jumps): Don't follow an unconditional jump
        that is not a simple_jump.

        * pa.c (override_options): Make 7100 scheduling the default.

        * pa.md: Add 2nd reload peephole somehow omitted from Nov27 changes.

	* regclass.c (regclass): Use SECONDARY_RELOAD_CLASS if it's
	defined to avoid useless work.

	* combine.c (find_split_point): Try to split SET_DEST
	just like we do for SET_SRC.

Sun Dec 17 11:37:25 1995  Torbjorn Granlund  <tege@noisy.tmg.se>

	* expmed.c (expand_mult_highpart): When doing widening multiply,
	put constant in a register.
	(expand_mult_highpart): When mode is word_mode use gen_highpart
	instead of right shift by size.

	* expr.c (expand_expr, case MULT_EXPR): Generalize code for widening
	multiply to handle signed widening multiply when only unsigned optab
	is defined, and vice versa.

Sun Dec 17 07:35:50 1995  Pat Rankin  <rankin@eql.caltech.edu>

	* vax/vms.h (WCHAR_TYPE_SIZE): Define.

Sun Dec 17 07:08:34 1995  Ronald F. Guilmette  <rfg@monkeys.com>.

	* fp-test.c: New file.

Sun Dec 17 07:06:03 1995  Peter Flass  <flass@lbdc.senate.state.ny.us>

	* i370.md (cmpqi): Fix generation of literal operand of CLM instruction
	to avoid double literals (=X'=F'...).

Sun Dec 17 06:57:02 1995  Paul Eggert  <eggert@twinsun.com>

	* cccp.c: Try harder not to open or stat the same include file twice.
	Simplify include file names so that they are more likely to match.
	E.g. simplify "./a//b" to "a/b".  Represent directories with simplified
	prefixes, e.g. replace "./a//b" with "a/b/", and "." with "".

	(absolute_filename): New function.
	(do_include): Use it.
	(read_name_map): Likewise; this makes things more consistent for DOS.

	(main, do_include, open_include_file): -M output now contains
	operands of -imacros and -include.

	(skip_to_end_of_comment): When copying a // comment, don't try to
	change it to a /* comment.
	(rescan, skip_if_group, skip_to_end_of_comment, macarg1): Tune.

	(rescan, skip_if_group, skip_to_end_of_comment, macarg1):
	If warn_comments is nonzero, warn if backslash-newline appears
	in a // comment.  Simplify method for finding /* /* */ comment.
	(skip_if_group): Optionally warn if /* /* */ appears between # and
	a directive inside a skipped if group.
	(macarg): Optionally warn if /* /* */ appears in a macro argument.

	(strncat, VMS_strncat, vms_ino_t, ino_t): Remove.
	(INCLUDE_LEN_FUDGE): Add 2 if VMS, for trailing ".h".
	(INO_T_EQ, INO_T_HASH): New macros.

	(struct file_buf): New member `inc'.
	(expand_to_temp_buffer): Initialize it.

	(struct file_name_list): New member `inc'.
	(struct file_name_list): New member `st'.
	c_system_include_path is now 1 if not 0.
	fname is now an array, not a pointer.
	(struct include_file): New members `next_ino', `deps_output', `st'.
	Remove members `inode' and `dev'; they are now in `st'.

	(INCLUDE_HASHSIZE): Rename from INCLUDE_HASH_SIZE.
	(include_hashtab): Rename from include_hash_table.
	(include_ino_hashtab): New variable.

	(main): Store file status in struct stat, not in long and int pieces.
	Use base_name to strip prefixes from file names.
	When printing directory prefixes, omit trailing / and print "" as ".".
	Fatal error if the input file is a directory.
	(main, path_include): Regularize operands of -include, -imacros,
	-isystem, -iwithprefix, and -iwithprefixbefore.
	Regularize default include directories.

	(do_include):
	Allocate dsp with alloca, since fname is now dynamically allocated.
	Use -3 to represent a never-opened file descriptor.
	Make copy of file name, and simplify the copy.
	Use base_name to identify the end of fname's directory.
	Do not prepend dir for "..." if it matches the search list's first dir.
	open_include_file now subsumes redundant_include_p and lookup_import.
	Use bypass_slot to remember when to skip directories when including
	a file that has already been seen.
	Instead of using 0 to represent the working directory, and ""
	to represent a directory to be ignored, use "" for the former,
	and assume the latter has been removed before we get here.
	Assume the directory prefixes have already been simplified.
	Report as errors all open failures other than ENOENT.
	Fatal error if fstat fails.
	Use new deps_output member to avoid printing dependencies twice.
	(bypass_hashtab): New variable.

	(do_include, open_control_file, record_control_macro): New convention:
	control_macro is "" if the file was imported or had #pragma once.
	(pragma_once_marker): Remove.

	(redundant_include_p, include_hash, lookup_include, lookup_import,
	add_import, file_size_and_mode): Remove; subsumed by open_include_file.
	(skip_redundant_dir_prefix): Remove; subsumed by simplify_filename.

	(is_system_include, read_name_map, remap_include_file):
	Assume arg is a directory prefix.

	(base_name, simplify_filename, remap_include_file,
	lookup_ino_include, new_include_prefix): New functions.

	(open_include_file): New arguments `importing' and `pinc'.
	Move filename mapping into new remap_include_file function.
	First try to find file by name in include_hashtab;
	if that doesn't work, open and fstat it and try to find it
	by inode and dev in include_ino_hashtab.

	(finclude): Get file status from inc->st instead of invoking fstat.
	Store inc into fp->inc so that record_control_macro doesn't
	need to do a table lookup.
	(finclude, record_control_macro): Accept struct include_file *
	instead of char * to identify include file.  All callers changed.

	(check_precompiled): Get file status from new argument `st'.

	(do_pragma): Output at most one warning about #pragma implementation.
	Always return 0 instead of returning garbage sometimes.
	(do_pragma, hack_vms_include_specification):
	Use base_name for consistency, and remove redundant code.

	From Per Bothner:
	Unify the 3 separate mechanisms for avoiding processing
	of redundant include files: #import, #pragma once, and
	redundant_include_p to use a single more efficient data structure.
	(struct file_name_list):  Remove no-longer needed field control_macro.
	(dont_repeat_files, all_include_files):  Remove, no longer used.
	(struct import_file):  Renmed to struct include_file, moved earlier
	in file, renamed field name to fname, and added control_macro field.
	(pragma_once_marker):  New constant.
	(import_hash_table):  Renamed to include_hash_table.
	(import_hash):  Renamed to include_hash.
	(IMPORT_HASH_SIZE):  Renamed to INCLUDE_HASH_SIZE.
	(main, path_include):  Don't clear removed control_macro field.
	(lookup_include):  New function - look up fname in include_hash_table.
	(redundant_include_p):  Re-write to use lookup_include.
	(lookup_import, record_control_macro):  Likewise.
	(add_import):  Defer fstat to caller.  Combine two xmallocs into one.
	(do_once):  Use pragma_once_marker in include_hash_table.
	(do_pragma):  Re-implement to scan include_hash_table.
	(do_include):  Use new lookup_include and add_import.

Sun Dec 17 06:45:43 1995  John F. Carr <jfc@mit.edu>

	* configure (savesrcdir): Do not create paths with trailing "/.".

	* combine.c (try_combine): When checking for two sets of the same
	register in a split insn, also test for setting a ZERO_EXTRACT,
	STRICT_LOW_PART, or SUBREG.

Sun Dec 17 06:37:00 1995  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* reload.c (push_secondary_reload): Don't strip paradoxical SUBREG
	if reload_class is CLASS_CANNOT_CHANGE_SIZE.

Sat Dec 16 18:24:20 1995  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* expr.c (expand_assignment): Fix alignment parm in emit_block_move.

Sat Dec 16 18:16:08 1995  John Hassey  (hassey@rtp.dg.com)

	* local-alloc.c (optimize_reg_copy_2): Don't attempt
	optimization if destination register dies.

Sat Dec 16 08:31:16 1995  Paul Eggert  <eggert@twinsun.com>

	* fold-const.c (fold):  Don't record overflow when negating
	unsigned constants.

Sat Dec 16 07:45:11 1995  Gran Uddeborg  (uddeborg@carmen.se)

	* configure (i[3456]-*-isc, gas, stabs): Remove crt* from extra_files

Sat Dec 16 07:03:33 1995  Philippe De Muyter (phdm@info.ucl.ac.be)

	* stor-layout.c (layout_record): When PCC_BITFIELD_TYPE_MATTERS,
	compute bitpos using field_size % type_align instead of field_size.

	* fixincludes (stdio.h):  Fix return type of fread and fwrite
	on sysV68.

Sat Dec 16 06:57:14 1995  Thomas Lundqvist  (d0thomas@dtek.chalmers.se)

	* function.c (fixup_var_refs_1): Fix two incorrect calls to single_set.

Fri Dec 15 22:30:27 1995  Torbjorn Granlund  <tege@noisy.tmg.se>

	* i386.h (REGISTER_MOVE_COST): Simplify.

Fri Dec 15 22:30:27 1995  Stan Cox  <coxs@dg-rtp.dg.com>

	* i386.h (TARGET_CPU_DEFAULT*, PROCESSOR_*,
	TARGET_{LEAVE,386_ALIGNMENT,PUSH_MEMORY,ZERO_EXTEND_WITH_AND,
	DOUBLE_WITH_ADD,BIT_TEST}): New macros.
	* i386.c (ix86_cpu*, ix86_isa*): New global variables.
	(override_options): Add -mcpu and -misa support
	* i386.md: Use TARGET* macros.
	* i386/dgux.{c,h}: New files.
	* m88k/t-dgux: (GCC_FOR_TARGET, T_CFLAGS): New macros.
	* m88k/t-dguxbcs: New file.
	* m88k/x-{dgux,dguxbcs}: (GCC_FOR_TARGET, X_CFLAGS): Removed.

Fri Dec 15 18:41:50 1995  Philippe De Muyter (phdm@info.ucl.ac.be)

	* fixincludes (sys/wait.h):  Add forward declaration of struct rusage
	on AIX 3.2.5.

Fri Dec 15 18:39:36 1995  Marco S Hyman  (marc@dumbcat.sf.ca.us)

	* xm-bsd386.h (DONT_DECLARE_SYS_SIGLIST): Defined.

Fri Dec 15 18:36:42 1995  Gran Uddeborg (uddeborg@carmen.se)

	* i386/svr3dbx.h (DO_GLOBAL_DTORS_BODY): Delete; obsolete.

Fri Dec 15 18:21:34 1995  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>

	* i386/i386iscgas.h, i386/t-iscscodbx: Deleted; long dead.

Fri Dec 15 10:01:27 1995  Stan Cox  <coxs@dg-rtp.dg.com>

	* configure (target_cpu_default) Set for 486/586/686
	(m88k-dg-dgux) Use t-dguxbcs instead of x-dguxbcs
	(i*86*) Change [345] to [3456]
	(i[3456]86-dg-dgux) Added
	* Makefile.in (out_object_file) Add MAYBE_TARGET_DEFAULT

Fri Dec 15 08:05:49 1995  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* function.c (init_temp_slots): New function.
	(init_function_start): Code moved to new function and called here.
	* toplev.c (rest_of_compilation): Call init_temp_slots.

	* expmed.c (store_bit_field): Don't use insv for BLKmode value.
	(store_split_bit_field): Set total_bits to BITS_PER_FOR for
	BLKmode value.

Fri Dec 15 06:35:36 1995  David Edelsohn  <edelsohn@mhpcc.edu>

	* xcoffout.h (DBX_STATIC_BLOCK_END): Use macro arguments.
	(xcoff_begin_function_line, xcoff_current_function_file): Remove
	unused extern declarations.
	(DBX_OUTPUT_MAIN_SOURCE_FILENAME): Use macro argument.
	* xcoffout.c (xcoff_begin_function_line): Make static.
	(xcoff_inlining): Likewise.
	(xcoff_current_function_file): Likewise.
	(xcoff_output_standard_types): Remove TARGET_64BIT dependencies from
	int and unsigned int.

Mon Oct 16 12:25:52 1995  Per Bothner  <bothner@kalessin.cygnus.com>

	* fix-header.c:  Support different kinds of functions (ANSI and
	Posix1).  Enable ANSI proptotypes if __STRICT_ANSI__.
	(namelist_end):  Removed.
	(std_include_table):  Divide up functions into kinds.
	(add_symbols):  New function.
	(read_scanfile, write_rbrac, main):  Use new data structures.

Thu Dec 14 19:17:12 1995  Torbjorn Granlund  <tege@noisy.tmg.se>

	* rs6000.md (umulsidi3): New pattern.

Thu Dec 14 18:08:59 1995  Torbjorn Granlund  <tege@noisy.tmg.se>

	* expmed.c (expand_divmod, case TRUNC_DIV_EXPR): Only reject
	larger-than-HOST_BITS_PER_WIDE_INT modes for general constants,
	not for powers-of-2.

	* i960.md (andsi3): Match op2 with logic_operand, change constraints
	accordingly.  Output andnot for negative op2.
	(iorsi3, xorsi3): Analogous changes.
	* i960.c (logic_operand): New function.
	(i960_print_operand): Handle code `C'.
	* i960.h (PREDICATE_CODES): Add logic_operand.
	(CONST_OK_FOR_LETTER_P): Handle `M'.
	* i960.md: Move all plain logical patterns together.
	* i960.h (SHIFT_COUNT_TRUNCATED): Define as 0 as appropriate.

	* clipper.md (untyped_call): New pattern.

	* m68k.md (ashrsi_31): New pattern.

Thu Dec 14 17:22:14 1995  Richard Earnshaw (rearnsha@armltd.co.uk)

	* arm/arm.c (output_move_double): Extract DFmode constants using
	REAL_VALUE_TO_TARGET_DOUBLE.

Thu Dec 14 15:05:13 1995  Doug Evans  <dje@cygnus.com>

	* Makefile.in (distclean): Delete float.h.
	* configure: Set CROSS_FLOAT_H from float_format.
	* config/float-i64.h: New file.
	* config/float-i32.h: New file.
	* config/float-vax.h: New file.
	* arm/cross-float.h: Delete.
	* arm/t-semi (CROSS_FLOAT_H): Delete.

Wed Dec 13 19:16:57 1995  Mike Stump  <mrs@cygnus.com>

	* expr.c (expand_expr, case ADDR_EXPR): Ensure op0 isn't QUEUED.

Wed Dec 13 19:12:21 1995  Paul Eggert  <eggert@twinsun.com>

	* gcc.c (my_strerror): Return "cannot access" if errno is 0.
	(perror_with_name, pfatal_with_name, perror_exec): Don't assume that
	the returned value from my_strerror contains no '%'s.
	(sys_nerr): Declare only if HAVE_STRERROR is not defined.

Wed Dec 13 19:05:47 1995  Alan Modra  (alan@spri.levels.unisa.edu.au)

	* Makefile.in (c-parse.y, objc-parse.y): Add warning that file is
	automatically generated.

Wed Dec 13 15:40:30 1995  Mike Stump  <mrs@cygnus.com>

	* function.c (identify_blocks): Start with a chain of BLOCKs to
	match the rest of the backend (dbxout.c), instead of just one
	BLOCK.
	(reorder_blocks): Ditto.
	(all_blocks): Ditto.

	* stmt.c (find_loop_tree_blocks): Pass the toplevel list of
	blocks, not just the first subblock.

Wed Dec 13 16:11:18 1995  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* expmed.c (expand_divmod): Don't use TARGET if it's the wrong mode.

Wed Dec 13 15:02:39 1995  Ian Lance Taylor  <ian@cygnus.com>

	* dbxout.c (struct typeinfo): Define.
	(typevec): Change to be struct typeinfo *.  Change other uses as
	appropriate.
	(struct dbx_file): Define if DBX_USE_BINCL.
	(current_file): New static variable if DBX_USE_BINCL.
	(next_file_number): Likewise.
	(dbxout_init): If DBX_USE_BINCL, initialize new variables.
	(dbxout_start_new_source_file): New function.
	(dbxout_resume_previous_source_file): New function.
	(dbxout_type_index): New function.
	(dbxout_range_type): Use dbxout_type_index.
	(dbxout_type): Likewise.  If DBX_USE_BINCL, initialize new typevec
	fields.
	* c-lex.c (check_newline): If DBX_DEBUGGING_INFO and write_symbols
	== DBX_DEBUG, call dbxout_start_new_source_file and
	dbxout_resume_previous_source_file when appropriate.
	* config/sparc/sunos4.h (DBX_USE_BINCL): Define.
	* config/svr4.h (DBX_USE_BINCL): Define.

Wed Dec 13 06:52:40 1995  Michael Meissner  <meissner@cygnus.com>

	* rs6000/win-nt.h (ASM_OUTPUT_EXTERNAL): Do not emit .extern for
	builtin functions.

Tue Dec 12 15:37:48 1995  David Edelsohn  <edelsohn@mhpcc.edu>

	* rs6000.c: Replace many uses of fprintf with putc and fputs.
	(output_function_profiler): Use more efficient mnemonics, target
	dependent mnemonics, asm_fprintf, and reg_names array.

	* rs6000.h: Replace many uses of fprintf with putc and fputs.

	* rs6000.h (INT_TYPE_SIZE): Remove TARGET_64BIT dependency.
	(MAX_INT_TYPE_SIZE): Delete.

Tue Dec 12 13:58:57 1995  Doug Evans  <dje@cygnus.com>

	* h8300/t-h8300 (MULTILIB_{OPTIONS,DIRNAMES}): Add -mint32 support.

Sun Dec 10 18:51:21 1995  Torbjorn Granlund  <tege@noisy.tmg.se>

	* rs6000.md (matcher for neg:SI (geu:SI ..)): Get ppc syntax right.

Sun Dec 10 08:47:16 1995  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* combine.c (simplify_if_then_else): Convert "a == b ? b : a" to "a".

	* expr.c (expand_expr, case CONSTRUCTOR): If TREE_READONLY,
	set RTX_UNCHANGING_P in TARGET.
	(expand_expr, case COMPONENT_REF): If result is BLKmode,
	use that to access object too.

Sun Dec 10 01:06:57 1995  Jeffrey A. Law  <law@cygnus.com>

	* pa.md (millicode delay slot description): Remove reference
	to defunct TARGET_MILLICODE_LONG_CALLS.

Sat Dec  9 18:05:03 1995  Jim Wilson  <wilson@cygnus.com>

	* expr.c (expand_expr, case INDIRECT_REF): Correct typo in May 8
	change.

	* sh.h (ADDRESS_COST): Define.
	* sh.md (subsi3): Rename to subsi3_internal.  Add new define_expand
	to handle subtracting a register from a constant.

Fri Dec  8 19:17:30 1995  Mike Meissner  <meissner@beauty.cygnus.com>

	* rs6000/rs6000.c (input_operand): Allow any integer constant, not
	just integers that fit in 1 instruction.

Fri Dec  8 10:45:07 1995  Richard Earnshaw (rearnsha@armltd.co.uk)

	* arm/lib1funcs.asm (RET, RETCOND): Define according to whether we
	are compiling for 32 or 26 bit mode.
	(all return instructions): Use RET or RETCOND as appropriate.

Wed Dec  6 06:58:23 1995  Richard Earnshaw (rearnsha@armltd.co.uk)

	* arm.c (arm_gen_constant): New function.
	(arm_split_constant): Split most of the functionality into
	arm_gen_constant.  Try to decide which way of handling the constant
	is optimal for the target processor.

	* arm.c (arm_prgmode): New enum.
	(target_{cpu,fpe}_name, arm_fast_multiply, arm_arch4): New variables.
	(all_procs): New table describing processors and capabilities.
	(arm_override_options): New function.
	(arm_return_in_memory): New function.
	(arm_rtx_costs): Adjust the multiply costs to cope with processors
	with fast multiplication instructions.
	(output_move_double): Use the ldm/stm variants more efficiently.
	Delete cases that can no-longer occur.
	(output_return_instruction, output_func_epilogue): Use TARGET_APCS_32,
	not TARGET_6 for determining the type of return instruction to emit.
	(final_prescan_insn case CALL_INSN): Use TARGET_APCS_32, not TARGET_6
	to determine condition preservation.
	* arm.h (CPP_SPEC): Add defines for the cpu type, hard or soft floating
	point, and the APCS PC size.
	(TARGET_*): Restructure.
	(ARM_FLAG_*): Many new definitions for different target options, not
	all of which are supported yet.
	(TARGET_SWITCHES): Use the ARM_FLAG_* definitions instead of explicit
	numbers.
	(prog_mode_type): New enum.
	(floating_point_type): Split emulated floating point into FP_SOFT[23].
	(OVERRIDE_OPTIONS): Call arm_override_options.
	(ARM_CPU_NAME): Default to NULL if not defined by a subtarget.
	(BYTES_BIG_ENDIAN): Can now be set as a compilation option.
	(RETURN_IN_MEMORY, DEFAULT_PCC_STRUCT_RETURN): New definitions.
	(GO_IF_LEGITIMATE_OFFSET): Use different HImode offsets if compiling
	for an architecture 4 target.  The offsets for floating point
	constants are the same as for integers if compiling TARGET_SOFT_FLOAT.
	(GO_IF_LEGITIMATE_ADDRESS): Don't allow PRE_INC and POST_DEC if
	the size is more than 4 bytes.  Restrict the range offsets for DImode;
	likewise for DFmode when TARGET_SOFT_FLOAT.
	(LEGITIMIZE_ADDRESS): Use symbol_mentioned_p, not LEGITIMATE_CONSTANT_P
	to determine if a constant address might be better in a register.
	Handle DFmode addresses in the same way as DImode if TARGET_SOFT_FLOAT.
	(LOAD_EXTEND_OP): If arm_arch4, then HImode also zero-extends.
	* arm.md (attributes): Rearrange order, so that condition clobbering
	can be automatically determined for call insns.
	(attribute cpu): Add new cpu ARM7.
	(attribute type): Add new type MULT.
	(attribute prog_mode): New attribute.
	(attribute conds): Clobbering of call insns can now be determined
	using prog_mode attribute.
	(function units "write_buf", "write_blockage"): Model the write buffer
	as two function units, so that conflicts are avoided more often.
	(funcion unit "core"): New function unit, so that elapsed cycles can
	be more accurately determined.
	(all anonymous patterns): Add names.
	(mulsidi3, umulsidi3): New patterns available with fast multiply
	variants.
	(all call insns): The conds attribute is now determined automatically.
	(zero_extendhisi): Expand for architecture 4 variants if appropriate.
	(*zero_extendhisi_insn): New pattern.
	(extendqi{hi,si}, extendhisi): Expand for architecture 4 variants if
	appropriate.
	(*extendhisi_insn, *extendqihi, *extendqisi): New patterns.
	(storehi_single_op): New expand.
	(movhi): Handle architecture 4 expansion.
	(*movhi_insn_arch4): New pattern.
	(*movhi_*): Adjust applicability conditions to handle architecture 4.
	(reload_outdf): Handle pre/post inc/dec reloads.
	(tablejump): Delete.
	(matcher for optimized tablejump): delete.
	(casesi): New expand.
	(casesi_internal): New pattern.
	* semi.h (EXIT_BODY): Delete.
	(TARGET_DEFAULT): Set to ARM_FLAG_APCS_32.
	(CPP_SPEC): Define.
	arm/cross-float.h: New file, used when building a cross-compiler.
	* t-semi: Don't define inhibit_libc when building libgcc2.a.
	(CROSS_FLOAT_H): Define.

	* arm.c	({symbol,label}_mentioned_p): New functions.
	(add_constant, dump_table, fixit, find_barrier, broken_move): New
	support functions for handling constant spilling.
	(arm_reorg): New constant spilling pass, for putting unhandlable
	constants into the rtl where we can load them efficiently.
	(output_load_symbol): Delete.
	* arm.h (SECONDARY_OUTPUT_RELOAD_CLASS): No need to handle floating
	point constants any more, since arm_reorg will deal with them.
	(LEGITIMATE_CONSTANT_P): Is now anything that doesn't contain a
	LABEL.
	(GO_IF_LEGITIMATE_ADDRESS): Recognize address expressions generated
	by arm_reorg, but only after reload has completed.
	(MACHINE_DEPENDENT_REORG): Define.
	(ASM_OUTPUT_SPECIAL_POOL_ENTRY): There should be nothing left in
	the pool, even if it might look like it.
	* arm.md (*movsi_insn): Much simpified now that constants are handled
	properly.
	(movaddr): New expand.
	(movsf, movdf): No need to force constants into the pool any more.
	(*movdf_hard_insn): Much simplified.
	(consttable_4, consttable_8, consttable_end, align_4): New patterns
	for supporting embedded constants.

	* configure: New target arm-semi-aof.
	* arm.c (strings_fpa): Use a form which is common to both GAS and
	ARMASM.
	(output_return_instruction, output_func_epilogue): Call
	assemble_external_libcall, before trying to generate an abort call
	in the assembler.
	(arm_asm_output_label): Call ARM_OUTPUT_LABEL, rather than assuming
	that labels are followed by a colon.
	(aof_text_section, aof_add_import, aof_delete_import,
	 aof_dump_imports): New functions to support ARMASM assembler
	generation.
	* arm/aout.h: New file.
	* arm/aof.h: New file.
	* arm.h (most assembler-specific defines): Move to arm/aout.h.
	(CONSTANT_ADDRESS_P): Can't directly access constant strings when
	generating assembler for ARMASM.
	(ENCODE_SECTION_INFO): Don't define if generating ARMASM assembler.
	(ASM_OUTPUT_INTERNAL_LABEL): Generalize, so that it can be used
	with all targeted assemblers.
	(ASM_OUTPUT_LABEL): Call arm_asm_output_label.
	* riscix.h: Include arm/aout.h, not arm/arm.h.
	* riscix1-1.h: Likewise.
	* semi.h: Likewise.
	* arm/semiaof.h: New file.
	* arm/t-semiaof: New file.

Mon Dec  4 22:17:37 1995  Jason Merrill  <jason@yorick.cygnus.com>

	* gcc.c (LIBGCC_SPEC): Do link with libgcc when -shared.
	* alpha.h (LIBGCC_SPEC): Remove.
	* linux.h (LIBGCC_SPEC): Remove.
	* svr4.h (LIBGCC_SPEC): Remove.
	* i386/t-crtpic (TARGET_LIBGCC2_CFLAGS): Use -fPIC.
	* t-pa (TARGET_LIBGCC2_CFLAGS): Use -fPIC.
	* sparc/t-sunos41 (TARGET_LIBGCC2_CFLAGS): Use -fPIC.
	* sparc/t-sol2 (TARGET_LIBGCC2_CFLAGS): Use -fPIC.
	* configure (i386-linux): Use i386/t-crtpic.

	* i386/xm-sco.h: #define NO_SYS_SIGLIST.

Mon Dec  4 21:30:37 1995  Jim Wilson  <wilson@mole.gnu.ai.mit.edu>

	* sh/sh.c (shiftcosts): For SH3, max cost of arithmetic right
	shift is 3.
	(expand_ashiftrt): For SH3, if shift cost is more than 3, then
	call gen_ashrsi3_d to use shad instruction.

Mon Dec  4 18:29:08 1995  Jason Merrill  <jason@yorick.cygnus.com>

	* c-decl.c (finish_struct): Don't mess with the type of bitfields.

Mon Dec  4 15:28:02 1995  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)

	* expr.c (store_constructor, record): If field is READONLY,
	set RTX_UNCHANGING_P in TO_RTX.

Mon Dec  4 12:59:33 1995  Ian Lance Taylor  <ian@cygnus.com>

	* config/sparc/t-sol2 (CRTSTUFF_T_CFLAGS): Use -fPIC
	unconditionally, since binutils 2.6 supports it.

Sun Dec  3 20:55:43 1995  Jeffrey A. Law  <law@cygnus.com>

	* pa.h (ASM_OUTPUT_FUNCTION_PREFIX): Handle arbitrary sections.
	(ASM_OUTPUT_SECTION_NAME): Define.

Sat Dec  2 22:19:16 1995  Jeffrey A. Law  (law@cygnus.com)

	* pa.h: Replace many uses of fprintf with fputs.
	* pa.c: Likewise.
	* pa-pro.h: Likewise.

	* pa.h (SECONDARY_RELOAD_CLASS): Don't call secondary_reload_class
	to handle trivial cases.
	* pa.c (secondary_reload_class): Rework to be more efficient.

Sat Dec  2 07:52:46 1995  Michael Meissner  <meissner@tiktok.cygnus.com>

	* rs6000/rs6000.md (movsi): Don't split large constants in the
	movsi pattern, let the define_split split it later as needed.

Fri Dec  1 16:00:42 1995  Brendan Kehoe  <brendan@cygnus.com>

	* sparc/sparc.c (output_double_int): Handle CODE_LABEL's if v9.

Fri Dec  1 09:13:23 1995  Michael Meissner  <meissner@tiktok.cygnus.com>

	* m68k/m68k.md (decrement_and_branch_until_zero): Split into a
	define_expand and an anonymous define_insn.
	* fx80/fx80.md (decrement_and_branch_until_zero): Ditto.
	* m88k/m88k.md (decrement_and_branch_until_zero): Ditto.

Thu Nov 30 15:02:16 1995  Jim Wilson  <wilson@mole.gnu.ai.mit.edu>

	* sh.c (noncall_uses_reg): New function.
	(machine_dependent_reorg): Add support for TARGET_RELAX.
	(final_prescan_insn): Likewise.
	* sh.h (ASM_SPEC, LINK_SPEC): Pass on -mrelax.
	(RELAX_BIT, TARGET_RELAX): New macros.
	(TARGET_SWITCHES): Add -mrelax.

	* sh/sh.c (insn-attr.h): Include.
	(pragma_nosave_low_regs): New global variable.
	(calc_live_regs): If SH3 and pragma_nosave_low_regs, then don't
	save registers r0 through r7 for interrupt functions.
	(function_epilogue): Clear pragma_nosave_low_regs.
	(handle_pragma): Set pragma_nosave_low_regs if see pragma for it.

	* sh/sh.h (FUNCTION_PROFILER): Use trap #33 instead of trap #5.
	Put additional .align before trapa instruction.

Thu Nov 30 14:45:13 1995  Doug Evans  <dje@canuck.cygnus.com>

	* sparc.md (seqdi_special_trunc, snedi_special_trunc,
	seqsi_special_extend, snesi_special_extend): Delete uses of SUBREG.
	Make compare modes match modes of operands.
	(snesi_zero_extend, snedi_zero_trunc_sp32, snedi_zero_trunc_sp64,
	seqsi_zero_extend, seqdi_zero_trunc_sp32, seqdi_zero_trunc_sp64):
	New patterns.

Thu Nov 30 12:27:22 1995  Michael Meissner  <meissner@tiktok.cygnus.com>

	* genmultilib: Take a 4th argument that says are the exceptions to
	the multilibs, so illegal combinations can be eliminated.

	* Makefile.in (multilib.h): Pass $(MULILIB_EXCEPTIONS) as the 4th
	argument to genmultilib.

	* configure (powerpc*): Remove little endian and eabiaix versions
	of the t-* files.  Accept powerpc{,le}-*-sysv in addition to
	*-sysv4.
	(powerpc{,le}-*-eabisim): Use standard t-eabigas instead of
	t-eabisim.
	(powerpcle-*-{winnt3,pe}): Add support for Windows NT on PowerPC.
	* rs6000/t-{eabiaix,eabisim,eabilegas,ppclegas}: Delete.

	* rs6000/{t-winnt,win-nt.h}: New files for PowerPC Windows NT.

	* ginclude/ppc-asm.h: New file to provide common macros for the
	various PowerPC calling sequences.
	* rs6000/eabi.asm: Use ppc-asm.h.

	* rs6000/aix3newas.h (CPP_SPEC): Add support for -mcpu=603e, 602,
	and 620.
	* rs6000/{aix41,powerpc,rs6000,eabi{aix,le}}.h (CPP_SPEC): Ditto.
	* rs6000/sysv4{,le}.h (CPP_SPEC): Ditto.

	* rs6000/aix3newas.h (LINK_SPEC): If cross compiling, don't use
	absolute paths.
	* rs6000/{aix41,aixppc,rs6000}.h (LINK_SPEC): Ditto.

	* rs6000/eabi.h (INVOKE__main): Don't define any more.
	(ASM_OUTPUT_INT): Move to sysv4.h.
	({STARTFILE,LIB}_SPEC): If -msim or -mmvme add the appropriate
	libraries.

	* rs6000/{eabiaix,eabile,sysv4{,le}}.h (CPP_SPEC): Add support for
	-mcall-{aixdesc,nt} directives.
	(MULTILIB_DEFAULTS): Define.

	* rs6000/eabi{,le}sim.h (TARGET_DEFAULT, CPP_SPEC): No longer
	define, simulator supports floating point.
	({STARTFILE,LIB}_SPEC): If -mvme, use mvme libraries, not
	simulator libraries.

	* rs6000/{mach,netware}.h (TARGET_AIX): Define as 0.

	* rs6000/netware.h (RS6000_OUTPUT_BASENAME): Don't redefine
	anymore.
	(STRIP_NAME_ENCODING): Undef.

	* rs6000/rs6000.c (rs6000_save_toc_p, rs6000_abi): New globals.
	(rs6000_override_options): Add 602, 603e, and 620 support.
	(count_register_operand): New function to return true if operand
	is the count register.
	(easy_fp_constant): All constants are easy if -msoft-float.
	(volatile_mem_operand): New function to return true if operand is
	in volatile memory.
	({fp_,}reg_or_mem_operand): Call volatile_mem_operand.
	(input_operand): Allow support for Windows NT loading SYMBOL_REFs
	and LABEL_REFs from the TOC.
	(function_arg_boundary): On Windows NT, any argument >= 8 bytes
	must be double word aligned.
	(function_arg{_advance,}): Call function_arg_boundary to determine
	if we need to align to an odd register for large arguments.
	Changes to accomidate new method of determining which ABI we're
	adhering to.
	(expand_block_move_mem): Copy RTX_UNCHANGING_P, and if
	MEM_UNALIGNED_P is defined, copy that too.
	(expand_block_move): Copy dest/src to registers using
	copy_addr_to_reg.
	(print_operand): Changes to accomidate Windows NT.
	(first_reg_to_save): Ditto.
	(rs6000_stack_info): Ditto.
	(debug_stack_info): Ditto.
	(output_{prolog,epilog,toc,function_profiler}): Ditto.
	(rs6000_stack_info): Save main's arguments around __eabi call.
	(svr4_traceback): Delete, current V.4 ABI no longer wants
	tracebacks in this format.
	(output_prolog): Call __eabi here, saving and restoring main's
	args if needed.  Save the toc pointer if needed.
	(get_issue_rate): New function to return # of instructions a
	machine can issue at once.
	(rs6000_sync_trampoline): Emit instructions to synchronize the
	PowerPC caches after a trampoline.
	(rs6000_trampoline_{template,size}): New functions to provide
	common trampoline support for all ABI's.
	(rs6000_initialize_trampoline): Ditto.

	* rs6000/rs6000.h (TARGET_{WINDOWS_NT,AIX,MACOS}): Define.
	(processor_type): Add 602.
	(PROCESSOR_COMMON): Assume the current processor is a 604, not a
	601.
	(SUBTARGET_OPTIONS): Define if not defined.
	(TARGET_OPTIONS): Include SUBTARGET_OPTIONS.
	(COUNT_REGISTER_REGNUM): Define as 66.
	(EXTRA_CONTRAINT): Add 'S' and 'T' for Windows NT.
	(rs6000_abi): Add ABI_AIX_NODESC, ABI_NT.
	(DEFAULT_ABI): Define if not defined.
	(rs6000_stack): Add fields for Windows NT support.
	(RS6000_SAVE_TOC): Add for Windows NT support.
	(FUNCTION_ARG_BOUNDARY): Call function_arg_boundary.
	(trampoline macros): Call trampoline functions in rs6000.c.
	(RETURN_ADDRESS_OFFSET): Add Windows NT support.
	(toc_section): Skip leading '*'.
	(PREDICATE_CODES): Add volatile_mem_operand,
	count_register_operand.
	(MACHINE_issue_rate): Define.
	(function decls): Add new function decls from rs6000.c.

	* rs6000/rs6000.md (cpu attribute): Add 602.
	(function units): Update to match reality better.
	(calls through pointer): Rework to support Windows NT.
	(movsi): Add Windows NT support.
	(movstrsi): Remove match_operand predicates, since
	expand_block_move does the checking.
	(sync_isync): Delete.
	(icbi, dcbst, sync, isync): New insns to generate the named
	instruction for making trampolines on eabi/V.4 properly flush the
	caches.
	(decrement_and_branch_on_count): Rename from
	decrement_and_branchsi.  Add update of count in insn pattern.

	* rs6000/sysv4.h (TARGET_SWITCHES): Drop -mtraceback.  Keep
	-mno-traceback but don't do anything with it.  Add
	-mcalls-{nt,aixdesc}.  Add -m{,no-}relocatable-lib.  Add -msim,
	-mmvme, and -memb.
	(TARGET_TOC): Update for use with -mcalls-{nt,aixdesc}.
	(SUBTARGET_OVERRIDE_OPTIONS): Update for new switches.
	(RS6000_OUTPUT_BASENAME): Delete.
	(toc_section): Add support for -mcall-{nt,aixdesc}.
	(ASM_OUTPUT_SPECIAL_POOL_ENTRY_P): Ditto.
	(ASM_DECLARE_FUNCTION_NAME): Use STRIP_NAME_ENCODING instead of
	RS6000_OUTPUT_BASENAME.  For -mcall-{nt,aixdesc} emit the proper
	function descriptor.
	(ASM_SPEC): Pass appropriate -mxxx switches to the assembler based
	on the -mcpu=xxx options.
	(ASM_OUTPUT_INT): Move here from eabi.h.
	(ENCODE_SECTION_INFO): If -mcall-{nt,aixdesc} add approriate magic
	so function name has two or one leading periods.
	(ASM_OUTPUT_SOURCE_LINE): Delete, use version in svr4.h.
	(trampoline macros): Call trampoline functions in rs6000.c.

	* t-{eabi,ppc}{,gas} (EXTRA_HEADERS): Add ginclude/ppc-asm.h.
	(LIB2FUNCS_EXTRA): Depend on eabi.S, not eabi.s.
	(eabi.S): Rename from eabi.asm.

	* t-{eabi,ppc}gas (MULTILIB_*): Add -mcall-aixdesc libraries, but
	don't build either little endian or -mrelocatable versions of
	those libraries.

Tue Nov 28 00:10:27 1995  David Edelsohn  <edelsohn@mhpcc.edu>

	* rs6000.md (divsi3): Reorder so common mode does not negate
	power-of-2 shift optimization.

Wed Nov 29 22:06:11 1995  J.T. Conklin  <jtc@rtl.cygnus.com>

 	* configure (sparc-*-solaris2*): Add gcrt1.o to extra_parts.
 	* sparc/sol2.h (STARTFILE_SPEC): Link with gcrt1.o with -pg.
 	* sparc/sol2-g1.asm: New file, startup code for profiled
  	executables.
 	* sparc/t-sol2: Add make rule for gcrt1.o.
 	* sparc/gmon-sol2.c (_mcleanup): Add support for PROFDIR
 	environment variable.

Wed Nov 29 21:41:13 1995  Ian Lance Taylor  <ian@cygnus.com>

	* mips/abi64.h (CPP_SPEC): If -msingle-float and not
	-msoft-float, pass -D__mips_single_float.  Likewise for -m4650 and
	not -msoft-float.
	* mips/dec-bsd.h (CPP_SPEC): Likewise.
	* mips/dec-osf1.h (CPP_SPEC): Likewise.
	* mips/elf64.h (CPP_SPEC): Likewise.
	* mips/iris3.h (CPP_SPEC): Likewise.
	* mips/iris5.h (CPP_SPEC): Likewise.
	* mips/mips.h (CPP_SPEC): Likewise.
	* mips/netbsd.h (CPP_SPEC): Likewise.
	* mips/osfrose.h (CPP_SPEC): Likewise.
	* mips/t-ecoff (MULTILIB_OPTIONS, MULTILIB_DIRNAMES,
	MULTILIB_MATCHES): Add -msingle-float support.

Wed Nov 29 17:57:48 1995  Doug Evans  <dje@cygnus.com>

	* toplev.c (main): Invoke OPTIMIZATION_OPTIONS after target_flags
	has been initialized so sets of target_flags aren't clobbered.

	* cccp.c (do_include): Recognize c:\foo as absolute path name in DOS.

	* svr4.h (MD_EXEC_PREFIX): Don't use if cross compiling.
	(MD_STARTFILE_PREFIX): Likewise.
	(LINK_SPEC): Don't use absolute path names if cross compiling.
	* svr3.h (LIB_SPEC): Likewise.

	* gcc.c (do_spec_1): Fix typos in version calculation.

Wed Nov 29 14:06:13 1995  Jim Wilson  <wilson@cygnus.com>

	* sh.md (ashrsi3_d): Use %0 not %1 in output pattern.

	* svr4.h (MAX_OFILE_ALIGNMENT): Define.

	* mips/iris5.h (WORD_SWITCH_TAKES_ARG): Define.
	(LINK_SPEC): Add rpath.
	* mips/iris6.h (LINK_SPEC): Likewise.

	* stupid.c (stupid_mark_regs): For hard registers, use regno+j
	instead of just regno in MARK_LIVE_AFTER and SET_HARD_REG_BIT calls.

	* c-common.c (combine_strings): Add support for WCHAR_TYPE as short.

Wed Nov 29 13:59:58 1995  J"orn Rennecke (amylaar@meolyon.hanse.de)

	* c-decl.c (duplicate_decls): Add new paramter different_binding_level.
	Lots of changes to use new new parameter.
	(pushdecl): Delete variable declared_global.  New variable
	different_binding_level and code to set it.  Move extern/static
	warning before duplicate_decls call.  Don't let global typedefs
	conflict with nested extern declarations.  Move oldglobal test
	inside code for setting IDENTIFIER_LIMBO_VALUE.
	(lookup_name_current_level_global): Delete.
	* c-tree.h (merge_attributes): New declaration.
	* c-typeck.c (merge_attributes): New function.  Move code from
	common_type to here.
	(common_type): Call merge_attributes instead of having inline code.
	* integrate.c (integrate_decl_tree): Delete variable newd.
	Always set DECL_ABSTRACT_ORIGIN before calling pushdecl.

Tue Nov 28 21:57:04 1995  Jim Wilson  <wilson@cygnus.com>

	* mips.c (mips_function_value): Add check for i > 0 when deciding
	if structure should be return in FP registers.

Tue Nov 28 12:47:52 1995  Jeffrey A. Law  <law@cygnus.com>

	* pa.md (define split for (plus (reg) (large_constant)): Try
	another way to handle this with only 2 insns.  From Tege.

Mon Nov 27 02:05:18 1995  Jeffrey A. Law  <law@cygnus.com>

	* lib1funcs.asm, pa-pro.h, t-pro.h, xm-papro.h: New PA
	target files.
	* configure (hppa*-*-pro*): Use new target files.

	* toplev.c (rest_of_compilation): Always call jump_optimize
	at least once.

	* pa.h (ASM_OUTPUT_EXTERNAL): Don't let assemble_name clobber
	the value of TREE_SYMBOL_REFERENCED.

	* pa-ghpux9.h (LINK_SPEC): Pass "-z" to the linker to enable
	trap on null pointer dereference for programs built on hpux9.
	* pa-hpux9.h, pa1-ghpux9.h, pa1-hpux9.h: Likewise.

	* pa.c (output_function_prologue): No longer need to keep
	track of the total number code bytes when TARGET_GAS &&
	not TARGET_PORTABLE_RUNTIME.
	* pa.h (DBX_OUTPUT_MAIN_SOURCE_FILE_END): Use .NSUBSPA when
	not TARGET_PORTABLE_RUNTIME.
	(ASM_OUTPUT_FUNCTION_PREFIX): Define.  Prefix functions with
	.NSUBSPA when TARGET_GAS and not TARGET_PORTABLE_RUNTIME.

	* pa.md (symbolic high patterns): Use 'H' to print the symbolic
	address so that the constant part gets rounded.
	* pa.c (print_operand): Handle 'H' operand for high part of a
	symbolic address with a rounded constant.
	(output_global_address): New argument "rounded_constant".  All
	callers changed appropriately.

	* x-pa-hpux (FIXPROTO_DEFINES): Add -D_HPUX_SOURCE.

	* pa.h (CPP_SPEC): Only pass -D_HPUX_SOURCE and -D_HIUX_SOURCE if
	-ansi is not present.
	(CPP_PREDEFINES): Remove -D_HPUX_SOURCE and/or -D_HIUX_SOURCE.
	* pa-ghiux.h (CPP_PREDEFINES): Likewise.
	* pa-gux7.h (CPP_PREDEFINES): Likewise.
	* pa-hiux.h (CPP_PREDEFINES): Likewise.
	* pa-hpux.h (CPP_PREDEFINES): Likewise.
	* pa-hpux7.h (CPP_PREDEFINES): Likewise.
	* pa1-ghiux.h (CPP_PREDEFINES): Likewise.
	* pa1-hiux.h (CPP_PREDEFINES): Likewise.

	* pa-hpux.h (LINK_SPEC): If -mlinker-opt, then pass -O to the
	linker.
	* pa-ghpux.h, pa-hpux9.h, pa-ghpux9.h: Likewise.
	* pa1-ghpux9.h, pa1-hpux9.h: Likewise.
	* pa.h (LINK_SPEC): Likewise.
	(TARGET_SWITCHES): Add -mlinker-opt.

	* pa.md (all peepholes): Disable if TARGET_SOFT_FLOAT.

	* pa.c (pa_reorg): If TARGET_GAS, then emit insns to mark
	the beginning and end of the branch table.
	* pa.md (begin_brtab): New insn.  Just a marker so GCC knows
	where to put the .begin_brtab pseudo-op.
	(end_brtab): Similarly.

	* pa.h (EXTRA_SECTIONS): Add in_ctors and in_dtors if
	CTORS_SECTION_FUNCTION is defined.  Else define dummy
	versions of CTORS_SECTION_FUNCTION and DTORS_SECTION_FUNCTION.
	(EXTRA_SECTION_FUNCTIONS): Add CTORS_SECTION_FUNCTION and
	DTORS_SECTION_FUNCTION.

	* pa.md: Add peepholes to improve spill code generated
	by reload when we run out of FP registers.

	* xm-pa.h: Remove spurious double-quote.

	* pa.md (call expanders): For indirect calls, load %r22 with the
	function's address.
	(indirect call patterns): No need to copy the call address into
	%r22 anymore.

	* pa.c (output_cbranch): Fix buglet in length handling of
	backwards branches with unfilled delay slots.
	(output_bb, output_bvb, output_dbra, output_movb): Likewise.

	* pa.md: Fix off-by-one error in length computations for all
	conditional branch patterns.

	* pa.h (output_bvb): Declare.
	* pa.c (output_bvb): New function to output branch on variable
	bit insns.
	* pa.md (branch-on-variable-bit): New patterns.

	* pa.h (TARGET_MILLICODE_LONG_CALLS): Delete swtich and all
	references.
	(output_millicode_call): Declare new function
	* pa.md (millicode calls): Update length computation to handle
	variable length millicode calls.
	(call pattners): Likewise.
	(indirect call patterns): Update length compuations and output
	templates to handle variable length millicode calls.
	(plabel_dereference): Likewise.
	* pa.c (override_options): Give warnings when incompatable
	options are used.
	(output_mul_insn): Call output_millicode_call instead of
	output_call, eliminate last argument to output_millicode_call.
	(output_div_insn): Likewise.
	(output_mod_insn): Likewise.
	(output_call): Rewrite long call code to handle variable length
	millicode calls.  Eliminate support for calling mul, div and mod
	millicode routines.
	(output_millicode_call): New function for calling mul, div and mod
	millicode routines.

	* pa.md (abssi2): New pattern.

	* pa.c (secondary_reload_class): Loads from reg+d addresses into
	FP registers don't need secondary reloads.
	* pa.h: Delete soem #if 0 code.  Update some comments.
	(EXTRA_CONSTRAINT, case 'Q'): Only accept valid memory addresses.

	* pa.h (RTX_COSTS): Tege's rewrite.

	* pa.c (hppa_legitimize_address): Generate unscaled indexed
	addressing for (plus (symbol_ref) (reg)).
	(emit_move_sequence): Set REGNO_POINTER_FLAG appropriately
	to encourage unscaled indexing modes.
	(basereg_operand): New function for unscaled index address support.
	* pa.md (unscaled indexing patterns): New patterns for unscaled
	index address support.

	* pa.h (MOVE_RATIO): Define.
	* pa.md (movstrsi expander): Refine tests for when to use the
	library routine instead of an inlined loop copy.  Provide an
	additional scratch register for use in the inlined loop copy.
	(movstrsi_internal): Name the pattern for ease of use.  Add
	additional scratch register.
	* pa.c (output_block_move): Greatly simplify.  Use 2X unrolled
	copy loops to improve performance.
	(compute_movstrsi_length): Corresponding changes.

	* pa.c (print_operand): Handle 'y' case for reversed FP
	comparisons.  Delete some #if 0 code.  Fix various comment typos.
	* pa.md (fcmp patterns): Try and reverse the comparison to avoid
	useless add,tr insns.

Sun Nov 26 14:47:42 1995  Richard Kenner  <kenner@mole.gnu.ai.mit.edu>

	* Version 2.7.2 released.

